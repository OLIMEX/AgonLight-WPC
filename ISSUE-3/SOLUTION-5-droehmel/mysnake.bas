   10 REM MYSNAKE, Created 2023 by Denis Boehme, License: MIT license
   20 PROC_udg
   30 CLS
   40 COMPLEX% =3
   50 PRINT "MYSNAKE V0.0.1": PRINT : PRINT "Controls:" : PRINT
   60 PRINT "h LEFT     j DOWN       k UP       l RIGHT"
   70 PRINT : PRINT "Press eny key to start"
   80 PRINT INKEY$(10000);
   90 MODE 3
  100 LEVEL% = 20
  110 SPEED%=2
  120 TAIL_WRAP% = 1000
  130 DIM SNAKE_BODY_X%(TAIL_WRAP%)
  140 DIM SNAKE_BODY_Y%(TAIL_WRAP%)
  150 MAX_X% = 80
  160 MAX_Y% = 40
  170 LEVEL% = LEVEL% + 30
  180 COMPLEX% = COMPLEX%+1
  190 SCORE%=0
  200 SPEED%=SPEED% -2
  210 IF SPEED% < 2 THEN SPEED% =2
  220 CLS: PROC_create_playfield(COMPLEX%)
  230 TAIL_WRAP% = 300
  240 SNAKE_FACTOR% = 3
  250 FOR I% = 0 TO TAIL_WRAP% - 1
  260   SNAKE_BODY_X%(I%) = -1
  270 NEXT I%
  280 HEAD_IDX% = 1: TAIL_IDX%=0
  290 SNAKE_LEN% = 1
  300 SNAKE_X% = MAX_X%/2 - 2
  310 SNAKE_Y% = MAX_Y%/2
  320 DELTA_X%=0
  330 DELTA_Y%=0
  340 SPEED%=10
  350 K$=INKEY$(SPEED%)
  360 OLD_DX%=DELTA_X%: OLD_DY%=DELTA_Y%
  370 IF K$ = "l" THEN DELTA_X% = 1 : DELTA_Y% = 0
  380 IF K$ = "h" THEN DELTA_X% = -1 : DELTA_Y% = 0
  390 IF K$ = "j" THEN DELTA_Y% = 1 : DELTA_X% = 0
  400 IF K$ = "k" THEN DELTA_Y% = -1 : DELTA_X% = 0
  410 TC%=130
  420 DIRCH%=0
  430 IF OLD_DX% <> DELTA_X% OR OLD_DY% <> DELTA_Y% THEN DIRCH%=1
  440 IF DIRCH% = 0 AND DELTA_X% = 0 THEN TC%=129
  450 IF DIRCH%=1 AND DELTA_X%<>0 THEN TC%=FN_turnX(DELTA_X%,OLD_DY%)
  460 IF DIRCH%=1 AND DELTA_Y%<>0 THEN TC%=FN_turnY(DELTA_Y%,OLD_DX%)
  470 IF DIRCH%=0 AND DELTA_Y%<>0 THEN TC%=129
  480 IF DIRCH%=0 AND DELTA_X%<>0 THEN TC%=130
  490 PRINT TAB(40,41)  SCORE%;"/";LEVEL% "  "
  500 OLD_X% = SNAKE_X%: OLD_Y% = SNAKE_Y%
  510 SNAKE_X% = SNAKE_X% + DELTA_X%
  520 SNAKE_Y% = SNAKE_Y% + DELTA_Y%
  530 SNAKE_MOVED%=0
  540 IF SNAKE_X% <> OLD_X% OR SNAKE_Y% <> OLD_Y% THEN SNAKE_MOVED%=1
  550 IF SNAKE_X% > MAX_X% OR SNAKE_X% < 0 THEN GOTO 720
  560 IF SNAKE_Y% > MAX_Y% OR SNAKE_Y% < 0 THEN GOTO 720
  570 VDU 31,0,0
  580 OLDCHAR$=GET$(SNAKE_X%,SNAKE_Y%)
  590 IF OLD_X% = SNAKE_X% AND OLD_Y% = SNAKE_Y% THEN OLDCHAR$ = " "
  600 IF OLDCHAR$ = "*" THEN SNAKE_LEN% = SNAKE_LEN% + SNAKE_FACTOR% : OLDCHAR$=" " : SOUND 0,-15,100,1 : SCORE% = SCORE% + 1
  610 IF SCORE% = LEVEL% THEN PRINT "YOU WIN!" : GOTO 790
  620 IF OLDCHAR$ <> " " THEN GOTO 720
  630 PRINT TAB(OLD_X%,OLD_Y%);: VDU TC%
  640 PRINT TAB(SNAKE_X%,SNAKE_Y%);: VDU 128
  650 SNAKE_BODY_X%(HEAD_IDX%) = SNAKE_X% : SNAKE_BODY_Y%(HEAD_IDX%) = SNAKE_Y%
  660 IF SNAKE_BODY_X%(TAIL_IDX%) >= 0 AND SNAKE_MOVED%=1 THEN PRINT TAB(SNAKE_BODY_X%(TAIL_IDX%), SNAKE_BODY_Y%(TAIL_IDX%)) " "
  670 HEAD_IDX% = HEAD_IDX% + 1 
  680 IF HEAD_IDX% >= TAIL_WRAP% THEN HEAD_IDX% = 0
  690 TAIL_IDX% = HEAD_IDX% - SNAKE_LEN%
  700 IF TAIL_IDX% < 0 THEN TAIL_IDX% = TAIL_WRAP% + TAIL_IDX%
  710 GOTO 350
  720 PRINT TAB(30,20) "GAME OVER"
  730 PRINT TAB(20,21) "press q to quit - r for restart"
  740 REPEAT
  750   K$ = INKEY$(120)
  760 UNTIL K$ = "q" OR K$ = "r"
  770 IF K$ = "r" RUN
  780 END
  790 PRINT TAB(MAX_X%/2-10, MAX_Y%/2);"You win!!"
  800 FOR I%=0 TO 30: SOUND 1,-15,I%*2,3 : NEXT : GOTO 190
  810 :
  820 DEF PROC_create_playfield(ROUND%)
  830 PROC_wall_v(0,0,MAX_Y%)
  840 PROC_wall_v(MAX_X%-1,0,MAX_Y%)
  850 PROC_wall_h(0,0,MAX_X%)
  860 PROC_wall_h(0,MAX_Y%,MAX_X%)
  870 FOR I=1 TO ROUND% : PROC_wall_v((MAX_X%/ROUND%)*I,2,36) : NEXT I
  880 FOR I=1 TO 200 : PRINT TAB(RND(MAX_X%-4)+2,RND(MAX_Y%-4)+2); " ": NEXT I
  890 I% = 0
  900 REPEAT
  910   REPEAT
  920     POS_X% = RND(MAX_X%-4) + 2
  930     POS_Y% = RND(MAX_Y%-4) + 2
  940   UNTIL NOT ((POS_X%>(MAX_X%/2-4) AND POS_X%<(MAX_X%/2+4))                         AND (POS_Y%>(MAX_Y%/2-4) AND POS_Y%<(MAX_Y%/2+4)))
  950   IF GET$(POS_X%,POS_Y%) = " " THEN I% = I% + 1 : PRINT TAB(POS_X%,POS_Y%) "*"
  960 UNTIL I% >= LEVEL%
  970 ENDPROC
  980 :
  990 DEF PROC_udg
 1000 READ A
 1010 IF A = -1 THEN GOTO 1080
 1020 VDU 23,A
 1030 FOR I%=0 TO 7
 1040   READ A
 1050   VDU A
 1060 NEXT
 1070 GOTO 1000
 1080 ENDPROC
 1090 :
 1100 DEF FN_turnY(DY%,ODX%)
 1110 LOCAL RC%
 1120 RC%=130
 1130 IF DY%=1 AND ODX%=-1 THEN RC%=131
 1140 IF DY%=-1 AND ODX%=-1 THEN RC%=133
 1150 IF DY%=1 AND ODX%=1 THEN RC%=132
 1160 IF DY%=-1 AND ODX%=1 THEN RC%=134
 1170 =RC%
 1180 ENDFN
 1190 :
 1200 DEF FN_turnX(DX%,ODY%)
 1210 LOCAL RC%
 1220 IF DX%=1 AND ODY%=-1 THEN RC%=131
 1230 IF DX%=-1 AND ODY%=-1 THEN RC%=132
 1240 IF DX%=1 AND ODY%=1 THEN RC%=133
 1250 IF DX%=-1 AND ODY%=1 THEN RC%=134
 1260 =RC%
 1270 ENDFN
 1280 :
 1290 DEF PROC_wall_v(SX%,SY%,DY%)
 1300 FOR I% = 0 TO DY%
 1310   PRINT TAB(SX%,SY%+I%);
 1320   VDU 135
 1330 NEXT
 1340 ENDPROC
 1350 :
 1360 DEF PROC_wall_h(SX%,SY%,DX%)
 1370 FOR I%=0 TO DX%
 1380   PRINT TAB(SX%+I%,SY%);
 1390   VDU 135
 1400 NEXT
 1410 ENDPROC
 1420 :
 1430 REM UDG-Data, first char copied from udg.bas demo
 1440 DATA 128,60,66,165,129,165,153,66,60
 1450 DATA 129,24,48,32,48,24,12,12,24
 1460 DATA 130,0,96,240,153,155,14,4,0
 1470 DATA 131,0,0,0,0,3,7,12,24
 1480 DATA 132,0,0,0,0,192,224,96,24
 1490 DATA 133,24,12,7,3,0,0,0,0
 1500 DATA 134,24,96,224,192,0,0,0,0
 1510 DATA 135,247,247,247,0,254,254,254,0
 1520 DATA -1
