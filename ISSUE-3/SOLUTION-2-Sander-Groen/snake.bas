   10 MODE 2
   20 VDU 23,224,24,60,90,255,255,90,60,24
   30 VDU 23,225,0,24,60,126,126,60,24,0
   40 VDU 23,226,255,255,255,255,255,255,255,255
   50 P$=CHR$(224)
   60 DIM POSITIONS(100, 1)
   70 COLOUR 145
   80 CLS
   90 REM Snake Game in BBC BASIC
  100 REM Show intro screen
  110 CLS
  120 PRINT TAB(9,9)"Welcome to Snake Game!"
  130 PRINT TAB(0,12)"Use the arrow keys to control the snake."
  140 PRINT TAB(0,13)"Try to eat the food without hitting the borders or yourself."
  150 PRINT TAB(9,16)"Press any key to start."
  160 A=GET
  170 IF A <> -1 THEN ELSE GOTO 160
  180 CLS
  190 L=1
  200 POSITIONS(0, 0) = 19
  210 POSITIONS(0, 1) = 11
  220 XD%=0
  230 YD%=0
  240 SCORE%=0
  250 FOR I =0 TO 39
  260   COLOUR 4
  270   PRINT TAB(I, 0)CHR$(226):PRINT TAB(I, 22)CHR$(226)
  280 NEXT I
  290 FOR I = 0 TO 22
  300   PRINT TAB(0, I)CHR$(226):PRINT TAB(39, I)CHR$(226)
  310 NEXT I
  320 PROC_draw_apple
  330 VDU 23,1,0
  340 PROC_draw_snake
  350 PROC_detect_collisions
  360 A%=INKEY(16)
  370 IF A% = 21 OR A% = 8 THEN YD% = 0
  380 IF A% = 10 OR A% = 11 THEN XD% = 0
  390 IF A% = 21 AND XD% = 0 THEN XD% = 1
  400 IF A% = 8 AND XD% = 0 THEN XD% = -1
  410 IF A% = 10 AND YD% = 0 THEN YD% = 1
  420 IF A% = 11 AND YD% = 0 THEN YD% = -1
  430 PROC_display_score
  440 GOTO 330
  450 COLOUR 15
  460 PRINT TAB(14, 10)"Game Over"
  470 IF L=100 THEN PRINT TAB(14, 11)"You Won!" ELSE PRINT TAB(14, 11)"You Lost!"
  480 PRINT TAB(11,12)"Another game Y/N"
  490 K=INKEY(10)
  500 IF K = 121 OR K = 110 OR K = 89 OR K = 78 THEN PROC_reset
  510 IF K = 121 OR K = 89 THEN GOTO 70
  520 IF K = 110 OR K = 78 THEN GOTO 540
  530 GOTO 490
  540 END
  550 DEF PROC_draw_snake
  560 PRINT TAB(POSITIONS(L-1, 0), POSITIONS(L-1, 1))" "
  570 IF L > 1 THEN PROC_shift
  580 POSITIONS(0, 0) = POSITIONS(0, 0) + XD%
  590 POSITIONS(0, 1) = POSITIONS(0, 1) + YD%
  600 COLOUR 32
  610 PRINT TAB(POSITIONS(0, 0), POSITIONS(0, 1))P$
  620 ENDPROC
  630 DEF PROC_shift
  640 FOR I = L - 1 TO 1 STEP -1
  650   POSITIONS(I, 0) = POSITIONS(I - 1, 0)
  660   POSITIONS(I, 1) = POSITIONS(I - 1, 1)
  670 NEXT I
  680 ENDPROC
  690 DEF PROC_draw_body
  700 FOR I = 0 TO L-1
  710   PRINT TAB(POSITIONS(I, 0), POSITIONS(I, 1))P$
  720 NEXT I
  730 ENDPROC
  740 DEF PROC_reset
  750 COLOUR 128
  760 COLOUR 15
  770 VDU 23,1,1
  780 CLS
  790 FOR I = 0 TO L
  800   POSITIONS(I, 0) = 0
  810   POSITIONS(I, 1) = 0
  820 NEXT I
  830 ENDPROC
  840 DEF PROC_detect_collisions
  850 IF POSITIONS(0, 0) <= 1 OR POSITIONS(0, 0) >= 38 THEN GOTO 450
  860 IF POSITIONS(0, 1) <= 1 OR POSITIONS(0, 1) >= 21 THEN GOTO 450
  870 IF XD% = 0 AND YD% = 0 THEN GOTO 360
  880 IF AX = POSITIONS(0, 0) AND AY = POSITIONS(0, 1) THEN PROC_grow
  890 IF L = 1 THEN GOTO 360
  900 FOR I = 1 TO L
  910   IF POSITIONS(I, 0) = POSITIONS(0, 0) AND POSITIONS(I, 1) = POSITIONS(0, 1) THEN GOTO 450
  920 NEXT I
  930 ENDPROC
  940 DEF PROC_draw_apple
  950 COLOUR 9
  960 AX= RND(36)+1:AY=RND(19)+1
  970 PRINT TAB(AX, AY)CHR$(225)
  980 ENDPROC
  990 DEF PROC_grow
 1000 L=L+1
 1010 IF L = 100 THEN GOTO 450
 1020 PROC_draw_apple
 1030 ENDPROC
 1040 DEF PROC_display_score
 1050 COLOUR 15
 1060 PRINT TAB(0, 23)"Score: " + STR$(L)
 1070 ENDPROC
