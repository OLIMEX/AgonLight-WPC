Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED08-Jun-23     23:29:35     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optspeed -noreduceopt -nopadbranc
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",6
                           A    94    .DEFINE "quot"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "rem"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 4
                           A   103    .ENDEF
                           A   104    .ENDREC "NONAME0"
                           A   105    .BEGREC "NONAME1",8
                           A   106    .DEFINE "quot"
                           A   107    .VALUE 0
                           A   108    .CLASS 8
                           A   109    .TYPE 5
                           A   110    .ENDEF
                           A   111    .DEFINE "rem"
                           A   112    .VALUE 4
                           A   113    .CLASS 8
                           A   114    .TYPE 5
                           A   115    .ENDEF
                           A   116    .ENDREC "NONAME1"
                           A   117    .BEGREC "header",6
                           A   118    .DEFINE "s"
                           A   119    .VALUE 0
                           A   120    .CLASS 11
                           A   121    .TAG "NONAME2"
                           A   122    .TYPE 8
                           A   123    .ENDEF
                           A   124    .DEFINE "x"
                           A   125    .VALUE 0
                           A   126    .CLASS 11
                           A   127    .TYPE 2
                           A   128    .ENDEF
                           A   129    .ENDREC "header"
                           A   130    .BEGREC "NONAME2",6
                           A   131    .DEFINE "ptr"
                           A   132    .VALUE 0
                           A   133    .CLASS 8
                           A   134    .TAG "header"
                           A   135    .TYPE 40
                           A   136    .ENDEF
                           A   137    .DEFINE "size"
                           A   138    .VALUE 3
                           A   139    .CLASS 8
                           A   140    .TYPE 14
                           A   141    .ENDEF
                           A   142    .ENDREC "NONAME2"
                           A   143    .BEGREC "NONAME3",8
                           A   144    .DEFINE "baudRate"
                           A   145    .VALUE 0
                           A   146    .CLASS 8
                           A   147    .TYPE 4
                           A   148    .ENDEF
                           A   149    .DEFINE "dataBits"
                           A   150    .VALUE 3
                           A   151    .CLASS 8
                           A   152    .TYPE 12
                           A   153    .ENDEF
                           A   154    .DEFINE "stopBits"
                           A   155    .VALUE 4
                           A   156    .CLASS 8
                           A   157    .TYPE 12
                           A   158    .ENDEF
                           A   159    .DEFINE "parity"
                           A   160    .VALUE 5
                           A   161    .CLASS 8
                           A   162    .TYPE 12
                           A   163    .ENDEF
                           A   164    .DEFINE "flowcontrol"
                           A   165    .VALUE 6
                           A   166    .CLASS 8
                           A   167    .TYPE 12
                           A   168    .ENDEF
                           A   169    .DEFINE "eir"
                           A   170    .VALUE 7
                           A   171    .CLASS 8
                           A   172    .TYPE 12
                           A   173    .ENDEF
                           A   174    .ENDREC "NONAME3"
                           A   175    .BEGREC "NONAME4",15
                           A   176    .DEFINE "fs"
                           A   177    .VALUE 0
                           A   178    .CLASS 8
                           A   179    .TYPE 46
                           A   180    .ENDEF
                           A   181    .DEFINE "id"
                           A   182    .VALUE 3
                           A   183    .CLASS 8
                           A   184    .TYPE 13
                           A   185    .ENDEF
                           A   186    .DEFINE "attr"
                           A   187    .VALUE 5
                           A   188    .CLASS 8
                           A   189    .TYPE 12
                           A   190    .ENDEF
                           A   191    .DEFINE "stat"
                           A   192    .VALUE 6
                           A   193    .CLASS 8
                           A   194    .TYPE 12
                           A   195    .ENDEF
                           A   196    .DEFINE "sclust"
                           A   197    .VALUE 7
                           A   198    .CLASS 8
                           A   199    .TYPE 15
                           A   200    .ENDEF
                           A   201    .DEFINE "objsize"
                           A   202    .VALUE 11
                           A   203    .CLASS 8
                           A   204    .TYPE 15
                           A   205    .ENDEF
                           A   206    .ENDREC "NONAME4"
                           A   207    .BEGREC "NONAME5",36
                           A   208    .DEFINE "obj"
                           A   209    .VALUE 0
                           A   210    .CLASS 8
                           A   211    .TAG "NONAME4"
                           A   212    .TYPE 8
                           A   213    .ENDEF
                           A   214    .DEFINE "flag"
                           A   215    .VALUE 15
                           A   216    .CLASS 8
                           A   217    .TYPE 12
                           A   218    .ENDEF
                           A   219    .DEFINE "err"
                           A   220    .VALUE 16
                           A   221    .CLASS 8
                           A   222    .TYPE 12
                           A   223    .ENDEF
                           A   224    .DEFINE "fptr"
                           A   225    .VALUE 17
                           A   226    .CLASS 8
                           A   227    .TYPE 15
                           A   228    .ENDEF
                           A   229    .DEFINE "clust"
                           A   230    .VALUE 21
                           A   231    .CLASS 8
                           A   232    .TYPE 15
                           A   233    .ENDEF
                           A   234    .DEFINE "sect"
                           A   235    .VALUE 25
                           A   236    .CLASS 8
                           A   237    .TYPE 15
                           A   238    .ENDEF
                           A   239    .DEFINE "dir_sect"
                           A   240    .VALUE 29
                           A   241    .CLASS 8
                           A   242    .TYPE 15
                           A   243    .ENDEF
                           A   244    .DEFINE "dir_ptr"
                           A   245    .VALUE 33
                           A   246    .CLASS 8
                           A   247    .TYPE 46
                           A   248    .ENDEF
                           A   249    .ENDREC "NONAME5"
                           A   250    .BEGREC "NONAME6",8
                           A   251    .DEFINE "x"
                           A   252    .VALUE 0
                           A   253    .CLASS 8
                           A   254    .TYPE 13
                           A   255    .ENDEF
                           A   256    .DEFINE "y"
                           A   257    .VALUE 2
                           A   258    .CLASS 8
                           A   259    .TYPE 13
                           A   260    .ENDEF
                           A   261    .DEFINE "width"
                           A   262    .VALUE 4
                           A   263    .CLASS 8
                           A   264    .TYPE 13
                           A   265    .ENDEF
                           A   266    .DEFINE "height"
                           A   267    .VALUE 6
                           A   268    .CLASS 8
                           A   269    .TYPE 13
                           A   270    .ENDEF
                           A   271    .ENDREC "NONAME6"
                           A   272    .BEGREC "NONAME7",1227
                           A   273    .DEFINE "screen_width"
                           A   274    .VALUE 0
                           A   275    .CLASS 8
                           A   276    .TYPE 13
                           A   277    .ENDEF
                           A   278    .DEFINE "screen_height"
                           A   279    .VALUE 2
                           A   280    .CLASS 8
                           A   281    .TYPE 13
                           A   282    .ENDEF
                           A   283    .DEFINE "current_food"
                           A   284    .VALUE 4
                           A   285    .CLASS 8
                           A   286    .TAG "NONAME6"
                           A   287    .TYPE 8
                           A   288    .ENDEF
                           A   289    .DEFINE "score"
                           A   290    .VALUE 12
                           A   291    .CLASS 8
                           A   292    .TYPE 12
                           A   293    .ENDEF
                           A   294    .DEFINE "state"
                           A   295    .VALUE 13
                           A   296    .CLASS 8
                           A   297    .TYPE 12
                           A   298    .ENDEF
                           A   299    .DEFINE "snake_length"
                           A   300    .VALUE 14
                           A   301    .CLASS 8
                           A   302    .TYPE 12
                           A   303    .ENDEF
                           A   304    .DEFINE "snake"
                           A   305    .VALUE 15
                           A   306    .CLASS 8
                           A   307    .DIM 150
                           A   308    .TAG "NONAME6"
                           A   309    .TYPE 104
                           A   310    .ENDEF
                           A   311    .DEFINE "vel_x"
                           A   312    .VALUE 1215
                           A   313    .CLASS 8
                           A   314    .TYPE 2
                           A   315    .ENDEF
                           A   316    .DEFINE "vel_y"
                           A   317    .VALUE 1216
                           A   318    .CLASS 8
                           A   319    .TYPE 2
                           A   320    .ENDEF
                           A   321    .DEFINE "game_over"
                           A   322    .VALUE 1217
                           A   323    .CLASS 8
                           A   324    .TYPE 12
                           A   325    .ENDEF
                           A   326    .DEFINE "seg_hor_width"
                           A   327    .VALUE 1218
                           A   328    .CLASS 8
                           A   329    .TYPE 12
                           A   330    .ENDEF
                           A   331    .DEFINE "seg_hor_height"
                           A   332    .VALUE 1219
                           A   333    .CLASS 8
                           A   334    .TYPE 12
                           A   335    .ENDEF
                           A   336    .DEFINE "seg_ver_width"
                           A   337    .VALUE 1220
                           A   338    .CLASS 8
                           A   339    .TYPE 12
                           A   340    .ENDEF
                           A   341    .DEFINE "seg_ver_height"
                           A   342    .VALUE 1221
                           A   343    .CLASS 8
                           A   344    .TYPE 12
                           A   345    .ENDEF
                           A   346    .DEFINE "seg_cor_width"
                           A   347    .VALUE 1222
                           A   348    .CLASS 8
                           A   349    .TYPE 12
                           A   350    .ENDEF
                           A   351    .DEFINE "seg_cor_height"
                           A   352    .VALUE 1223
                           A   353    .CLASS 8
                           A   354    .TYPE 12
                           A   355    .ENDEF
                           A   356    .DEFINE "bg_tile_width"
                           A   357    .VALUE 1224
                           A   358    .CLASS 8
                           A   359    .TYPE 12
                           A   360    .ENDEF
                           A   361    .DEFINE "bg_tile_height"
                           A   362    .VALUE 1225
                           A   363    .CLASS 8
                           A   364    .TYPE 12
                           A   365    .ENDEF
                           A   366    .DEFINE "tick"
                           A   367    .VALUE 1226
                           A   368    .CLASS 8
                           A   369    .TYPE 12
                           A   370    .ENDEF
                           A   371    .ENDREC "NONAME7"
                           A   372    .BEGREC "NONAME8",5
                           A   373    .DEFINE "bmp_width"
                           A   374    .VALUE 0
                           A   375    .CLASS 8
                           A   376    .TYPE 13
                           A   377    .ENDEF
                           A   378    .DEFINE "bmp_height"
                           A   379    .VALUE 2
                           A   380    .CLASS 8
                           A   381    .TYPE 13
                           A   382    .ENDEF
                           A   383    .DEFINE "bmp_bitdepth"
                           A   384    .VALUE 4
                           A   385    .CLASS 8
                           A   386    .TYPE 12
                           A   387    .ENDEF
                           A   388    .ENDREC "NONAME8"
                           A   389    	SEGMENT BSS
045E7D                     A   390    _game:
045E7D                     A   391    	DS	1227
                           A   392    .DEFINE "game"
                           A   393    .ALIAS "_game"
                           A   394    .CLASS 83
                           A   395    .VALUE _game
                           A   396    .TAG "NONAME7"
                           A   397    .TYPE 8
                           A   398    .ENDEF
                           A   399    ;    1	//Copyright HeathenUK 2023, others' cop
                           A   400    ;    2	
                           A   401    ;    3	#include <stdio.h>
                           A   402    ;    4	#include <stdlib.h>
                           A   403    ;    5	#include <ctype.h>
                           A   404    ;    6	//#include <stdint.h>
                           A   405    ;    7	#include <string.h>
                           A   406    ;    8	#include <eZ80.h>
                           A   407    ;    9	#include <defines.h>
                           A   408    ;   10	#include "./main.h"
                           A   409    ;   11	#include "./mos-interface.h"
                           A   410    ;   12	#include "./vdp.h"
                           A   411    ;   13	#include "./agontimer.h"
                           A   412    ;   14	
                           A   413    ;   15	extern void write16bit(uint16_t w);
                           A   414    ;   16	extern void write32bit(uint32_t w);
                           A   415    ;   17	
                           A   416    ;   18	game_state game;
                           A   417    	SEGMENT CODE
                           A   418    ;   19	
                           A   419    ;   20	//#define game.screen_width 640
                           A   420    ;   21	//#define game.screen_height 480
                           A   421    ;   22	
                           A   422    ;   23	void delay_secs(UINT16 ticks_end) { //1
0400E5                     A   423    _delay_secs:
                           A   424    .DEFINE "_delay_secs"
                           A   425    
                           A   426    .VALUE _delay_secs
                           A   427    
                           A   428    .CLASS 2
                           A   429    
                           A   430    .TYPE 65
                           A   431    
                           A   432    .ENDEF
                           A   433    
                           A   434    .BEGFUNC "delay_secs",23,"_delay_secs"
                           A   435    
                           A   436    .LINE 23
                           A   437    
                           A   438    .DEFINE "ticks_end"
                           A   439    
                           A   440    .CLASS 65
                           A   441    
                           A   442    .VALUE 6
                           A   443    
                           A   444    .TYPE 13
                           A   445    
                           A   446    .ENDEF
                           A   447    
                           A   448    .DEFINE "ticks"
                           A   449    
                           A   450    .CLASS 65
                           A   451    
                           A   452    .VALUE -4
                           A   453    
                           A   454    .TYPE 15
                           A   455    
                           A   456    .ENDEF
                           A   457    
0400E5 DDE5                A   458    	PUSH	IX
0400E7 DD210000 00         A   459    	LD	IX,0
0400EC DD39                A   460    	ADD	IX,SP
0400EE C5                  A   461    	PUSH	BC
0400EF 3B                  A   462    	DEC	SP
                           A   463    ;   24		
                           A   464    ;   25		UINT32 ticks = 0;
                           A   465    .LINE 25
                           A   466    
0400F0 01000000            A   467    	LD	BC,0
0400F4 AF                  A   468    	XOR	A,A
0400F5 DD0FFC              A   469    	LD	(IX+%FFFFFFFC),BC
0400F8 DD77FF              A   470    	LD	(IX+%FFFFFFFF),A
                           A   471    ;   26		ticks_end *= 60;
                           A   472    .LINE 26
                           A   473    
0400FB 49213C00            A   474    	LD.LIS	HL,60
0400FF DD0706              A   475    	LD	BC,(IX+%6)
040102 CD C7 55 04         A   476    	CALL	__smulu
040106 DD7506              A   477    	LD	(IX+%6),L
040109 DD7407              A   478    	LD	(IX+%7),H
                           A   479    ;   27		while(true) {
04010C                     A   480    L_3:
                           A   481    .LINE 27
                           A   482    
                           A   483    ;   28			
                           A   484    ;   29			waitvblank();
                           A   485    .LINE 29
                           A   486    
04010C CD BF 43 04         A   487    	CALL	_waitvblank
                           A   488    ;   30			ticks++;
                           A   489    .LINE 30
                           A   490    
040110 DD27FC              A   491    	LD	HL,(IX+%FFFFFFFC)
040113 DD5EFF              A   492    	LD	E,(IX+%FFFFFFFF)
040116 3E01                A   493    	LD	A,%1
040118 CD EC 49 04         A   494    	CALL	__ladd_b
04011C DD2FFC              A   495    	LD	(IX+%FFFFFFFC),HL
04011F DD73FF              A   496    	LD	(IX+%FFFFFFFF),E
                           A   497    ;   31			if(ticks >= ticks_end) break;
                           A   498    .LINE 31
                           A   499    
040122 DD0706              A   500    	LD	BC,(IX+%6)
040125 CD 9B 4D 04         A   501    	CALL	__stoiu
040129 E5C1                A   502    	LD	BC,HL
04012B AF                  A   503    	XOR	A,A
04012C DD27FC              A   504    	LD	HL,(IX+%FFFFFFFC)
04012F DD5EFF              A   505    	LD	E,(IX+%FFFFFFFF)
040132 CD 6B 50 04         A   506    	CALL	__lcmpu
040136 38 D4               A   507    	JR	C,L_3
                           A   508    ;   32			
                           A   509    ;   33		}
                           A   510    ;   34		
                           A   511    ;   35	}
                           A   512    .LINE 35
                           A   513    
040138 DDF9                A   514    	LD	SP,IX
04013A DDE1                A   515    	POP	IX
04013C C9                  A   516    	RET	
                           A   517    
                           A   518    
                           A   519    ;**************************** _delay_secs *****
                           A   520    ;Name                         Addr/Register   S
                           A   521    ;_waitvblank                         IMPORT  --
                           A   522    ;ticks                                 IX-4    
                           A   523    ;ticks_end                             IX+6    
                           A   524    
                           A   525    
                           A   526    ; Stack Frame Size: 13 (bytes)
                           A   527    ;       Spill Code: 0 (instruction)
                           A   528    
                           A   529    
                           A   530    .ENDFUNC "delay_secs",35,"_delay_secs"
                           A   531    ;   36	
                           A   532    ;   37	int min(int a, int b) {
04013D                     A   533    _min:
                           A   534    .DEFINE "_min"
                           A   535    
                           A   536    .VALUE _min
                           A   537    
                           A   538    .CLASS 2
                           A   539    
                           A   540    .TYPE 68
                           A   541    
                           A   542    .ENDEF
                           A   543    
                           A   544    .BEGFUNC "min",37,"_min"
                           A   545    
                           A   546    .LINE 37
                           A   547    
                           A   548    .DEFINE "a"
                           A   549    
                           A   550    .CLASS 65
                           A   551    
                           A   552    .VALUE 6
                           A   553    
                           A   554    .TYPE 4
                           A   555    
                           A   556    .ENDEF
                           A   557    
                           A   558    .DEFINE "b"
                           A   559    
                           A   560    .CLASS 65
                           A   561    
                           A   562    .VALUE 9
                           A   563    
                           A   564    .TYPE 4
                           A   565    
                           A   566    .ENDEF
                           A   567    
04013D DDE5                A   568    	PUSH	IX
04013F DD210000 00         A   569    	LD	IX,0
040144 DD39                A   570    	ADD	IX,SP
                           A   571    ;   38	    if (a > b)
                           A   572    .LINE 38
                           A   573    
040146 DD0706              A   574    	LD	BC,(IX+%6)
040149 DD2709              A   575    	LD	HL,(IX+%9)
04014C B7                  A   576    	OR	A,A
04014D ED42                A   577    	SBC	HL,BC
04014F F2 59 01 04         A   578    	JP	P,L__3
040153 EA 62 01 04         A   579    	JP	PE,L_6
040157 18 04               A   580    	JR	L__4
040159                     A   581    L__3:
040159 E2 62 01 04         A   582    	JP	PO,L_6
04015D                     A   583    L__4:
                           A   584    ;   39	        return b;
                           A   585    .LINE 39
                           A   586    
04015D DD2709              A   587    	LD	HL,(IX+%9)
040160 18 03               A   588    	JR	L_7
040162                     A   589    L_6:
                           A   590    ;   40	    return a;
                           A   591    .LINE 40
                           A   592    
040162 DD2706              A   593    	LD	HL,(IX+%6)
                           A   594    ;   41	}
040165                     A   595    L_7:
                           A   596    .LINE 41
                           A   597    
040165 DDF9                A   598    	LD	SP,IX
040167 DDE1                A   599    	POP	IX
040169 C9                  A   600    	RET	
                           A   601    
                           A   602    
                           A   603    ;**************************** _min ************
                           A   604    ;Name                         Addr/Register   S
                           A   605    ;b                                     IX+9    
                           A   606    ;a                                     IX+6    
                           A   607    
                           A   608    
                           A   609    ; Stack Frame Size: 12 (bytes)
                           A   610    ;       Spill Code: 0 (instruction)
                           A   611    
                           A   612    
                           A   613    .ENDFUNC "min",41,"_min"
                           A   614    ;   42	
                           A   615    ;   43	int max(int a, int b) {
04016A                     A   616    _max:
                           A   617    .DEFINE "_max"
                           A   618    
                           A   619    .VALUE _max
                           A   620    
                           A   621    .CLASS 2
                           A   622    
                           A   623    .TYPE 68
                           A   624    
                           A   625    .ENDEF
                           A   626    
                           A   627    .BEGFUNC "max",43,"_max"
                           A   628    
                           A   629    .LINE 43
                           A   630    
                           A   631    .DEFINE "a"
                           A   632    
                           A   633    .CLASS 65
                           A   634    
                           A   635    .VALUE 6
                           A   636    
                           A   637    .TYPE 4
                           A   638    
                           A   639    .ENDEF
                           A   640    
                           A   641    .DEFINE "b"
                           A   642    
                           A   643    .CLASS 65
                           A   644    
                           A   645    .VALUE 9
                           A   646    
                           A   647    .TYPE 4
                           A   648    
                           A   649    .ENDEF
                           A   650    
04016A DDE5                A   651    	PUSH	IX
04016C DD210000 00         A   652    	LD	IX,0
040171 DD39                A   653    	ADD	IX,SP
                           A   654    ;   44	    if (a > b)
                           A   655    .LINE 44
                           A   656    
040173 DD0706              A   657    	LD	BC,(IX+%6)
040176 DD2709              A   658    	LD	HL,(IX+%9)
040179 B7                  A   659    	OR	A,A
04017A ED42                A   660    	SBC	HL,BC
04017C F2 86 01 04         A   661    	JP	P,L__7
040180 EA 8F 01 04         A   662    	JP	PE,L_9
040184 18 04               A   663    	JR	L__8
040186                     A   664    L__7:
040186 E2 8F 01 04         A   665    	JP	PO,L_9
04018A                     A   666    L__8:
                           A   667    ;   45	        return a;
                           A   668    .LINE 45
                           A   669    
04018A DD2706              A   670    	LD	HL,(IX+%6)
04018D 18 03               A   671    	JR	L_10
04018F                     A   672    L_9:
                           A   673    ;   46	    return b;
                           A   674    .LINE 46
                           A   675    
04018F DD2709              A   676    	LD	HL,(IX+%9)
                           A   677    ;   47	}
040192                     A   678    L_10:
                           A   679    .LINE 47
                           A   680    
040192 DDF9                A   681    	LD	SP,IX
040194 DDE1                A   682    	POP	IX
040196 C9                  A   683    	RET	
                           A   684    
                           A   685    
                           A   686    ;**************************** _max ************
                           A   687    ;Name                         Addr/Register   S
                           A   688    ;b                                     IX+9    
                           A   689    ;a                                     IX+6    
                           A   690    
                           A   691    
                           A   692    ; Stack Frame Size: 12 (bytes)
                           A   693    ;       Spill Code: 0 (instruction)
                           A   694    
                           A   695    
                           A   696    .ENDFUNC "max",47,"_max"
                           A   697    ;   48	
                           A   698    ;   49	void clear_screen(uint8_t sprites) {
040197                     A   699    _clear_screen:
                           A   700    .DEFINE "_clear_screen"
                           A   701    
                           A   702    .VALUE _clear_screen
                           A   703    
                           A   704    .CLASS 2
                           A   705    
                           A   706    .TYPE 65
                           A   707    
                           A   708    .ENDEF
                           A   709    
                           A   710    .BEGFUNC "clear_screen",49,"_clear_screen"
                           A   711    
                           A   712    .LINE 49
                           A   713    
                           A   714    .DEFINE "sprites"
                           A   715    
                           A   716    .CLASS 65
                           A   717    
                           A   718    .VALUE 6
                           A   719    
                           A   720    .TYPE 12
                           A   721    
                           A   722    .ENDEF
                           A   723    
040197 DDE5                A   724    	PUSH	IX
040199 DD210000 00         A   725    	LD	IX,0
04019E DD39                A   726    	ADD	IX,SP
                           A   727    ;   50	
                           A   728    ;   51	    vdp_cls();
                           A   729    .LINE 51
                           A   730    
0401A0 CD 6D 39 04         A   731    	CALL	_vdp_cls
                           A   732    ;   52	    vdp_spriteActivateTotal(sprites);
                           A   733    .LINE 52
                           A   734    
0401A4 DD4E06              A   735    	LD	C,(IX+%6)
0401A7 0600                A   736    	LD	B,%0
0401A9 C5                  A   737    	PUSH	BC
0401AA CD 40 41 04         A   738    	CALL	_vdp_spriteActivateTotal
0401AE C1                  A   739    	POP	BC
                           A   740    ;   53	
                           A   741    ;   54	}
                           A   742    .LINE 54
                           A   743    
0401AF DDF9                A   744    	LD	SP,IX
0401B1 DDE1                A   745    	POP	IX
0401B3 C9                  A   746    	RET	
                           A   747    
                           A   748    
                           A   749    ;**************************** _clear_screen ***
                           A   750    ;Name                         Addr/Register   S
                           A   751    ;_vdp_spriteActivateTotal            IMPORT  --
                           A   752    ;_vdp_cls                            IMPORT  --
                           A   753    ;sprites                               IX+6    
                           A   754    
                           A   755    
                           A   756    ; Stack Frame Size: 9 (bytes)
                           A   757    ;       Spill Code: 0 (instruction)
                           A   758    
                           A   759    
                           A   760    .ENDFUNC "clear_screen",54,"_clear_screen"
                           A   761    ;   55	
                           A   762    ;   56	void refresh_screen(uint8_t sprites) {
0401B4                     A   763    _refresh_screen:
                           A   764    .DEFINE "_refresh_screen"
                           A   765    
                           A   766    .VALUE _refresh_screen
                           A   767    
                           A   768    .CLASS 2
                           A   769    
                           A   770    .TYPE 65
                           A   771    
                           A   772    .ENDEF
                           A   773    
                           A   774    .BEGFUNC "refresh_screen",56,"_refresh_screen"
                           A   775    
                           A   776    .LINE 56
                           A   777    
                           A   778    .DEFINE "sprites"
                           A   779    
                           A   780    .CLASS 65
                           A   781    
                           A   782    .VALUE 6
                           A   783    
                           A   784    .TYPE 12
                           A   785    
                           A   786    .ENDEF
                           A   787    
0401B4 DDE5                A   788    	PUSH	IX
0401B6 DD210000 00         A   789    	LD	IX,0
0401BB DD39                A   790    	ADD	IX,SP
                           A   791    ;   57	
                           A   792    ;   58	    vdp_spriteActivateTotal(sprites);
                           A   793    .LINE 58
                           A   794    
0401BD DD4E06              A   795    	LD	C,(IX+%6)
0401C0 0600                A   796    	LD	B,%0
0401C2 C5                  A   797    	PUSH	BC
0401C3 CD 40 41 04         A   798    	CALL	_vdp_spriteActivateTotal
0401C7 C1                  A   799    	POP	BC
                           A   800    ;   59	    vdp_spriteRefresh();
                           A   801    .LINE 59
                           A   802    
0401C8 CD 79 41 04         A   803    	CALL	_vdp_spriteRefresh
                           A   804    ;   60	    vdp_spriteActivateTotal(0);
                           A   805    .LINE 60
                           A   806    
0401CC 01000000            A   807    	LD	BC,0
0401D0 C5                  A   808    	PUSH	BC
0401D1 CD 40 41 04         A   809    	CALL	_vdp_spriteActivateTotal
0401D5 C1                  A   810    	POP	BC
                           A   811    ;   61	
                           A   812    ;   62	}
                           A   813    .LINE 62
                           A   814    
0401D6 DDF9                A   815    	LD	SP,IX
0401D8 DDE1                A   816    	POP	IX
0401DA C9                  A   817    	RET	
                           A   818    
                           A   819    
                           A   820    ;**************************** _refresh_screen *
                           A   821    ;Name                         Addr/Register   S
                           A   822    ;_vdp_spriteRefresh                  IMPORT  --
                           A   823    ;_vdp_spriteActivateTotal            IMPORT  --
                           A   824    ;sprites                               IX+6    
                           A   825    
                           A   826    
                           A   827    ; Stack Frame Size: 9 (bytes)
                           A   828    ;       Spill Code: 0 (instruction)
                           A   829    
                           A   830    
                           A   831    .ENDFUNC "refresh_screen",62,"_refresh_screen"
                           A   832    ;   63	
                           A   833    ;   64	void dump_sprites() {
0401DB                     A   834    _dump_sprites:
                           A   835    .DEFINE "_dump_sprites"
                           A   836    
                           A   837    .VALUE _dump_sprites
                           A   838    
                           A   839    .CLASS 2
                           A   840    
                           A   841    .TYPE 65
                           A   842    
                           A   843    .ENDEF
                           A   844    
                           A   845    .BEGFUNC "dump_sprites",64,"_dump_sprites"
                           A   846    
0401DB DDE5                A   847    	PUSH	IX
0401DD DD210000 00         A   848    	LD	IX,0
0401E2 DD39                A   849    	ADD	IX,SP
                           A   850    ;   65	
                           A   851    ;   66	    vdp_spriteActivateTotal(0);
                           A   852    .LINE 66
                           A   853    
0401E4 01000000            A   854    	LD	BC,0
0401E8 C5                  A   855    	PUSH	BC
0401E9 CD 40 41 04         A   856    	CALL	_vdp_spriteActivateTotal
0401ED C1                  A   857    	POP	BC
                           A   858    ;   67	    vdp_spriteRefresh();
                           A   859    .LINE 67
                           A   860    
0401EE CD 79 41 04         A   861    	CALL	_vdp_spriteRefresh
                           A   862    ;   68	
                           A   863    ;   69	}
                           A   864    .LINE 69
                           A   865    
0401F2 DDF9                A   866    	LD	SP,IX
0401F4 DDE1                A   867    	POP	IX
0401F6 C9                  A   868    	RET	
                           A   869    
                           A   870    
                           A   871    ;**************************** _dump_sprites ***
                           A   872    ;Name                         Addr/Register   S
                           A   873    ;_vdp_spriteRefresh                  IMPORT  --
                           A   874    ;_vdp_spriteActivateTotal            IMPORT  --
                           A   875    
                           A   876    
                           A   877    ; Stack Frame Size: 6 (bytes)
                           A   878    ;       Spill Code: 0 (instruction)
                           A   879    
                           A   880    
                           A   881    .ENDFUNC "dump_sprites",69,"_dump_sprites"
                           A   882    ;   70	
                           A   883    ;   71	bool isKthBitSet(uint8_t data, uint8_t 
0401F7                     A   884    _isKthBitSet:
                           A   885    .DEFINE "_isKthBitSet"
                           A   886    
                           A   887    .VALUE _isKthBitSet
                           A   888    
                           A   889    .CLASS 2
                           A   890    
                           A   891    .TYPE 76
                           A   892    
                           A   893    .ENDEF
                           A   894    
                           A   895    .BEGFUNC "isKthBitSet",71,"_isKthBitSet"
                           A   896    
                           A   897    .LINE 71
                           A   898    
                           A   899    .DEFINE "data"
                           A   900    
                           A   901    .CLASS 65
                           A   902    
                           A   903    .VALUE 6
                           A   904    
                           A   905    .TYPE 12
                           A   906    
                           A   907    .ENDEF
                           A   908    
                           A   909    .DEFINE "k"
                           A   910    
                           A   911    .CLASS 65
                           A   912    
                           A   913    .VALUE 9
                           A   914    
                           A   915    .TYPE 12
                           A   916    
                           A   917    .ENDEF
                           A   918    
0401F7 DDE5                A   919    	PUSH	IX
0401F9 DD210000 00         A   920    	LD	IX,0
0401FE DD39                A   921    	ADD	IX,SP
                           A   922    ;   72	    return (data & (1U << k)) != 0;
                           A   923    .LINE 72
                           A   924    
040200 DD7E09              A   925    	LD	A,(IX+%9)
040203 B7ED62              A   926    	UEXT	HL
040206 6F                  A   927    	LD	L,A
040207 E5C1                A   928    	LD	BC,HL
040209 21010000            A   929    	LD	HL,1
04020D CD 92 50 04         A   930    	CALL	__ishl
040211 7D                  A   931    	LD	A,L
040212 DDA606              A   932    	AND	A,(IX+%6)
040215 28 04               A   933    	JR	Z,L__14
040217 3E01                A   934    	LD	A,%1
040219 18 01               A   935    	JR	L__15
04021B                     A   936    L__14:
04021B AF                  A   937    	XOR	A,A
04021C                     A   938    L__15:
                           A   939    ;   73	}
                           A   940    .LINE 73
                           A   941    
04021C DDF9                A   942    	LD	SP,IX
04021E DDE1                A   943    	POP	IX
040220 C9                  A   944    	RET	
                           A   945    
                           A   946    
                           A   947    ;**************************** _isKthBitSet ****
                           A   948    ;Name                         Addr/Register   S
                           A   949    ;k                                     IX+9    
                           A   950    ;data                                  IX+6    
                           A   951    
                           A   952    
                           A   953    ; Stack Frame Size: 12 (bytes)
                           A   954    ;       Spill Code: 0 (instruction)
                           A   955    
                           A   956    
                           A   957    .ENDFUNC "isKthBitSet",73,"_isKthBitSet"
                           A   958    ;   74	
                           A   959    ;   75	bool isKthBitSet_16(uint16_t data, uint
040221                     A   960    _isKthBitSet_16:
                           A   961    .DEFINE "_isKthBitSet_16"
                           A   962    
                           A   963    .VALUE _isKthBitSet_16
                           A   964    
                           A   965    .CLASS 2
                           A   966    
                           A   967    .TYPE 76
                           A   968    
                           A   969    .ENDEF
                           A   970    
                           A   971    .BEGFUNC "isKthBitSet_16",75,"_isKthBitSet_16"
                           A   972    
                           A   973    .LINE 75
                           A   974    
                           A   975    .DEFINE "data"
                           A   976    
                           A   977    .CLASS 65
                           A   978    
                           A   979    .VALUE 6
                           A   980    
                           A   981    .TYPE 13
                           A   982    
                           A   983    .ENDEF
                           A   984    
                           A   985    .DEFINE "k"
                           A   986    
                           A   987    .CLASS 65
                           A   988    
                           A   989    .VALUE 9
                           A   990    
                           A   991    .TYPE 12
                           A   992    
                           A   993    .ENDEF
                           A   994    
040221 DDE5                A   995    	PUSH	IX
040223 DD210000 00         A   996    	LD	IX,0
040228 DD39                A   997    	ADD	IX,SP
                           A   998    ;   76	    return (data & (1U << k)) != 0;
                           A   999    .LINE 76
                           A  1000    
04022A DD7E09              A  1001    	LD	A,(IX+%9)
04022D B7ED62              A  1002    	UEXT	HL
040230 6F                  A  1003    	LD	L,A
040231 E5C1                A  1004    	LD	BC,HL
040233 21010000            A  1005    	LD	HL,1
040237 CD 92 50 04         A  1006    	CALL	__ishl
04023B DD0706              A  1007    	LD	BC,(IX+%6)
04023E CD 7A 4F 04         A  1008    	CALL	__sand
040242 49010000            A  1009    	LD.LIS	BC,0
040246 B7                  A  1010    	OR	A,A
040247 40ED42              A  1011    	SBC.SIS	HL,BC
04024A 28 04               A  1012    	JR	Z,L__18
04024C 3E01                A  1013    	LD	A,%1
04024E 18 01               A  1014    	JR	L__19
040250                     A  1015    L__18:
040250 AF                  A  1016    	XOR	A,A
040251                     A  1017    L__19:
                           A  1018    ;   77	}
                           A  1019    .LINE 77
                           A  1020    
040251 DDF9                A  1021    	LD	SP,IX
040253 DDE1                A  1022    	POP	IX
040255 C9                  A  1023    	RET	
                           A  1024    
                           A  1025    
                           A  1026    ;**************************** _isKthBitSet_16 *
                           A  1027    ;Name                         Addr/Register   S
                           A  1028    ;k                                     IX+9    
                           A  1029    ;data                                  IX+6    
                           A  1030    
                           A  1031    
                           A  1032    ; Stack Frame Size: 12 (bytes)
                           A  1033    ;       Spill Code: 0 (instruction)
                           A  1034    
                           A  1035    
                           A  1036    .ENDFUNC "isKthBitSet_16",77,"_isKthBitSet_16"
                           A  1037    ;   78	
                           A  1038    ;   79	bool isKthBitSet_24(uint24_t data, uint
040256                     A  1039    _isKthBitSet_24:
                           A  1040    .DEFINE "_isKthBitSet_24"
                           A  1041    
                           A  1042    .VALUE _isKthBitSet_24
                           A  1043    
                           A  1044    .CLASS 2
                           A  1045    
                           A  1046    .TYPE 76
                           A  1047    
                           A  1048    .ENDEF
                           A  1049    
                           A  1050    .BEGFUNC "isKthBitSet_24",79,"_isKthBitSet_24"
                           A  1051    
                           A  1052    .LINE 79
                           A  1053    
                           A  1054    .DEFINE "data"
                           A  1055    
                           A  1056    .CLASS 65
                           A  1057    
                           A  1058    .VALUE 6
                           A  1059    
                           A  1060    .TYPE 14
                           A  1061    
                           A  1062    .ENDEF
                           A  1063    
                           A  1064    .DEFINE "k"
                           A  1065    
                           A  1066    .CLASS 65
                           A  1067    
                           A  1068    .VALUE 9
                           A  1069    
                           A  1070    .TYPE 12
                           A  1071    
                           A  1072    .ENDEF
                           A  1073    
040256 DDE5                A  1074    	PUSH	IX
040258 DD210000 00         A  1075    	LD	IX,0
04025D DD39                A  1076    	ADD	IX,SP
                           A  1077    ;   80	    return (data & (1UL << k)) != 0;
                           A  1078    .LINE 80
                           A  1079    
04025F DD7E09              A  1080    	LD	A,(IX+%9)
040262 B7ED62              A  1081    	UEXT	HL
040265 6F                  A  1082    	LD	L,A
040266 E5C1                A  1083    	LD	BC,HL
040268 CD 64 50 04         A  1084    	CALL	__itol
04026C C5E1                A  1085    	LD	HL,BC
04026E 01010000            A  1086    	LD	BC,1
040272 AF                  A  1087    	XOR	A,A
040273 CD C5 50 04         A  1088    	CALL	__lshl
040277 C5E1                A  1089    	LD	HL,BC
040279 5F                  A  1090    	LD	E,A
04027A DD0706              A  1091    	LD	BC,(IX+%6)
04027D AF                  A  1092    	XOR	A,A
04027E CD DC 55 04         A  1093    	CALL	__land
040282 01000000            A  1094    	LD	BC,0
040286 AF                  A  1095    	XOR	A,A
040287 CD 6B 50 04         A  1096    	CALL	__lcmpu
04028B 28 04               A  1097    	JR	Z,L__22
04028D 3E01                A  1098    	LD	A,%1
04028F 18 01               A  1099    	JR	L__23
040291                     A  1100    L__22:
040291 AF                  A  1101    	XOR	A,A
040292                     A  1102    L__23:
                           A  1103    ;   81	}
                           A  1104    .LINE 81
                           A  1105    
040292 DDF9                A  1106    	LD	SP,IX
040294 DDE1                A  1107    	POP	IX
040296 C9                  A  1108    	RET	
                           A  1109    
                           A  1110    
                           A  1111    ;**************************** _isKthBitSet_24 *
                           A  1112    ;Name                         Addr/Register   S
                           A  1113    ;k                                     IX+9    
                           A  1114    ;data                                  IX+6    
                           A  1115    
                           A  1116    
                           A  1117    ; Stack Frame Size: 12 (bytes)
                           A  1118    ;       Spill Code: 0 (instruction)
                           A  1119    
                           A  1120    
                           A  1121    .ENDFUNC "isKthBitSet_24",81,"_isKthBitSet_24"
                           A  1122    ;   82	
                           A  1123    ;   83	uint8_t setKthBit(uint8_t data, uint8_t
040297                     A  1124    _setKthBit:
                           A  1125    .DEFINE "_setKthBit"
                           A  1126    
                           A  1127    .VALUE _setKthBit
                           A  1128    
                           A  1129    .CLASS 2
                           A  1130    
                           A  1131    .TYPE 76
                           A  1132    
                           A  1133    .ENDEF
                           A  1134    
                           A  1135    .BEGFUNC "setKthBit",83,"_setKthBit"
                           A  1136    
                           A  1137    .LINE 83
                           A  1138    
                           A  1139    .DEFINE "data"
                           A  1140    
                           A  1141    .CLASS 65
                           A  1142    
                           A  1143    .VALUE 6
                           A  1144    
                           A  1145    .TYPE 12
                           A  1146    
                           A  1147    .ENDEF
                           A  1148    
                           A  1149    .DEFINE "k"
                           A  1150    
                           A  1151    .CLASS 65
                           A  1152    
                           A  1153    .VALUE 9
                           A  1154    
                           A  1155    .TYPE 12
                           A  1156    
                           A  1157    .ENDEF
                           A  1158    
040297 DDE5                A  1159    	PUSH	IX
040299 DD210000 00         A  1160    	LD	IX,0
04029E DD39                A  1161    	ADD	IX,SP
                           A  1162    ;   84	    return data | (1U << k);
                           A  1163    .LINE 84
                           A  1164    
0402A0 3E01                A  1165    	LD	A,%1
0402A2 DD4609              A  1166    	LD	B,(IX+%9)
0402A5 CD 00 56 04         A  1167    	CALL	__bshl
0402A9 DDB606              A  1168    	OR	A,(IX+%6)
                           A  1169    ;   85	}
                           A  1170    .LINE 85
                           A  1171    
0402AC DDF9                A  1172    	LD	SP,IX
0402AE DDE1                A  1173    	POP	IX
0402B0 C9                  A  1174    	RET	
                           A  1175    
                           A  1176    
                           A  1177    ;**************************** _setKthBit ******
                           A  1178    ;Name                         Addr/Register   S
                           A  1179    ;k                                     IX+9    
                           A  1180    ;data                                  IX+6    
                           A  1181    
                           A  1182    
                           A  1183    ; Stack Frame Size: 12 (bytes)
                           A  1184    ;       Spill Code: 0 (instruction)
                           A  1185    
                           A  1186    
                           A  1187    .ENDFUNC "setKthBit",85,"_setKthBit"
                           A  1188    ;   86	
                           A  1189    ;   87	uint16_t setKthBit_16(uint16_t data, ui
0402B1                     A  1190    _setKthBit_16:
                           A  1191    .DEFINE "_setKthBit_16"
                           A  1192    
                           A  1193    .VALUE _setKthBit_16
                           A  1194    
                           A  1195    .CLASS 2
                           A  1196    
                           A  1197    .TYPE 77
                           A  1198    
                           A  1199    .ENDEF
                           A  1200    
                           A  1201    .BEGFUNC "setKthBit_16",87,"_setKthBit_16"
                           A  1202    
                           A  1203    .LINE 87
                           A  1204    
                           A  1205    .DEFINE "data"
                           A  1206    
                           A  1207    .CLASS 65
                           A  1208    
                           A  1209    .VALUE 6
                           A  1210    
                           A  1211    .TYPE 13
                           A  1212    
                           A  1213    .ENDEF
                           A  1214    
                           A  1215    .DEFINE "k"
                           A  1216    
                           A  1217    .CLASS 65
                           A  1218    
                           A  1219    .VALUE 9
                           A  1220    
                           A  1221    .TYPE 12
                           A  1222    
                           A  1223    .ENDEF
                           A  1224    
0402B1 DDE5                A  1225    	PUSH	IX
0402B3 DD210000 00         A  1226    	LD	IX,0
0402B8 DD39                A  1227    	ADD	IX,SP
                           A  1228    ;   88	    return data | (1U << k);
                           A  1229    .LINE 88
                           A  1230    
0402BA DD4E09              A  1231    	LD	C,(IX+%9)
0402BD 0600                A  1232    	LD	B,%0
0402BF 49210100            A  1233    	LD.LIS	HL,1
0402C3 CD 21 50 04         A  1234    	CALL	__sshl
0402C7 DD0706              A  1235    	LD	BC,(IX+%6)
0402CA CD 45 55 04         A  1236    	CALL	__sor
                           A  1237    ;   89	}
                           A  1238    .LINE 89
                           A  1239    
0402CE DDF9                A  1240    	LD	SP,IX
0402D0 DDE1                A  1241    	POP	IX
0402D2 C9                  A  1242    	RET	
                           A  1243    
                           A  1244    
                           A  1245    ;**************************** _setKthBit_16 ***
                           A  1246    ;Name                         Addr/Register   S
                           A  1247    ;k                                     IX+9    
                           A  1248    ;data                                  IX+6    
                           A  1249    
                           A  1250    
                           A  1251    ; Stack Frame Size: 12 (bytes)
                           A  1252    ;       Spill Code: 0 (instruction)
                           A  1253    
                           A  1254    
                           A  1255    .ENDFUNC "setKthBit_16",89,"_setKthBit_16"
                           A  1256    ;   90	
                           A  1257    ;   91	uint24_t setKthBit_24(uint24_t data, ui
0402D3                     A  1258    _setKthBit_24:
                           A  1259    .DEFINE "_setKthBit_24"
                           A  1260    
                           A  1261    .VALUE _setKthBit_24
                           A  1262    
                           A  1263    .CLASS 2
                           A  1264    
                           A  1265    .TYPE 78
                           A  1266    
                           A  1267    .ENDEF
                           A  1268    
                           A  1269    .BEGFUNC "setKthBit_24",91,"_setKthBit_24"
                           A  1270    
                           A  1271    .LINE 91
                           A  1272    
                           A  1273    .DEFINE "data"
                           A  1274    
                           A  1275    .CLASS 65
                           A  1276    
                           A  1277    .VALUE 6
                           A  1278    
                           A  1279    .TYPE 14
                           A  1280    
                           A  1281    .ENDEF
                           A  1282    
                           A  1283    .DEFINE "k"
                           A  1284    
                           A  1285    .CLASS 65
                           A  1286    
                           A  1287    .VALUE 9
                           A  1288    
                           A  1289    .TYPE 12
                           A  1290    
                           A  1291    .ENDEF
                           A  1292    
0402D3 DDE5                A  1293    	PUSH	IX
0402D5 DD210000 00         A  1294    	LD	IX,0
0402DA DD39                A  1295    	ADD	IX,SP
                           A  1296    ;   92	    return data | (1UL << k);
                           A  1297    .LINE 92
                           A  1298    
0402DC DD7E09              A  1299    	LD	A,(IX+%9)
0402DF B7ED62              A  1300    	UEXT	HL
0402E2 6F                  A  1301    	LD	L,A
0402E3 E5C1                A  1302    	LD	BC,HL
0402E5 21010000            A  1303    	LD	HL,1
0402E9 CD 92 50 04         A  1304    	CALL	__ishl
0402ED DD0706              A  1305    	LD	BC,(IX+%6)
0402F0 CD 80 4D 04         A  1306    	CALL	__ior
                           A  1307    ;   93	}
                           A  1308    .LINE 93
                           A  1309    
0402F4 DDF9                A  1310    	LD	SP,IX
0402F6 DDE1                A  1311    	POP	IX
0402F8 C9                  A  1312    	RET	
                           A  1313    
                           A  1314    
                           A  1315    ;**************************** _setKthBit_24 ***
                           A  1316    ;Name                         Addr/Register   S
                           A  1317    ;k                                     IX+9    
                           A  1318    ;data                                  IX+6    
                           A  1319    
                           A  1320    
                           A  1321    ; Stack Frame Size: 12 (bytes)
                           A  1322    ;       Spill Code: 0 (instruction)
                           A  1323    
                           A  1324    
                           A  1325    .ENDFUNC "setKthBit_24",93,"_setKthBit_24"
                           A  1326    ;   94	
                           A  1327    ;   95	void play_sound(int channel, int vol, i
0402F9                     A  1328    _play_sound:
                           A  1329    .DEFINE "_play_sound"
                           A  1330    
                           A  1331    .VALUE _play_sound
                           A  1332    
                           A  1333    .CLASS 2
                           A  1334    
                           A  1335    .TYPE 65
                           A  1336    
                           A  1337    .ENDEF
                           A  1338    
                           A  1339    .BEGFUNC "play_sound",95,"_play_sound"
                           A  1340    
                           A  1341    .LINE 95
                           A  1342    
                           A  1343    .DEFINE "channel"
                           A  1344    
                           A  1345    .CLASS 65
                           A  1346    
                           A  1347    .VALUE 6
                           A  1348    
                           A  1349    .TYPE 4
                           A  1350    
                           A  1351    .ENDEF
                           A  1352    
                           A  1353    .DEFINE "vol"
                           A  1354    
                           A  1355    .CLASS 65
                           A  1356    
                           A  1357    .VALUE 9
                           A  1358    
                           A  1359    .TYPE 4
                           A  1360    
                           A  1361    .ENDEF
                           A  1362    
                           A  1363    .DEFINE "duration"
                           A  1364    
                           A  1365    .CLASS 65
                           A  1366    
                           A  1367    .VALUE 12
                           A  1368    
                           A  1369    .TYPE 4
                           A  1370    
                           A  1371    .ENDEF
                           A  1372    
                           A  1373    .DEFINE "frequency"
                           A  1374    
                           A  1375    .CLASS 65
                           A  1376    
                           A  1377    .VALUE 15
                           A  1378    
                           A  1379    .TYPE 4
                           A  1380    
                           A  1381    .ENDEF
                           A  1382    
0402F9 DDE5                A  1383    	PUSH	IX
0402FB DD210000 00         A  1384    	LD	IX,0
040300 DD39                A  1385    	ADD	IX,SP
                           A  1386    ;   96	
                           A  1387    ;   97	    putch(23);
                           A  1388    .LINE 97
                           A  1389    
040302 01170000            A  1390    	LD	BC,23
040306 C5                  A  1391    	PUSH	BC
040307 CD 85 43 04         A  1392    	CALL	_putch
04030B C1                  A  1393    	POP	BC
                           A  1394    ;   98	    putch(0);
                           A  1395    .LINE 98
                           A  1396    
04030C 01000000            A  1397    	LD	BC,0
040310 C5                  A  1398    	PUSH	BC
040311 CD 85 43 04         A  1399    	CALL	_putch
040315 C1                  A  1400    	POP	BC
                           A  1401    ;   99	    putch(133);
                           A  1402    .LINE 99
                           A  1403    
040316 01850000            A  1404    	LD	BC,133
04031A C5                  A  1405    	PUSH	BC
04031B CD 85 43 04         A  1406    	CALL	_putch
04031F C1                  A  1407    	POP	BC
                           A  1408    ;  100	
                           A  1409    ;  101	    putch(channel);
                           A  1410    .LINE 101
                           A  1411    
040320 DD0706              A  1412    	LD	BC,(IX+%6)
040323 C5                  A  1413    	PUSH	BC
040324 CD 85 43 04         A  1414    	CALL	_putch
040328 C1                  A  1415    	POP	BC
                           A  1416    ;  102	    putch(0);
                           A  1417    .LINE 102
                           A  1418    
040329 01000000            A  1419    	LD	BC,0
04032D C5                  A  1420    	PUSH	BC
04032E CD 85 43 04         A  1421    	CALL	_putch
040332 C1                  A  1422    	POP	BC
                           A  1423    ;  103	    putch(vol);
                           A  1424    .LINE 103
                           A  1425    
040333 DD0709              A  1426    	LD	BC,(IX+%9)
040336 C5                  A  1427    	PUSH	BC
040337 CD 85 43 04         A  1428    	CALL	_putch
04033B C1                  A  1429    	POP	BC
                           A  1430    ;  104	
                           A  1431    ;  105	    write16bit(frequency);
                           A  1432    .LINE 105
                           A  1433    
04033C DD070F              A  1434    	LD	BC,(IX+%F)
04033F C5                  A  1435    	PUSH	BC
040340 CD 24 38 04         A  1436    	CALL	_write16bit
040344 C1                  A  1437    	POP	BC
                           A  1438    ;  106	    write16bit(duration);
                           A  1439    .LINE 106
                           A  1440    
040345 DD070C              A  1441    	LD	BC,(IX+%C)
040348 C5                  A  1442    	PUSH	BC
040349 CD 24 38 04         A  1443    	CALL	_write16bit
04034D C1                  A  1444    	POP	BC
                           A  1445    ;  107	
                           A  1446    ;  108	}
                           A  1447    .LINE 108
                           A  1448    
04034E DDF9                A  1449    	LD	SP,IX
040350 DDE1                A  1450    	POP	IX
040352 C9                  A  1451    	RET	
                           A  1452    
                           A  1453    
                           A  1454    ;**************************** _play_sound *****
                           A  1455    ;Name                         Addr/Register   S
                           A  1456    ;_write16bit                         IMPORT  --
                           A  1457    ;_putch                              IMPORT  --
                           A  1458    ;frequency                            IX+15    
                           A  1459    ;duration                             IX+12    
                           A  1460    ;vol                                   IX+9    
                           A  1461    ;channel                               IX+6    
                           A  1462    
                           A  1463    
                           A  1464    ; Stack Frame Size: 18 (bytes)
                           A  1465    ;       Spill Code: 0 (instruction)
                           A  1466    
                           A  1467    
                           A  1468    .ENDFUNC "play_sound",108,"_play_sound"
                           A  1469    ;  109	
                           A  1470    ;  110	void twiddle_buffer(char* buffer, int w
040353                     A  1471    _twiddle_buffer:
                           A  1472    .DEFINE "_twiddle_buffer"
                           A  1473    
                           A  1474    .VALUE _twiddle_buffer
                           A  1475    
                           A  1476    .CLASS 2
                           A  1477    
                           A  1478    .TYPE 65
                           A  1479    
                           A  1480    .ENDEF
                           A  1481    
                           A  1482    .BEGFUNC "twiddle_buffer",110,"_twiddle_buffer"
                           A  1483    
                           A  1484    .LINE 110
                           A  1485    
                           A  1486    .DEFINE "buffer"
                           A  1487    
                           A  1488    .CLASS 65
                           A  1489    
                           A  1490    .VALUE 6
                           A  1491    
                           A  1492    .TYPE 34
                           A  1493    
                           A  1494    .ENDEF
                           A  1495    
                           A  1496    .DEFINE "width"
                           A  1497    
                           A  1498    .CLASS 65
                           A  1499    
                           A  1500    .VALUE 9
                           A  1501    
                           A  1502    .TYPE 4
                           A  1503    
                           A  1504    .ENDEF
                           A  1505    
                           A  1506    .DEFINE "height"
                           A  1507    
                           A  1508    .CLASS 65
                           A  1509    
                           A  1510    .VALUE 12
                           A  1511    
                           A  1512    .TYPE 4
                           A  1513    
                           A  1514    .ENDEF
                           A  1515    
                           A  1516    .DEFINE "col"
                           A  1517    
                           A  1518    .CLASS 65
                           A  1519    
                           A  1520    .VALUE -3
                           A  1521    
                           A  1522    .TYPE 4
                           A  1523    
                           A  1524    .ENDEF
                           A  1525    
                           A  1526    .DEFINE "rowPtr"
                           A  1527    
                           A  1528    .CLASS 65
                           A  1529    
                           A  1530    .VALUE -6
                           A  1531    
                           A  1532    .TYPE 34
                           A  1533    
                           A  1534    .ENDEF
                           A  1535    
                           A  1536    .DEFINE "oppositeRowPtr"
                           A  1537    
                           A  1538    .CLASS 65
                           A  1539    
                           A  1540    .VALUE -9
                           A  1541    
                           A  1542    .TYPE 34
                           A  1543    
                           A  1544    .ENDEF
                           A  1545    
                           A  1546    .DEFINE "tempRow"
                           A  1547    
                           A  1548    .CLASS 65
                           A  1549    
                           A  1550    .VALUE -12
                           A  1551    
                           A  1552    .TYPE 34
                           A  1553    
                           A  1554    .ENDEF
                           A  1555    
                           A  1556    .DEFINE "row"
                           A  1557    
                           A  1558    .CLASS 65
                           A  1559    
                           A  1560    .VALUE -15
                           A  1561    
                           A  1562    .TYPE 4
                           A  1563    
                           A  1564    .ENDEF
                           A  1565    
040353 DDE5                A  1566    	PUSH	IX
040355 DD210000 00         A  1567    	LD	IX,0
04035A DD39                A  1568    	ADD	IX,SP
04035C ED22E4              A  1569    	LEA	HL,IX+%FFFFFFE4
04035F F9                  A  1570    	LD	SP,HL
                           A  1571    ;  111	    int row, col;
                           A  1572    ;  112	    char* rowPtr;
                           A  1573    ;  113		char* oppositeRowPtr;
                           A  1574    ;  114		char* tempRow = (char*)malloc(width
                           A  1575    .LINE 114
                           A  1576    
040360 DD2709              A  1577    	LD	HL,(IX+%9)
040363 29                  A  1578    	ADD	HL,HL
040364 29                  A  1579    	ADD	HL,HL
040365 E5                  A  1580    	PUSH	HL
040366 DD77E4              A  1581    	LD	(IX+%FFFFFFE4),A
040369 CD 06 4B 04         A  1582    	CALL	_malloc
04036D DD7EE4              A  1583    	LD	A,(IX+%FFFFFFE4)
040370 C1                  A  1584    	POP	BC
040371 DD2FF4              A  1585    	LD	(IX+%FFFFFFF4),HL
                           A  1586    ;  115	
                           A  1587    ;  116	    //Iterate over each row
                           A  1588    ;  117	    for (row = 0; row < height / 2; row
                           A  1589    .LINE 117
                           A  1590    
040374 01000000            A  1591    	LD	BC,0
040378 DD0FF1              A  1592    	LD	(IX+%FFFFFFF1),BC
04037B C3 29 05 04         A  1593    	JR	L_28
04037F                     A  1594    L_26:
                           A  1595    ;  118	        rowPtr = buffer + row * width *
                           A  1596    .LINE 118
                           A  1597    
04037F DD27F1              A  1598    	LD	HL,(IX+%FFFFFFF1)
040382 DD0709              A  1599    	LD	BC,(IX+%9)
040385 CD B8 4F 04         A  1600    	CALL	__imuls
040389 29                  A  1601    	ADD	HL,HL
04038A 29                  A  1602    	ADD	HL,HL
04038B DD0706              A  1603    	LD	BC,(IX+%6)
04038E 09                  A  1604    	ADD	HL,BC
04038F DD2FFA              A  1605    	LD	(IX+%FFFFFFFA),HL
                           A  1606    ;  119	        oppositeRowPtr = buffer + (heig
                           A  1607    .LINE 119
                           A  1608    
040392 DD07F1              A  1609    	LD	BC,(IX+%FFFFFFF1)
040395 DD270C              A  1610    	LD	HL,(IX+%C)
040398 B7                  A  1611    	OR	A,A
040399 ED42                A  1612    	SBC	HL,BC
04039B 2B                  A  1613    	DEC	HL
04039C DD0709              A  1614    	LD	BC,(IX+%9)
04039F CD B8 4F 04         A  1615    	CALL	__imuls
0403A3 29                  A  1616    	ADD	HL,HL
0403A4 29                  A  1617    	ADD	HL,HL
0403A5 DD0706              A  1618    	LD	BC,(IX+%6)
0403A8 09                  A  1619    	ADD	HL,BC
0403A9 DD2FF7              A  1620    	LD	(IX+%FFFFFFF7),HL
                           A  1621    ;  120	
                           A  1622    ;  121	        //Swap bytes within each row (B
                           A  1623    ;  122	        for (col = 0; col < width; col+
                           A  1624    .LINE 122
                           A  1625    
0403AC 01000000            A  1626    	LD	BC,0
0403B0 DD0FFD              A  1627    	LD	(IX+%FFFFFFFD),BC
0403B3 C3 15 05 04         A  1628    	JR	L_25
0403B7                     A  1629    L_23:
                           A  1630    ;  123	            tempRow[col * 4] = opposite
                           A  1631    .LINE 123
                           A  1632    
0403B7 DD27FD              A  1633    	LD	HL,(IX+%FFFFFFFD)
0403BA 29                  A  1634    	ADD	HL,HL
0403BB 29                  A  1635    	ADD	HL,HL
0403BC E5C1                A  1636    	LD	BC,HL
0403BE DD27FD              A  1637    	LD	HL,(IX+%FFFFFFFD)
0403C1 29                  A  1638    	ADD	HL,HL
0403C2 29                  A  1639    	ADD	HL,HL
0403C3 DD17F7              A  1640    	LD	DE,(IX+%FFFFFFF7)
0403C6 19                  A  1641    	ADD	HL,DE
0403C7 E5FDE1              A  1642    	LD	IY,HL
0403CA C5D1                A  1643    	LD	DE,BC
0403CC DD27F4              A  1644    	LD	HL,(IX+%FFFFFFF4)
0403CF 19                  A  1645    	ADD	HL,DE
0403D0 FD7E02              A  1646    	LD	A,(IY+%2)
0403D3 77                  A  1647    	LD	(HL),A
                           A  1648    ;  124	            tempRow[col * 4 + 1] = oppo
                           A  1649    .LINE 124
                           A  1650    
0403D4 DD27FD              A  1651    	LD	HL,(IX+%FFFFFFFD)
0403D7 29                  A  1652    	ADD	HL,HL
0403D8 29                  A  1653    	ADD	HL,HL
0403D9 E5D1                A  1654    	LD	DE,HL
0403DB DD27F7              A  1655    	LD	HL,(IX+%FFFFFFF7)
0403DE 09                  A  1656    	ADD	HL,BC
0403DF E5FDE1              A  1657    	LD	IY,HL
0403E2 D5C1                A  1658    	LD	BC,DE
0403E4 DD27F4              A  1659    	LD	HL,(IX+%FFFFFFF4)
0403E7 09                  A  1660    	ADD	HL,BC
0403E8 23                  A  1661    	INC	HL
0403E9 FD7E01              A  1662    	LD	A,(IY+%1)
0403EC 77                  A  1663    	LD	(HL),A
                           A  1664    ;  125	            tempRow[col * 4 + 2] = oppo
                           A  1665    .LINE 125
                           A  1666    
0403ED DD27FD              A  1667    	LD	HL,(IX+%FFFFFFFD)
0403F0 29                  A  1668    	ADD	HL,HL
0403F1 29                  A  1669    	ADD	HL,HL
0403F2 E5C1                A  1670    	LD	BC,HL
0403F4 DD27F7              A  1671    	LD	HL,(IX+%FFFFFFF7)
0403F7 19                  A  1672    	ADD	HL,DE
0403F8 E5FDE1              A  1673    	LD	IY,HL
0403FB C5D1                A  1674    	LD	DE,BC
0403FD DD27F4              A  1675    	LD	HL,(IX+%FFFFFFF4)
040400 19                  A  1676    	ADD	HL,DE
040401 23                  A  1677    	INC	HL
040402 23                  A  1678    	INC	HL
040403 FD7E00              A  1679    	LD	A,(IY)
040406 77                  A  1680    	LD	(HL),A
                           A  1681    ;  126	            tempRow[col * 4 + 3] = oppo
                           A  1682    .LINE 126
                           A  1683    
040407 DD27FD              A  1684    	LD	HL,(IX+%FFFFFFFD)
04040A 29                  A  1685    	ADD	HL,HL
04040B 29                  A  1686    	ADD	HL,HL
04040C E5D1                A  1687    	LD	DE,HL
04040E DD27F7              A  1688    	LD	HL,(IX+%FFFFFFF7)
040411 09                  A  1689    	ADD	HL,BC
040412 E5FDE1              A  1690    	LD	IY,HL
040415 DD2FEE              A  1691    	LD	(IX+%FFFFFFEE),HL	; spill
040418 ED2303              A  1692    	LEA	HL,IY+%3
04041B DD2FEB              A  1693    	LD	(IX+%FFFFFFEB),HL	; spill
04041E D5C1                A  1694    	LD	BC,DE
040420 DD27F4              A  1695    	LD	HL,(IX+%FFFFFFF4)
040423 09                  A  1696    	ADD	HL,BC
040424 E5FDE1              A  1697    	LD	IY,HL
040427 DD27EB              A  1698    	LD	HL,(IX+%FFFFFFEB)	; unspill
04042A 7E                  A  1699    	LD	A,(HL)
04042B FD7703              A  1700    	LD	(IY+%3),A
                           A  1701    ;  127	
                           A  1702    ;  128	            oppositeRowPtr[col * 4] = r
                           A  1703    .LINE 128
                           A  1704    
04042E DD27FD              A  1705    	LD	HL,(IX+%FFFFFFFD)
040431 29                  A  1706    	ADD	HL,HL
040432 29                  A  1707    	ADD	HL,HL
040433 E5C1                A  1708    	LD	BC,HL
040435 DD27FA              A  1709    	LD	HL,(IX+%FFFFFFFA)
040438 19                  A  1710    	ADD	HL,DE
040439 E5FDE1              A  1711    	LD	IY,HL
04043C C5D1                A  1712    	LD	DE,BC
04043E DD27F7              A  1713    	LD	HL,(IX+%FFFFFFF7)
040441 19                  A  1714    	ADD	HL,DE
040442 FD7E02              A  1715    	LD	A,(IY+%2)
040445 77                  A  1716    	LD	(HL),A
                           A  1717    ;  129	            oppositeRowPtr[col * 4 + 1]
                           A  1718    .LINE 129
                           A  1719    
040446 DD27FD              A  1720    	LD	HL,(IX+%FFFFFFFD)
040449 29                  A  1721    	ADD	HL,HL
04044A 29                  A  1722    	ADD	HL,HL
04044B E5D1                A  1723    	LD	DE,HL
04044D DD27FA              A  1724    	LD	HL,(IX+%FFFFFFFA)
040450 09                  A  1725    	ADD	HL,BC
040451 E5FDE1              A  1726    	LD	IY,HL
040454 D5C1                A  1727    	LD	BC,DE
040456 DD27F7              A  1728    	LD	HL,(IX+%FFFFFFF7)
040459 09                  A  1729    	ADD	HL,BC
04045A 23                  A  1730    	INC	HL
04045B FD7E01              A  1731    	LD	A,(IY+%1)
04045E 77                  A  1732    	LD	(HL),A
                           A  1733    ;  130	            oppositeRowPtr[col * 4 + 2]
                           A  1734    .LINE 130
                           A  1735    
04045F DD27FD              A  1736    	LD	HL,(IX+%FFFFFFFD)
040462 29                  A  1737    	ADD	HL,HL
040463 29                  A  1738    	ADD	HL,HL
040464 E5C1                A  1739    	LD	BC,HL
040466 DD27FA              A  1740    	LD	HL,(IX+%FFFFFFFA)
040469 19                  A  1741    	ADD	HL,DE
04046A E5FDE1              A  1742    	LD	IY,HL
04046D C5D1                A  1743    	LD	DE,BC
04046F DD27F7              A  1744    	LD	HL,(IX+%FFFFFFF7)
040472 19                  A  1745    	ADD	HL,DE
040473 23                  A  1746    	INC	HL
040474 23                  A  1747    	INC	HL
040475 FD7E00              A  1748    	LD	A,(IY)
040478 77                  A  1749    	LD	(HL),A
                           A  1750    ;  131	            oppositeRowPtr[col * 4 + 3]
                           A  1751    .LINE 131
                           A  1752    
040479 DD27FD              A  1753    	LD	HL,(IX+%FFFFFFFD)
04047C 29                  A  1754    	ADD	HL,HL
04047D 29                  A  1755    	ADD	HL,HL
04047E E5D1                A  1756    	LD	DE,HL
040480 DD27FA              A  1757    	LD	HL,(IX+%FFFFFFFA)
040483 09                  A  1758    	ADD	HL,BC
040484 E5FDE1              A  1759    	LD	IY,HL
040487 DD2FEE              A  1760    	LD	(IX+%FFFFFFEE),HL	; spill
04048A ED2303              A  1761    	LEA	HL,IY+%3
04048D DD2FE8              A  1762    	LD	(IX+%FFFFFFE8),HL	; spill
040490 D5C1                A  1763    	LD	BC,DE
040492 DD27F7              A  1764    	LD	HL,(IX+%FFFFFFF7)
040495 09                  A  1765    	ADD	HL,BC
040496 E5FDE1              A  1766    	LD	IY,HL
040499 DD27E8              A  1767    	LD	HL,(IX+%FFFFFFE8)	; unspill
04049C 7E                  A  1768    	LD	A,(HL)
04049D FD7703              A  1769    	LD	(IY+%3),A
                           A  1770    ;  132	
                           A  1771    ;  133	            rowPtr[col * 4] = tempRow[c
                           A  1772    .LINE 133
                           A  1773    
0404A0 DD27FD              A  1774    	LD	HL,(IX+%FFFFFFFD)
0404A3 29                  A  1775    	ADD	HL,HL
0404A4 29                  A  1776    	ADD	HL,HL
0404A5 E5C1                A  1777    	LD	BC,HL
0404A7 DD27F4              A  1778    	LD	HL,(IX+%FFFFFFF4)
0404AA 19                  A  1779    	ADD	HL,DE
0404AB E5FDE1              A  1780    	LD	IY,HL
0404AE C5D1                A  1781    	LD	DE,BC
0404B0 DD27FA              A  1782    	LD	HL,(IX+%FFFFFFFA)
0404B3 19                  A  1783    	ADD	HL,DE
0404B4 FD7E00              A  1784    	LD	A,(IY)
0404B7 77                  A  1785    	LD	(HL),A
                           A  1786    ;  134	            rowPtr[col * 4 + 1] = tempR
                           A  1787    .LINE 134
                           A  1788    
0404B8 DD27FD              A  1789    	LD	HL,(IX+%FFFFFFFD)
0404BB 29                  A  1790    	ADD	HL,HL
0404BC 29                  A  1791    	ADD	HL,HL
0404BD E5D1                A  1792    	LD	DE,HL
0404BF DD27F4              A  1793    	LD	HL,(IX+%FFFFFFF4)
0404C2 09                  A  1794    	ADD	HL,BC
0404C3 E5FDE1              A  1795    	LD	IY,HL
0404C6 D5C1                A  1796    	LD	BC,DE
0404C8 DD27FA              A  1797    	LD	HL,(IX+%FFFFFFFA)
0404CB 09                  A  1798    	ADD	HL,BC
0404CC 23                  A  1799    	INC	HL
0404CD FD7E01              A  1800    	LD	A,(IY+%1)
0404D0 77                  A  1801    	LD	(HL),A
                           A  1802    ;  135	            rowPtr[col * 4 + 2] = tempR
                           A  1803    .LINE 135
                           A  1804    
0404D1 DD27FD              A  1805    	LD	HL,(IX+%FFFFFFFD)
0404D4 29                  A  1806    	ADD	HL,HL
0404D5 29                  A  1807    	ADD	HL,HL
0404D6 E5C1                A  1808    	LD	BC,HL
0404D8 DD27F4              A  1809    	LD	HL,(IX+%FFFFFFF4)
0404DB 19                  A  1810    	ADD	HL,DE
0404DC E5FDE1              A  1811    	LD	IY,HL
0404DF C5D1                A  1812    	LD	DE,BC
0404E1 DD27FA              A  1813    	LD	HL,(IX+%FFFFFFFA)
0404E4 19                  A  1814    	ADD	HL,DE
0404E5 23                  A  1815    	INC	HL
0404E6 23                  A  1816    	INC	HL
0404E7 FD7E02              A  1817    	LD	A,(IY+%2)
0404EA 77                  A  1818    	LD	(HL),A
                           A  1819    ;  136	            rowPtr[col * 4 + 3] = tempR
                           A  1820    .LINE 136
                           A  1821    
0404EB DD27F4              A  1822    	LD	HL,(IX+%FFFFFFF4)
0404EE 09                  A  1823    	ADD	HL,BC
0404EF E5FDE1              A  1824    	LD	IY,HL
0404F2 DD2FEE              A  1825    	LD	(IX+%FFFFFFEE),HL	; spill
0404F5 ED2303              A  1826    	LEA	HL,IY+%3
0404F8 DD2FE5              A  1827    	LD	(IX+%FFFFFFE5),HL	; spill
0404FB DD27FD              A  1828    	LD	HL,(IX+%FFFFFFFD)
0404FE 29                  A  1829    	ADD	HL,HL
0404FF 29                  A  1830    	ADD	HL,HL
040500 DD07FA              A  1831    	LD	BC,(IX+%FFFFFFFA)
040503 09                  A  1832    	ADD	HL,BC
040504 E5FDE1              A  1833    	LD	IY,HL
040507 DD27E5              A  1834    	LD	HL,(IX+%FFFFFFE5)	; unspill
04050A 7E                  A  1835    	LD	A,(HL)
04050B FD7703              A  1836    	LD	(IY+%3),A
04050E DD07FD              A  1837    	LD	BC,(IX+%FFFFFFFD)
040511 03                  A  1838    	INC	BC
040512 DD0FFD              A  1839    	LD	(IX+%FFFFFFFD),BC
                           A  1840    ;  137	        }
040515                     A  1841    L_25:
                           A  1842    .LINE 137
                           A  1843    
040515 DD0709              A  1844    	LD	BC,(IX+%9)
040518 DD27FD              A  1845    	LD	HL,(IX+%FFFFFFFD)
04051B B7                  A  1846    	OR	A,A
04051C ED42                A  1847    	SBC	HL,BC
04051E FA B7 03 04         A  1848    	JP	M,L_23
040522 DD07F1              A  1849    	LD	BC,(IX+%FFFFFFF1)
040525 03                  A  1850    	INC	BC
040526 DD0FF1              A  1851    	LD	(IX+%FFFFFFF1),BC
                           A  1852    ;  138	    }
040529                     A  1853    L_28:
                           A  1854    .LINE 138
                           A  1855    
040529 01020000            A  1856    	LD	BC,2
04052D DD270C              A  1857    	LD	HL,(IX+%C)
040530 CD 2B 50 04         A  1858    	CALL	__idivs
040534 E5C1                A  1859    	LD	BC,HL
040536 DD27F1              A  1860    	LD	HL,(IX+%FFFFFFF1)
040539 B7                  A  1861    	OR	A,A
04053A ED42                A  1862    	SBC	HL,BC
04053C FA 46 05 04         A  1863    	JP	M,L__31
040540 EA 7F 03 04         A  1864    	JP	PE,L_26
040544 18 04               A  1865    	JR	L__32
040546                     A  1866    L__31:
040546 E2 7F 03 04         A  1867    	JP	PO,L_26
04054A                     A  1868    L__32:
                           A  1869    ;  139	}
                           A  1870    .LINE 139
                           A  1871    
04054A DDF9                A  1872    	LD	SP,IX
04054C DDE1                A  1873    	POP	IX
04054E C9                  A  1874    	RET	
                           A  1875    
                           A  1876    
                           A  1877    ;**************************** _twiddle_buffer *
                           A  1878    ;Name                         Addr/Register   S
                           A  1879    ;_malloc                             IMPORT  --
                           A  1880    ;row                                  IX-15    
                           A  1881    ;tempRow                              IX-12    
                           A  1882    ;oppositeRowPtr                        IX-9    
                           A  1883    ;rowPtr                                IX-6    
                           A  1884    ;col                                   IX-3    
                           A  1885    ;height                               IX+12    
                           A  1886    ;width                                 IX+9    
                           A  1887    ;buffer                                IX+6    
                           A  1888    
                           A  1889    
                           A  1890    ; Stack Frame Size: 43 (bytes)
                           A  1891    ;       Spill Code: -3 (instruction)
                           A  1892    
                           A  1893    
                           A  1894    .ENDFUNC "twiddle_buffer",139,"_twiddle_buffer"
                           A  1895    ;  140	
                           A  1896    ;  141	
                           A  1897    ;  142	bmp_info load_bmp_direct(const char * f
04054F                     A  1898    _load_bmp_direct:
                           A  1899    .DEFINE "_load_bmp_direct"
                           A  1900    
                           A  1901    .VALUE _load_bmp_direct
                           A  1902    
                           A  1903    .CLASS 2
                           A  1904    
                           A  1905    .TAG "NONAME8"
                           A  1906    
                           A  1907    .TYPE 72
                           A  1908    
                           A  1909    .ENDEF
                           A  1910    
                           A  1911    .BEGFUNC "load_bmp_direct",142,"_load_bmp_direc
                           A  1912    
                           A  1913    .LINE 142
                           A  1914    
                           A  1915    .DEFINE "filename"
                           A  1916    
                           A  1917    .CLASS 65
                           A  1918    
                           A  1919    .VALUE 9
                           A  1920    
                           A  1921    .TYPE 194
                           A  1922    
                           A  1923    .ENDEF
                           A  1924    
                           A  1925    .DEFINE "slot"
                           A  1926    
                           A  1927    .CLASS 65
                           A  1928    
                           A  1929    .VALUE 12
                           A  1930    
                           A  1931    .TYPE 12
                           A  1932    
                           A  1933    .ENDEF
                           A  1934    
                           A  1935    .DEFINE "file"
                           A  1936    
                           A  1937    .CLASS 65
                           A  1938    
                           A  1939    .VALUE -1
                           A  1940    
                           A  1941    .TYPE 12
                           A  1942    
                           A  1943    .ENDEF
                           A  1944    
                           A  1945    .DEFINE "image_buffer"
                           A  1946    
                           A  1947    .CLASS 65
                           A  1948    
                           A  1949    .VALUE -4
                           A  1950    
                           A  1951    .TYPE 34
                           A  1952    
                           A  1953    .ENDEF
                           A  1954    
                           A  1955    .DEFINE "buffer_index"
                           A  1956    
                           A  1957    .CLASS 65
                           A  1958    
                           A  1959    .VALUE -7
                           A  1960    
                           A  1961    .TYPE 4
                           A  1962    
                           A  1963    .ENDEF
                           A  1964    
                           A  1965    .DEFINE "buffer_index"
                           A  1966    
                           A  1967    .CLASS 65
                           A  1968    
                           A  1969    .VALUE -11
                           A  1970    
                           A  1971    .TYPE 15
                           A  1972    
                           A  1973    .ENDEF
                           A  1974    
                           A  1975    .DEFINE "y"
                           A  1976    
                           A  1977    .CLASS 65
                           A  1978    
                           A  1979    .VALUE -15
                           A  1980    
                           A  1981    .TYPE 5
                           A  1982    
                           A  1983    .ENDEF
                           A  1984    
                           A  1985    .DEFINE "width"
                           A  1986    
                           A  1987    .CLASS 65
                           A  1988    
                           A  1989    .VALUE -19
                           A  1990    
                           A  1991    .TYPE 5
                           A  1992    
                           A  1993    .ENDEF
                           A  1994    
                           A  1995    .DEFINE "i"
                           A  1996    
                           A  1997    .CLASS 65
                           A  1998    
                           A  1999    .VALUE -23
                           A  2000    
                           A  2001    .TYPE 5
                           A  2002    
                           A  2003    .ENDEF
                           A  2004    
                           A  2005    .DEFINE "height"
                           A  2006    
                           A  2007    .CLASS 65
                           A  2008    
                           A  2009    .VALUE -27
                           A  2010    
                           A  2011    .TYPE 5
                           A  2012    
                           A  2013    .ENDEF
                           A  2014    
                           A  2015    .DEFINE "bit_depth"
                           A  2016    
                           A  2017    .CLASS 65
                           A  2018    
                           A  2019    .VALUE -31
                           A  2020    
                           A  2021    .TYPE 5
                           A  2022    
                           A  2023    .ENDEF
                           A  2024    
                           A  2025    .DEFINE "x"
                           A  2026    
                           A  2027    .CLASS 65
                           A  2028    
                           A  2029    .VALUE -35
                           A  2030    
                           A  2031    .TYPE 5
                           A  2032    
                           A  2033    .ENDEF
                           A  2034    
                           A  2035    .DEFINE "return_info"
                           A  2036    
                           A  2037    .CLASS 65
                           A  2038    
                           A  2039    .VALUE -40
                           A  2040    
                           A  2041    .TAG "NONAME8"
                           A  2042    
                           A  2043    .TYPE 8
                           A  2044    
                           A  2045    .ENDEF
                           A  2046    
                           A  2047    .DEFINE "g"
                           A  2048    
                           A  2049    .CLASS 65
                           A  2050    
                           A  2051    .VALUE -41
                           A  2052    
                           A  2053    .TYPE 12
                           A  2054    
                           A  2055    .ENDEF
                           A  2056    
                           A  2057    .DEFINE "b"
                           A  2058    
                           A  2059    .CLASS 65
                           A  2060    
                           A  2061    .VALUE -42
                           A  2062    
                           A  2063    .TYPE 12
                           A  2064    
                           A  2065    .ENDEF
                           A  2066    
                           A  2067    .DEFINE "r"
                           A  2068    
                           A  2069    .CLASS 65
                           A  2070    
                           A  2071    .VALUE -43
                           A  2072    
                           A  2073    .TYPE 12
                           A  2074    
                           A  2075    .ENDEF
                           A  2076    
                           A  2077    .DEFINE "color_table_size"
                           A  2078    
                           A  2079    .CLASS 65
                           A  2080    
                           A  2081    .VALUE -51
                           A  2082    
                           A  2083    .TYPE 15
                           A  2084    
                           A  2085    .ENDEF
                           A  2086    
                           A  2087    .DEFINE "row_padding"
                           A  2088    
                           A  2089    .CLASS 65
                           A  2090    
                           A  2091    .VALUE -55
                           A  2092    
                           A  2093    .TYPE 5
                           A  2094    
                           A  2095    .ENDEF
                           A  2096    
                           A  2097    .DEFINE "index"
                           A  2098    
                           A  2099    .CLASS 65
                           A  2100    
                           A  2101    .VALUE -56
                           A  2102    
                           A  2103    .TYPE 12
                           A  2104    
                           A  2105    .ENDEF
                           A  2106    
                           A  2107    .DEFINE "buffer_index"
                           A  2108    
                           A  2109    .CLASS 65
                           A  2110    
                           A  2111    .VALUE -60
                           A  2112    
                           A  2113    .TYPE 15
                           A  2114    
                           A  2115    .ENDEF
                           A  2116    
                           A  2117    .DEFINE "src"
                           A  2118    
                           A  2119    .CLASS 65
                           A  2120    
                           A  2121    .VALUE -63
                           A  2122    
                           A  2123    .TYPE 34
                           A  2124    
                           A  2125    .ENDEF
                           A  2126    
                           A  2127    .DEFINE "fo"
                           A  2128    
                           A  2129    .CLASS 65
                           A  2130    
                           A  2131    .VALUE -66
                           A  2132    
                           A  2133    .TAG "NONAME5"
                           A  2134    
                           A  2135    .TYPE 40
                           A  2136    
                           A  2137    .ENDEF
                           A  2138    
                           A  2139    .DEFINE "non_pad_row"
                           A  2140    
                           A  2141    .CLASS 65
                           A  2142    
                           A  2143    .VALUE -68
                           A  2144    
                           A  2145    .TYPE 13
                           A  2146    
                           A  2147    .ENDEF
                           A  2148    
                           A  2149    .DEFINE "biSize"
                           A  2150    
                           A  2151    .CLASS 65
                           A  2152    
                           A  2153    .VALUE -72
                           A  2154    
                           A  2155    .TYPE 15
                           A  2156    
                           A  2157    .ENDEF
                           A  2158    
                           A  2159    .DEFINE "header"
                           A  2160    
                           A  2161    .CLASS 65
                           A  2162    
                           A  2163    .VALUE -126
                           A  2164    
                           A  2165    .DIM 54
                           A  2166    
                           A  2167    .TYPE 98
                           A  2168    
                           A  2169    .ENDEF
                           A  2170    
                           A  2171    .DEFINE "color_table"
                           A  2172    
                           A  2173    .CLASS 65
                           A  2174    
                           A  2175    .VALUE -1150
                           A  2176    
                           A  2177    .DIM 1024
                           A  2178    
                           A  2179    .TYPE 98
                           A  2180    
                           A  2181    .ENDEF
                           A  2182    
04054F DDE5                A  2183    	PUSH	IX
040551 DD210000 00         A  2184    	LD	IX,0
040556 DD39                A  2185    	ADD	IX,SP
040558 216EFBFF            A  2186    	LD	HL,-1170
04055C 39                  A  2187    	ADD	HL,SP
04055D F9                  A  2188    	LD	SP,HL
                           A  2189    ;  143	
                           A  2190    ;  144	    int32_t width, height, bit_depth, r
                           A  2191    ;  145	    uint8_t pixel[4], file, r, g, b, in
                           A  2192    ;  146	    char header[54], color_table[1024];
                           A  2193    ;  147	    uint32_t pixel_value, color_table_s
                           A  2194    ;  148	    uint32_t biSize;
                           A  2195    ;  149	    FIL * fo;
                           A  2196    ;  150		bmp_info return_info;
                           A  2197    ;  151	
                           A  2198    ;  152	    char * src;
                           A  2199    ;  153	    char * image_buffer;
                           A  2200    ;  154		
                           A  2201    ;  155		//if (game.vgm_file != NULL) parse_
                           A  2202    ;  156		
                           A  2203    ;  157		return_info.bmp_width = 0;
                           A  2204    .LINE 157
                           A  2205    
04055E DD36D800            A  2206    	LD	(IX+%FFFFFFD8),%0
040562 DD36D900            A  2207    	LD	(IX+%FFFFFFD9),%0
                           A  2208    ;  158		return_info.bmp_height = 0;
                           A  2209    .LINE 158
                           A  2210    
040566 DD36DA00            A  2211    	LD	(IX+%FFFFFFDA),%0
04056A DD36DB00            A  2212    	LD	(IX+%FFFFFFDB),%0
                           A  2213    ;  159		return_info.bmp_bitdepth = 0;	
                           A  2214    .LINE 159
                           A  2215    
04056E DD36DC00            A  2216    	LD	(IX+%FFFFFFDC),%0
                           A  2217    ;  160	
                           A  2218    ;  161	    file = mos_fopen(filename, fa_read)
                           A  2219    .LINE 161
                           A  2220    
040572 01010000            A  2221    	LD	BC,1
040576 C5                  A  2222    	PUSH	BC
040577 DD0709              A  2223    	LD	BC,(IX+%9)
04057A C5                  A  2224    	PUSH	BC
04057B CD DD 45 04         A  2225    	CALL	_mos_fopen
04057F C1                  A  2226    	POP	BC
040580 C1                  A  2227    	POP	BC
040581 DD77FF              A  2228    	LD	(IX+%FFFFFFFF),A
                           A  2229    ;  162	    if (!file) {
                           A  2230    .LINE 162
                           A  2231    
040584 B7                  A  2232    	OR	A,A
040585 20 3B               A  2233    	JR	NZ,L_31
                           A  2234    ;  163	        printf("Error: could not open %
                           A  2235    .LINE 163
                           A  2236    
040587 01 A1 4D 04         A  2237    	LD	BC,___print_uputch
04058B ED43 42 56 04       A  2238    	LD	(___print_xputch),BC
040590 01 C8 56 04         A  2239    	LD	BC,L__35
040594 C5                  A  2240    	PUSH	BC
040595 CD 06 4C 04         A  2241    	CALL	___print_sendstring
040599 C1                  A  2242    	POP	BC
04059A DD0709              A  2243    	LD	BC,(IX+%9)
04059D C5                  A  2244    	PUSH	BC
04059E CD 06 4C 04         A  2245    	CALL	___print_sendstring
0405A2 C1                  A  2246    	POP	BC
0405A3 01 DF 56 04         A  2247    	LD	BC,L__36
0405A7 C5                  A  2248    	PUSH	BC
0405A8 CD 06 4C 04         A  2249    	CALL	___print_sendstring
0405AC C1                  A  2250    	POP	BC
                           A  2251    ;  164	        return return_info;
                           A  2252    .LINE 164
                           A  2253    
0405AD ED2206              A  2254    	LEA	HL,IX+%6
0405B0 ED17                A  2255    	LD	DE,(HL)
0405B2 ED22D8              A  2256    	LEA	HL,IX+%FFFFFFD8
0405B5 01050000            A  2257    	LD	BC,5
0405B9 EDB0                A  2258    	LDIR	
0405BB DD2706              A  2259    	LD	HL,(IX+%6)
0405BE C3 B5 0D 04         A  2260    	JR	L_93
                           A  2261    ;  165	    }
0405C2                     A  2262    L_31:
                           A  2263    .LINE 165
                           A  2264    
                           A  2265    ;  166	    fo = (FIL * ) mos_getfil(file);
                           A  2266    .LINE 166
                           A  2267    
0405C2 DD4EFF              A  2268    	LD	C,(IX+%FFFFFFFF)
0405C5 0600                A  2269    	LD	B,%0
0405C7 C5                  A  2270    	PUSH	BC
0405C8 CD 63 47 04         A  2271    	CALL	_mos_getfil
0405CC C1                  A  2272    	POP	BC
0405CD DD2FBE              A  2273    	LD	(IX+%FFFFFFBE),HL
                           A  2274    ;  167	
                           A  2275    ;  168	    mos_fread(file, header, 54);
                           A  2276    .LINE 168
                           A  2277    
0405D0 01360000            A  2278    	LD	BC,54
0405D4 C5                  A  2279    	PUSH	BC
0405D5 ED6582              A  2280    	PEA	IX+%FFFFFF82
0405D8 DD4EFF              A  2281    	LD	C,(IX+%FFFFFFFF)
0405DB 0600                A  2282    	LD	B,%0
0405DD C5                  A  2283    	PUSH	BC
0405DE CD 0A 47 04         A  2284    	CALL	_mos_fread
0405E2 C1                  A  2285    	POP	BC
0405E3 C1                  A  2286    	POP	BC
0405E4 C1                  A  2287    	POP	BC
                           A  2288    ;  169	
                           A  2289    ;  170	    biSize = * (uint32_t * ) & header[1
                           A  2290    .LINE 170
                           A  2291    
0405E5 ED5582              A  2292    	LEA	IY,IX+%FFFFFF82
0405E8 ED230E              A  2293    	LEA	HL,IY+%E
0405EB ED07                A  2294    	LD	BC,(HL)
0405ED 23                  A  2295    	INC	HL
0405EE 23                  A  2296    	INC	HL
0405EF 23                  A  2297    	INC	HL
0405F0 7E                  A  2298    	LD	A,(HL)
0405F1 DD0FB8              A  2299    	LD	(IX+%FFFFFFB8),BC
0405F4 DD77BB              A  2300    	LD	(IX+%FFFFFFBB),A
                           A  2301    ;  171	    width = * (INT32 * ) & header[18];
                           A  2302    .LINE 171
                           A  2303    
0405F7 ED2312              A  2304    	LEA	HL,IY+%12
0405FA ED07                A  2305    	LD	BC,(HL)
0405FC 23                  A  2306    	INC	HL
0405FD 23                  A  2307    	INC	HL
0405FE 23                  A  2308    	INC	HL
0405FF 7E                  A  2309    	LD	A,(HL)
040600 DD0FED              A  2310    	LD	(IX+%FFFFFFED),BC
040603 DD77F0              A  2311    	LD	(IX+%FFFFFFF0),A
                           A  2312    ;  172	    height = * (INT32 * ) & header[22];
                           A  2313    .LINE 172
                           A  2314    
040606 ED2316              A  2315    	LEA	HL,IY+%16
040609 ED07                A  2316    	LD	BC,(HL)
04060B 23                  A  2317    	INC	HL
04060C 23                  A  2318    	INC	HL
04060D 23                  A  2319    	INC	HL
04060E 7E                  A  2320    	LD	A,(HL)
04060F DD0FE5              A  2321    	LD	(IX+%FFFFFFE5),BC
040612 DD77E8              A  2322    	LD	(IX+%FFFFFFE8),A
                           A  2323    ;  173	    bit_depth = * (uint16_t * ) & heade
                           A  2324    .LINE 173
                           A  2325    
040615 ED231C              A  2326    	LEA	HL,IY+%1C
040618 ED07                A  2327    	LD	BC,(HL)
04061A CD 9B 4D 04         A  2328    	CALL	__stoiu
04061E AF                  A  2329    	XOR	A,A
04061F DD2FE1              A  2330    	LD	(IX+%FFFFFFE1),HL
040622 DD77E4              A  2331    	LD	(IX+%FFFFFFE4),A
                           A  2332    ;  174	    color_table_size = * (uint32_t * ) 
                           A  2333    .LINE 174
                           A  2334    
040625 ED232E              A  2335    	LEA	HL,IY+%2E
040628 ED07                A  2336    	LD	BC,(HL)
04062A 23                  A  2337    	INC	HL
04062B 23                  A  2338    	INC	HL
04062C 23                  A  2339    	INC	HL
04062D 7E                  A  2340    	LD	A,(HL)
04062E DD0FCD              A  2341    	LD	(IX+%FFFFFFCD),BC
040631 DD77D0              A  2342    	LD	(IX+%FFFFFFD0),A
                           A  2343    ;  175	
                           A  2344    ;  176	    image_buffer = (char * ) malloc(wid
                           A  2345    .LINE 176
                           A  2346    
040634 DD27ED              A  2347    	LD	HL,(IX+%FFFFFFED)
040637 DD07E5              A  2348    	LD	BC,(IX+%FFFFFFE5)
04063A CD B8 4F 04         A  2349    	CALL	__imulu
04063E 0171FBFF            A  2350    	LD	BC,-1167	; spill
040642 CD F1 4B 04         A  2351    	CALL	__istix
040646 DD27E1              A  2352    	LD	HL,(IX+%FFFFFFE1)
040649 DD5EE4              A  2353    	LD	E,(IX+%FFFFFFE4)
04064C 01080000            A  2354    	LD	BC,8
040650 AF                  A  2355    	XOR	A,A
040651 CD 78 4E 04         A  2356    	CALL	__ldivs
040655 E5C1                A  2357    	LD	BC,HL
040657 C5E1                A  2358    	LD	HL,BC
040659 0174FBFF            A  2359    	LD	BC,-1164	; spill
04065D CD F1 4B 04         A  2360    	CALL	__istix
040661 0171FBFF            A  2361    	LD	BC,-1167	; unspill
040665 CD BB 55 04         A  2362    	CALL	__ildix
040669 E5C1                A  2363    	LD	BC,HL
04066B C5E1                A  2364    	LD	HL,BC
04066D 0174FBFF            A  2365    	LD	BC,-1164	; unspill
040671 E5                  A  2366    	PUSH	HL
040672 CD BB 55 04         A  2367    	CALL	__ildix
040676 E5C1                A  2368    	LD	BC,HL
040678 E1                  A  2369    	POP	HL
040679 CD B8 4F 04         A  2370    	CALL	__imulu
04067D E5                  A  2371    	PUSH	HL
04067E C5                  A  2372    	PUSH	BC
04067F E5                  A  2373    	PUSH	HL
040680 FDE5E1              A  2374    	LD	HL,IY
040683 016EFBFF            A  2375    	LD	BC,-1170
040687 CD F1 4B 04         A  2376    	CALL	__istix
04068B E1                  A  2377    	POP	HL
04068C C1                  A  2378    	POP	BC
04068D CD 06 4B 04         A  2379    	CALL	_malloc
040691 C5                  A  2380    	PUSH	BC
040692 016EFBFF            A  2381    	LD	BC,-1170
040696 E5                  A  2382    	PUSH	HL
040697 CD BB 55 04         A  2383    	CALL	__ildix
04069B E5FDE1              A  2384    	LD	IY,HL
04069E E1                  A  2385    	POP	HL
04069F C1                  A  2386    	POP	BC
0406A0 C1                  A  2387    	POP	BC
0406A1 DD2FFC              A  2388    	LD	(IX+%FFFFFFFC),HL
                           A  2389    ;  177	
                           A  2390    ;  178	    if (color_table_size == 0 && bit_de
                           A  2391    .LINE 178
                           A  2392    
0406A4 DD27CD              A  2393    	LD	HL,(IX+%FFFFFFCD)
0406A7 DD5ED0              A  2394    	LD	E,(IX+%FFFFFFD0)
0406AA 01000000            A  2395    	LD	BC,0
0406AE AF                  A  2396    	XOR	A,A
0406AF CD 6B 50 04         A  2397    	CALL	__lcmpu
0406B3 20 1C               A  2398    	JR	NZ,L_40
0406B5 DD27E1              A  2399    	LD	HL,(IX+%FFFFFFE1)
0406B8 DD5EE4              A  2400    	LD	E,(IX+%FFFFFFE4)
0406BB 01080000            A  2401    	LD	BC,8
0406BF AF                  A  2402    	XOR	A,A
0406C0 CD 6B 50 04         A  2403    	CALL	__lcmps
0406C4 20 0B               A  2404    	JR	NZ,L_40
                           A  2405    ;  179	        color_table_size = 256;
                           A  2406    .LINE 179
                           A  2407    
0406C6 01000100            A  2408    	LD	BC,256
0406CA AF                  A  2409    	XOR	A,A
0406CB DD0FCD              A  2410    	LD	(IX+%FFFFFFCD),BC
0406CE DD77D0              A  2411    	LD	(IX+%FFFFFFD0),A
                           A  2412    ;  180	    }
0406D1                     A  2413    L_40:
                           A  2414    .LINE 180
                           A  2415    
                           A  2416    ;  181	
                           A  2417    ;  182	    if (color_table_size > 0) mos_fread
                           A  2418    .LINE 182
                           A  2419    
0406D1 B7                  A  2420    	OR	A,A
0406D2 ED62                A  2421    	SBC	HL,HL
0406D4 1E00                A  2422    	LD	E,%0
0406D6 DD07CD              A  2423    	LD	BC,(IX+%FFFFFFCD)
0406D9 DD7ED0              A  2424    	LD	A,(IX+%FFFFFFD0)
0406DC CD 6B 50 04         A  2425    	CALL	__lcmpu
0406E0 30 22               A  2426    	JR	NC,L_39
0406E2 DD27CD              A  2427    	LD	HL,(IX+%FFFFFFCD)
0406E5 29                  A  2428    	ADD	HL,HL
0406E6 29                  A  2429    	ADD	HL,HL
0406E7 E5                  A  2430    	PUSH	HL
0406E8 DDE5E1              A  2431    	LD	HL,IX
0406EB 0182FBFF            A  2432    	LD	BC,-1150
0406EF 09                  A  2433    	ADD	HL,BC
0406F0 E5C1                A  2434    	LD	BC,HL
0406F2 C5                  A  2435    	PUSH	BC
0406F3 DD4EFF              A  2436    	LD	C,(IX+%FFFFFFFF)
0406F6 0600                A  2437    	LD	B,%0
0406F8 C5                  A  2438    	PUSH	BC
0406F9 CD 0A 47 04         A  2439    	CALL	_mos_fread
0406FD C1                  A  2440    	POP	BC
0406FE C1                  A  2441    	POP	BC
0406FF C1                  A  2442    	POP	BC
                           A  2443    ;  183	
                           A  2444    ;  184	    else if (biSize > 40) { //If for an
                           A  2445    .LINE 184
                           A  2446    
040700 C3 E5 07 04         A  2447    	JR	L_44
040704                     A  2448    L_39:
040704 21280000            A  2449    	LD	HL,40
040708 DD07B8              A  2450    	LD	BC,(IX+%FFFFFFB8)
04070B DD7EBB              A  2451    	LD	A,(IX+%FFFFFFBB)
04070E CD 6B 50 04         A  2452    	CALL	__lcmpu
040712 D2 E5 07 04         A  2453    	JR	NC,L_44
                           A  2454    ;  185	
                           A  2455    ;  186	        i = biSize - 40;
                           A  2456    .LINE 186
                           A  2457    
040716 DD27B8              A  2458    	LD	HL,(IX+%FFFFFFB8)
040719 DD5EBB              A  2459    	LD	E,(IX+%FFFFFFBB)
04071C 01D8FFFF            A  2460    	LD	BC,16777176
040720 3EFF                A  2461    	LD	A,%FF
040722 CD FB 49 04         A  2462    	CALL	__ladd
040726 DD2FE9              A  2463    	LD	(IX+%FFFFFFE9),HL
040729 DD73EC              A  2464    	LD	(IX+%FFFFFFEC),E
                           A  2465    ;  187	        while (i--> 0) {
                           A  2466    .LINE 187
                           A  2467    
04072C 18 29               A  2468    	JR	L_35
04072E                     A  2469    L_36:
                           A  2470    ;  188	            mos_fgetc(file);
                           A  2471    .LINE 188
                           A  2472    
04072E DD4EFF              A  2473    	LD	C,(IX+%FFFFFFFF)
040731 0600                A  2474    	LD	B,%0
040733 C5                  A  2475    	PUSH	BC
040734 C5                  A  2476    	PUSH	BC
040735 E5                  A  2477    	PUSH	HL
040736 FDE5E1              A  2478    	LD	HL,IY
040739 016EFBFF            A  2479    	LD	BC,-1170
04073D CD F1 4B 04         A  2480    	CALL	__istix
040741 E1                  A  2481    	POP	HL
040742 C1                  A  2482    	POP	BC
040743 CD 0A 46 04         A  2483    	CALL	_mos_fgetc
040747 C5                  A  2484    	PUSH	BC
040748 016EFBFF            A  2485    	LD	BC,-1170
04074C E5                  A  2486    	PUSH	HL
04074D CD BB 55 04         A  2487    	CALL	__ildix
040751 E5FDE1              A  2488    	LD	IY,HL
040754 E1                  A  2489    	POP	HL
040755 C1                  A  2490    	POP	BC
040756 C1                  A  2491    	POP	BC
                           A  2492    ;  189	        }
040757                     A  2493    L_35:
                           A  2494    .LINE 189
                           A  2495    
040757 DD27E9              A  2496    	LD	HL,(IX+%FFFFFFE9)
04075A 0179FBFF            A  2497    	LD	BC,-1159	; spill
04075E CD F1 4B 04         A  2498    	CALL	__istix
040762 DD66EC              A  2499    	LD	H,(IX+%FFFFFFEC)
040765 FDE5                A  2500    	PUSH	IY
040767 FD2177FB FF         A  2501    	LD	IY,-1161	; spill
04076C DDE5C1              A  2502    	LD	BC,IX	; spill
04076F FD09                A  2503    	ADD	IY,BC
040771 FD7400              A  2504    	LD	(IY),H
040774 FDE1                A  2505    	POP	IY
040776 DD27E9              A  2506    	LD	HL,(IX+%FFFFFFE9)
040779 DD5EEC              A  2507    	LD	E,(IX+%FFFFFFEC)
04077C 01FFFFFF            A  2508    	LD	BC,16777215
040780 3EFF                A  2509    	LD	A,%FF
040782 CD FB 49 04         A  2510    	CALL	__ladd
040786 DD2FE9              A  2511    	LD	(IX+%FFFFFFE9),HL
040789 DD73EC              A  2512    	LD	(IX+%FFFFFFEC),E
04078C B7                  A  2513    	OR	A,A
04078D ED62                A  2514    	SBC	HL,HL
04078F 1E00                A  2515    	LD	E,%0
040791 FDE5                A  2516    	PUSH	IY
040793 FD2178FB FF         A  2517    	LD	IY,-1160	; spill
040798 DDE5C1              A  2518    	LD	BC,IX	; spill
04079B FD09                A  2519    	ADD	IY,BC
04079D FD7400              A  2520    	LD	(IY),H
0407A0 FD2177FB FF         A  2521    	LD	IY,-1161	; unspill
0407A5 DDE5C1              A  2522    	LD	BC,IX	; unspill
0407A8 FD09                A  2523    	ADD	IY,BC
0407AA FD6600              A  2524    	LD	H,(IY)
0407AD FDE1                A  2525    	POP	IY
0407AF 7C                  A  2526    	LD	A,H
0407B0 FDE5                A  2527    	PUSH	IY
0407B2 FD2178FB FF         A  2528    	LD	IY,-1160	; unspill
0407B7 DDE5C1              A  2529    	LD	BC,IX	; unspill
0407BA FD09                A  2530    	ADD	IY,BC
0407BC FD6600              A  2531    	LD	H,(IY)
0407BF FDE1                A  2532    	POP	IY
0407C1 017CFBFF            A  2533    	LD	BC,-1156	; spill
0407C5 CD F1 4B 04         A  2534    	CALL	__istix
0407C9 0179FBFF            A  2535    	LD	BC,-1159	; unspill
0407CD CD BB 55 04         A  2536    	CALL	__ildix
0407D1 E5C1                A  2537    	LD	BC,HL
0407D3 C5                  A  2538    	PUSH	BC
0407D4 017CFBFF            A  2539    	LD	BC,-1156	; unspill
0407D8 CD BB 55 04         A  2540    	CALL	__ildix
0407DC C1                  A  2541    	POP	BC
0407DD CD 6B 50 04         A  2542    	CALL	__lcmps
0407E1 FA 2E 07 04         A  2543    	JP	M,L_36
                           A  2544    ;  190	
                           A  2545    ;  191	    }
0407E5                     A  2546    L_44:
                           A  2547    .LINE 191
                           A  2548    
                           A  2549    ;  192	
                           A  2550    ;  193	    if ((bit_depth != 32) && (bit_depth
                           A  2551    .LINE 193
                           A  2552    
0407E5 DD27E1              A  2553    	LD	HL,(IX+%FFFFFFE1)
0407E8 DD5EE4              A  2554    	LD	E,(IX+%FFFFFFE4)
0407EB 01200000            A  2555    	LD	BC,32
0407EF AF                  A  2556    	XOR	A,A
0407F0 CD 6B 50 04         A  2557    	CALL	__lcmps
0407F4 28 55               A  2558    	JR	Z,L_45
0407F6 DD27E1              A  2559    	LD	HL,(IX+%FFFFFFE1)
0407F9 DD5EE4              A  2560    	LD	E,(IX+%FFFFFFE4)
0407FC 01180000            A  2561    	LD	BC,24
040800 AF                  A  2562    	XOR	A,A
040801 CD 6B 50 04         A  2563    	CALL	__lcmps
040805 28 44               A  2564    	JR	Z,L_45
040807 DD27E1              A  2565    	LD	HL,(IX+%FFFFFFE1)
04080A DD5EE4              A  2566    	LD	E,(IX+%FFFFFFE4)
04080D 01080000            A  2567    	LD	BC,8
040811 AF                  A  2568    	XOR	A,A
040812 CD 6B 50 04         A  2569    	CALL	__lcmps
040816 28 33               A  2570    	JR	Z,L_45
                           A  2571    ;  194	        printf("Error: unsupported bit 
                           A  2572    .LINE 194
                           A  2573    
040818 01 A1 4D 04         A  2574    	LD	BC,___print_uputch
04081C ED43 42 56 04       A  2575    	LD	(___print_xputch),BC
040821 01 E3 56 04         A  2576    	LD	BC,L__45
040825 C5                  A  2577    	PUSH	BC
040826 CD 06 4C 04         A  2578    	CALL	___print_sendstring
04082A C1                  A  2579    	POP	BC
                           A  2580    ;  195	        mos_fclose(file);
                           A  2581    .LINE 195
                           A  2582    
04082B DD4EFF              A  2583    	LD	C,(IX+%FFFFFFFF)
04082E 0600                A  2584    	LD	B,%0
040830 C5                  A  2585    	PUSH	BC
040831 CD F5 45 04         A  2586    	CALL	_mos_fclose
040835 C1                  A  2587    	POP	BC
                           A  2588    ;  196	        return return_info;
                           A  2589    .LINE 196
                           A  2590    
040836 ED2206              A  2591    	LEA	HL,IX+%6
040839 ED17                A  2592    	LD	DE,(HL)
04083B ED22D8              A  2593    	LEA	HL,IX+%FFFFFFD8
04083E 01050000            A  2594    	LD	BC,5
040842 EDB0                A  2595    	LDIR	
040844 DD2706              A  2596    	LD	HL,(IX+%6)
040847 C3 B5 0D 04         A  2597    	JR	L_93
                           A  2598    ;  197	    }
04084B                     A  2599    L_45:
                           A  2600    .LINE 197
                           A  2601    
                           A  2602    ;  198	
                           A  2603    ;  199	    row_padding = (4 - (width * (bit_de
                           A  2604    .LINE 199
                           A  2605    
04084B DD27E1              A  2606    	LD	HL,(IX+%FFFFFFE1)
04084E DD5EE4              A  2607    	LD	E,(IX+%FFFFFFE4)
040851 01080000            A  2608    	LD	BC,8
040855 AF                  A  2609    	XOR	A,A
040856 CD 78 4E 04         A  2610    	CALL	__ldivs
04085A DD07ED              A  2611    	LD	BC,(IX+%FFFFFFED)
04085D DD7EF0              A  2612    	LD	A,(IX+%FFFFFFF0)
040860 CD 4E 55 04         A  2613    	CALL	__lmuls
040864 01040000            A  2614    	LD	BC,4
040868 AF                  A  2615    	XOR	A,A
040869 CD D4 50 04         A  2616    	CALL	__lrems
04086D 7B                  A  2617    	LD	A,E
04086E E5C1                A  2618    	LD	BC,HL
040870 21040000            A  2619    	LD	HL,4
040874 1E00                A  2620    	LD	E,%0
040876 CD 27 4F 04         A  2621    	CALL	__lsub
04087A 01040000            A  2622    	LD	BC,4
04087E AF                  A  2623    	XOR	A,A
04087F CD D4 50 04         A  2624    	CALL	__lrems
040883 DD2FC9              A  2625    	LD	(IX+%FFFFFFC9),HL
040886 DD73CC              A  2626    	LD	(IX+%FFFFFFCC),E
                           A  2627    ;  200	
                           A  2628    ;  201	    vdp_bitmapSelect(slot);
                           A  2629    .LINE 201
                           A  2630    
040889 DD4E0C              A  2631    	LD	C,(IX+%C)
04088C 0600                A  2632    	LD	B,%0
04088E C5                  A  2633    	PUSH	BC
04088F CD 24 3C 04         A  2634    	CALL	_vdp_bitmapSelect
040893 C1                  A  2635    	POP	BC
                           A  2636    ;  202	    putch(23); // vdu_sys
                           A  2637    .LINE 202
                           A  2638    
040894 01170000            A  2639    	LD	BC,23
040898 C5                  A  2640    	PUSH	BC
040899 CD 85 43 04         A  2641    	CALL	_putch
04089D C1                  A  2642    	POP	BC
                           A  2643    ;  203	    putch(27); // sprite command
                           A  2644    .LINE 203
                           A  2645    
04089E 011B0000            A  2646    	LD	BC,27
0408A2 C5                  A  2647    	PUSH	BC
0408A3 CD 85 43 04         A  2648    	CALL	_putch
0408A7 C1                  A  2649    	POP	BC
                           A  2650    ;  204	    putch(1); // send data to selected 
                           A  2651    .LINE 204
                           A  2652    
0408A8 01010000            A  2653    	LD	BC,1
0408AC C5                  A  2654    	PUSH	BC
0408AD CD 85 43 04         A  2655    	CALL	_putch
0408B1 C1                  A  2656    	POP	BC
                           A  2657    ;  205	
                           A  2658    ;  206	    write16bit(width);
                           A  2659    .LINE 206
                           A  2660    
0408B2 DD07ED              A  2661    	LD	BC,(IX+%FFFFFFED)
0408B5 C5                  A  2662    	PUSH	BC
0408B6 CD 24 38 04         A  2663    	CALL	_write16bit
0408BA C1                  A  2664    	POP	BC
                           A  2665    ;  207	    write16bit(height);
                           A  2666    .LINE 207
                           A  2667    
0408BB DD07E5              A  2668    	LD	BC,(IX+%FFFFFFE5)
0408BE C5                  A  2669    	PUSH	BC
0408BF CD 24 38 04         A  2670    	CALL	_write16bit
0408C3 C1                  A  2671    	POP	BC
                           A  2672    ;  208	
                           A  2673    ;  209		if (bit_depth == 8) {
                           A  2674    .LINE 209
                           A  2675    
0408C4 DD27E1              A  2676    	LD	HL,(IX+%FFFFFFE1)
0408C7 DD5EE4              A  2677    	LD	E,(IX+%FFFFFFE4)
0408CA 01080000            A  2678    	LD	BC,8
0408CE AF                  A  2679    	XOR	A,A
0408CF CD 6B 50 04         A  2680    	CALL	__lcmps
0408D3 C2 7D 0A 04         A  2681    	JR	NZ,L_91
                           A  2682    ;  210			// Process 8-bit BMP image
                           A  2683    ;  211			int buffer_index = 0; // Index 
                           A  2684    .LINE 211
                           A  2685    
0408D7 01000000            A  2686    	LD	BC,0
0408DB DD0FF9              A  2687    	LD	(IX+%FFFFFFF9),BC
                           A  2688    ;  212	
                           A  2689    ;  213			for (y = height - 1; y >= 0; y-
                           A  2690    .LINE 213
                           A  2691    
0408DE DD27E5              A  2692    	LD	HL,(IX+%FFFFFFE5)
0408E1 DD5EE8              A  2693    	LD	E,(IX+%FFFFFFE8)
0408E4 01FFFFFF            A  2694    	LD	BC,16777215
0408E8 3EFF                A  2695    	LD	A,%FF
0408EA CD FB 49 04         A  2696    	CALL	__ladd
0408EE DD2FF1              A  2697    	LD	(IX+%FFFFFFF1),HL
0408F1 DD73F4              A  2698    	LD	(IX+%FFFFFFF4),E
0408F4 C3 2C 0A 04         A  2699    	JR	L_62
0408F8                     A  2700    L_60:
                           A  2701    ;  214				for (x = 0; x < width; x++)
                           A  2702    .LINE 214
                           A  2703    
0408F8 01000000            A  2704    	LD	BC,0
0408FC AF                  A  2705    	XOR	A,A
0408FD DD0FDD              A  2706    	LD	(IX+%FFFFFFDD),BC
040900 DD77E0              A  2707    	LD	(IX+%FFFFFFE0),A
040903 C3 B0 09 04         A  2708    	JR	L_54
040907                     A  2709    L_52:
                           A  2710    ;  215					index = (UINT8)mos_fget
                           A  2711    .LINE 215
                           A  2712    
040907 DD4EFF              A  2713    	LD	C,(IX+%FFFFFFFF)
04090A 0600                A  2714    	LD	B,%0
04090C C5                  A  2715    	PUSH	BC
04090D CD 0A 46 04         A  2716    	CALL	_mos_fgetc
040911 C1                  A  2717    	POP	BC
040912 DD77C8              A  2718    	LD	(IX+%FFFFFFC8),A
                           A  2719    ;  216					b = color_table[index *
                           A  2720    .LINE 216
                           A  2721    
040915 B7ED62              A  2722    	UEXT	HL
040918 6F                  A  2723    	LD	L,A
040919 29                  A  2724    	ADD	HL,HL
04091A 29                  A  2725    	ADD	HL,HL
04091B E5D1                A  2726    	LD	DE,HL
04091D DDE5E1              A  2727    	LD	HL,IX
040920 0182FBFF            A  2728    	LD	BC,-1150
040924 09                  A  2729    	ADD	HL,BC
040925 19                  A  2730    	ADD	HL,DE
040926 FD217FFB FF         A  2731    	LD	IY,-1153
04092B DDE5C1              A  2732    	LD	BC,IX
04092E FD09                A  2733    	ADD	IY,BC
040930 FD2F00              A  2734    	LD	(IY),HL
040933 217FFBFF            A  2735    	LD	HL,-1153
040937 DDE5C1              A  2736    	LD	BC,IX
04093A 09                  A  2737    	ADD	HL,BC
04093B ED27                A  2738    	LD	HL,(HL)
04093D 7E                  A  2739    	LD	A,(HL)
04093E DD77D6              A  2740    	LD	(IX+%FFFFFFD6),A
                           A  2741    ;  217					g = color_table[index *
                           A  2742    .LINE 217
                           A  2743    
040941 217FFBFF            A  2744    	LD	HL,-1153
040945 DDE5C1              A  2745    	LD	BC,IX
040948 09                  A  2746    	ADD	HL,BC
040949 ED27                A  2747    	LD	HL,(HL)
04094B 23                  A  2748    	INC	HL
04094C 7E                  A  2749    	LD	A,(HL)
04094D DD77D7              A  2750    	LD	(IX+%FFFFFFD7),A
                           A  2751    ;  218					r = color_table[index *
                           A  2752    .LINE 218
                           A  2753    
040950 217FFBFF            A  2754    	LD	HL,-1153
040954 DDE5C1              A  2755    	LD	BC,IX
040957 09                  A  2756    	ADD	HL,BC
040958 ED31                A  2757    	LD	IY,(HL)
04095A ED2302              A  2758    	LEA	HL,IY+%2
04095D 7E                  A  2759    	LD	A,(HL)
04095E DD77D5              A  2760    	LD	(IX+%FFFFFFD5),A
                           A  2761    ;  219	
                           A  2762    ;  220					// Store pixel data in 
                           A  2763    ;  221					image_buffer[buffer_ind
                           A  2764    .LINE 221
                           A  2765    
040961 DD07F9              A  2766    	LD	BC,(IX+%FFFFFFF9)
040964 DD27FC              A  2767    	LD	HL,(IX+%FFFFFFFC)
040967 09                  A  2768    	ADD	HL,BC
040968 DD7ED6              A  2769    	LD	A,(IX+%FFFFFFD6)
04096B 77                  A  2770    	LD	(HL),A
04096C DD07F9              A  2771    	LD	BC,(IX+%FFFFFFF9)
04096F 03                  A  2772    	INC	BC
040970 DD0FF9              A  2773    	LD	(IX+%FFFFFFF9),BC
                           A  2774    ;  222					image_buffer[buffer_ind
                           A  2775    .LINE 222
                           A  2776    
040973 DD27FC              A  2777    	LD	HL,(IX+%FFFFFFFC)
040976 09                  A  2778    	ADD	HL,BC
040977 DD7ED7              A  2779    	LD	A,(IX+%FFFFFFD7)
04097A 77                  A  2780    	LD	(HL),A
04097B DD07F9              A  2781    	LD	BC,(IX+%FFFFFFF9)
04097E 03                  A  2782    	INC	BC
04097F DD0FF9              A  2783    	LD	(IX+%FFFFFFF9),BC
                           A  2784    ;  223					image_buffer[buffer_ind
                           A  2785    .LINE 223
                           A  2786    
040982 DD27FC              A  2787    	LD	HL,(IX+%FFFFFFFC)
040985 09                  A  2788    	ADD	HL,BC
040986 DD7ED5              A  2789    	LD	A,(IX+%FFFFFFD5)
040989 77                  A  2790    	LD	(HL),A
04098A DD07F9              A  2791    	LD	BC,(IX+%FFFFFFF9)
04098D 03                  A  2792    	INC	BC
04098E DD0FF9              A  2793    	LD	(IX+%FFFFFFF9),BC
                           A  2794    ;  224					image_buffer[buffer_ind
                           A  2795    .LINE 224
                           A  2796    
040991 DD27FC              A  2797    	LD	HL,(IX+%FFFFFFFC)
040994 09                  A  2798    	ADD	HL,BC
040995 36FF                A  2799    	LD	(HL),%FF
040997 DD07F9              A  2800    	LD	BC,(IX+%FFFFFFF9)
04099A 03                  A  2801    	INC	BC
04099B DD0FF9              A  2802    	LD	(IX+%FFFFFFF9),BC
04099E DD27DD              A  2803    	LD	HL,(IX+%FFFFFFDD)
0409A1 DD5EE0              A  2804    	LD	E,(IX+%FFFFFFE0)
0409A4 3E01                A  2805    	LD	A,%1
0409A6 CD EC 49 04         A  2806    	CALL	__ladd_b
0409AA DD2FDD              A  2807    	LD	(IX+%FFFFFFDD),HL
0409AD DD73E0              A  2808    	LD	(IX+%FFFFFFE0),E
                           A  2809    ;  225				}
0409B0                     A  2810    L_54:
                           A  2811    .LINE 225
                           A  2812    
0409B0 DD27DD              A  2813    	LD	HL,(IX+%FFFFFFDD)
0409B3 DD5EE0              A  2814    	LD	E,(IX+%FFFFFFE0)
0409B6 DD07ED              A  2815    	LD	BC,(IX+%FFFFFFED)
0409B9 DD7EF0              A  2816    	LD	A,(IX+%FFFFFFF0)
0409BC CD 6B 50 04         A  2817    	CALL	__lcmps
0409C0 FA CA 09 04         A  2818    	JP	M,L__56
0409C4 EA 07 09 04         A  2819    	JP	PE,L_52
0409C8 18 04               A  2820    	JR	L__57
0409CA                     A  2821    L__56:
0409CA E2 07 09 04         A  2822    	JP	PO,L_52
0409CE                     A  2823    L__57:
                           A  2824    ;  226	
                           A  2825    ;  227				for (i = 0; i < row_padding
                           A  2826    .LINE 227
                           A  2827    
0409CE 01000000            A  2828    	LD	BC,0
0409D2 AF                  A  2829    	XOR	A,A
0409D3 DD0FE9              A  2830    	LD	(IX+%FFFFFFE9),BC
0409D6 DD77EC              A  2831    	LD	(IX+%FFFFFFEC),A
0409D9 18 1D               A  2832    	JR	L_58
0409DB                     A  2833    L_56:
                           A  2834    ;  228					mos_fgetc(file);
                           A  2835    .LINE 228
                           A  2836    
0409DB DD4EFF              A  2837    	LD	C,(IX+%FFFFFFFF)
0409DE 0600                A  2838    	LD	B,%0
0409E0 C5                  A  2839    	PUSH	BC
0409E1 CD 0A 46 04         A  2840    	CALL	_mos_fgetc
0409E5 C1                  A  2841    	POP	BC
0409E6 DD27E9              A  2842    	LD	HL,(IX+%FFFFFFE9)
0409E9 DD5EEC              A  2843    	LD	E,(IX+%FFFFFFEC)
0409EC 3E01                A  2844    	LD	A,%1
0409EE CD EC 49 04         A  2845    	CALL	__ladd_b
0409F2 DD2FE9              A  2846    	LD	(IX+%FFFFFFE9),HL
0409F5 DD73EC              A  2847    	LD	(IX+%FFFFFFEC),E
                           A  2848    ;  229				}
0409F8                     A  2849    L_58:
                           A  2850    .LINE 229
                           A  2851    
0409F8 DD27E9              A  2852    	LD	HL,(IX+%FFFFFFE9)
0409FB DD5EEC              A  2853    	LD	E,(IX+%FFFFFFEC)
0409FE DD07C9              A  2854    	LD	BC,(IX+%FFFFFFC9)
040A01 DD7ECC              A  2855    	LD	A,(IX+%FFFFFFCC)
040A04 CD 6B 50 04         A  2856    	CALL	__lcmps
040A08 FA 12 0A 04         A  2857    	JP	M,L__58
040A0C EA DB 09 04         A  2858    	JP	PE,L_56
040A10 18 04               A  2859    	JR	L__59
040A12                     A  2860    L__58:
040A12 E2 DB 09 04         A  2861    	JP	PO,L_56
040A16                     A  2862    L__59:
040A16 DD27F1              A  2863    	LD	HL,(IX+%FFFFFFF1)
040A19 DD5EF4              A  2864    	LD	E,(IX+%FFFFFFF4)
040A1C 01FFFFFF            A  2865    	LD	BC,16777215
040A20 3EFF                A  2866    	LD	A,%FF
040A22 CD FB 49 04         A  2867    	CALL	__ladd
040A26 DD2FF1              A  2868    	LD	(IX+%FFFFFFF1),HL
040A29 DD73F4              A  2869    	LD	(IX+%FFFFFFF4),E
                           A  2870    ;  230			}
040A2C                     A  2871    L_62:
                           A  2872    .LINE 230
                           A  2873    
040A2C DD27F1              A  2874    	LD	HL,(IX+%FFFFFFF1)
040A2F DD5EF4              A  2875    	LD	E,(IX+%FFFFFFF4)
040A32 01000000            A  2876    	LD	BC,0
040A36 AF                  A  2877    	XOR	A,A
040A37 CD 6B 50 04         A  2878    	CALL	__lcmps
040A3B F2 45 0A 04         A  2879    	JP	P,L__60
040A3F EA F8 08 04         A  2880    	JP	PE,L_60
040A43 18 04               A  2881    	JR	L__61
040A45                     A  2882    L__60:
040A45 E2 F8 08 04         A  2883    	JP	PO,L_60
040A49                     A  2884    L__61:
                           A  2885    ;  231			twiddle_buffer(image_buffer, wi
                           A  2886    .LINE 231
                           A  2887    
040A49 DD07E5              A  2888    	LD	BC,(IX+%FFFFFFE5)
040A4C C5                  A  2889    	PUSH	BC
040A4D DD07ED              A  2890    	LD	BC,(IX+%FFFFFFED)
040A50 C5                  A  2891    	PUSH	BC
040A51 DD07FC              A  2892    	LD	BC,(IX+%FFFFFFFC)
040A54 C5                  A  2893    	PUSH	BC
040A55 CD 53 03 04         A  2894    	CALL	_twiddle_buffer
040A59 C1                  A  2895    	POP	BC
040A5A C1                  A  2896    	POP	BC
040A5B C1                  A  2897    	POP	BC
                           A  2898    ;  232			mos_puts(image_buffer, width * 
                           A  2899    .LINE 232
                           A  2900    
040A5C 01000000            A  2901    	LD	BC,0
040A60 C5                  A  2902    	PUSH	BC
040A61 DD27ED              A  2903    	LD	HL,(IX+%FFFFFFED)
040A64 DD07E5              A  2904    	LD	BC,(IX+%FFFFFFE5)
040A67 CD B8 4F 04         A  2905    	CALL	__imulu
040A6B 29                  A  2906    	ADD	HL,HL
040A6C 29                  A  2907    	ADD	HL,HL
040A6D E5                  A  2908    	PUSH	HL
040A6E DD07FC              A  2909    	LD	BC,(IX+%FFFFFFFC)
040A71 C5                  A  2910    	PUSH	BC
040A72 CD 9D 43 04         A  2911    	CALL	_mos_puts
040A76 C1                  A  2912    	POP	BC
040A77 C1                  A  2913    	POP	BC
040A78 C1                  A  2914    	POP	BC
                           A  2915    ;  233		
                           A  2916    ;  234		} else if (bit_depth == 24) {
                           A  2917    .LINE 234
                           A  2918    
040A79 C3 78 0D 04         A  2919    	JR	L_92
040A7D                     A  2920    L_91:
040A7D DD27E1              A  2921    	LD	HL,(IX+%FFFFFFE1)
040A80 DD5EE4              A  2922    	LD	E,(IX+%FFFFFFE4)
040A83 01180000            A  2923    	LD	BC,24
040A87 AF                  A  2924    	XOR	A,A
040A88 CD 6B 50 04         A  2925    	CALL	__lcmps
040A8C C2 36 0C 04         A  2926    	JR	NZ,L_89
                           A  2927    ;  235	        // Process 24-bit BMP image
                           A  2928    ;  236	        uint32_t buffer_index = 0; // I
                           A  2929    .LINE 236
                           A  2930    
040A90 01000000            A  2931    	LD	BC,0
040A94 AF                  A  2932    	XOR	A,A
040A95 DD0FF5              A  2933    	LD	(IX+%FFFFFFF5),BC
040A98 DD77F8              A  2934    	LD	(IX+%FFFFFFF8),A
                           A  2935    ;  237	
                           A  2936    ;  238	        for (y = height - 1; y >= 0; y-
                           A  2937    .LINE 238
                           A  2938    
040A9B DD27E5              A  2939    	LD	HL,(IX+%FFFFFFE5)
040A9E DD5EE8              A  2940    	LD	E,(IX+%FFFFFFE8)
040AA1 01FFFFFF            A  2941    	LD	BC,16777215
040AA5 3EFF                A  2942    	LD	A,%FF
040AA7 CD FB 49 04         A  2943    	CALL	__ladd
040AAB DD2FF1              A  2944    	LD	(IX+%FFFFFFF1),HL
040AAE DD73F4              A  2945    	LD	(IX+%FFFFFFF4),E
040AB1 C3 E5 0B 04         A  2946    	JR	L_80
040AB5                     A  2947    L_78:
                           A  2948    ;  239	            for (x = 0; x < width; x++)
                           A  2949    .LINE 239
                           A  2950    
040AB5 01000000            A  2951    	LD	BC,0
040AB9 AF                  A  2952    	XOR	A,A
040ABA DD0FDD              A  2953    	LD	(IX+%FFFFFFDD),BC
040ABD DD77E0              A  2954    	LD	(IX+%FFFFFFE0),A
040AC0 C3 69 0B 04         A  2955    	JR	L_72
040AC4                     A  2956    L_70:
                           A  2957    ;  240	                b = (UINT8)mos_fgetc(fi
                           A  2958    .LINE 240
                           A  2959    
040AC4 DD4EFF              A  2960    	LD	C,(IX+%FFFFFFFF)
040AC7 0600                A  2961    	LD	B,%0
040AC9 C5                  A  2962    	PUSH	BC
040ACA CD 0A 46 04         A  2963    	CALL	_mos_fgetc
040ACE C1                  A  2964    	POP	BC
040ACF DD77D6              A  2965    	LD	(IX+%FFFFFFD6),A
                           A  2966    ;  241	                g = (UINT8)mos_fgetc(fi
                           A  2967    .LINE 241
                           A  2968    
040AD2 DD4EFF              A  2969    	LD	C,(IX+%FFFFFFFF)
040AD5 0600                A  2970    	LD	B,%0
040AD7 C5                  A  2971    	PUSH	BC
040AD8 CD 0A 46 04         A  2972    	CALL	_mos_fgetc
040ADC C1                  A  2973    	POP	BC
040ADD DD77D7              A  2974    	LD	(IX+%FFFFFFD7),A
                           A  2975    ;  242	                r = (UINT8)mos_fgetc(fi
                           A  2976    .LINE 242
                           A  2977    
040AE0 DD4EFF              A  2978    	LD	C,(IX+%FFFFFFFF)
040AE3 0600                A  2979    	LD	B,%0
040AE5 C5                  A  2980    	PUSH	BC
040AE6 CD 0A 46 04         A  2981    	CALL	_mos_fgetc
040AEA C1                  A  2982    	POP	BC
040AEB DD77D5              A  2983    	LD	(IX+%FFFFFFD5),A
                           A  2984    ;  243	
                           A  2985    ;  244	                // Store pixel data in 
                           A  2986    ;  245	                image_buffer[buffer_ind
                           A  2987    .LINE 245
                           A  2988    
040AEE DD07F5              A  2989    	LD	BC,(IX+%FFFFFFF5)
040AF1 DD27FC              A  2990    	LD	HL,(IX+%FFFFFFFC)
040AF4 09                  A  2991    	ADD	HL,BC
040AF5 DD7ED6              A  2992    	LD	A,(IX+%FFFFFFD6)
040AF8 77                  A  2993    	LD	(HL),A
040AF9 DD27F5              A  2994    	LD	HL,(IX+%FFFFFFF5)
040AFC DD5EF8              A  2995    	LD	E,(IX+%FFFFFFF8)
040AFF 3E01                A  2996    	LD	A,%1
040B01 CD EC 49 04         A  2997    	CALL	__ladd_b
040B05 DD2FF5              A  2998    	LD	(IX+%FFFFFFF5),HL
040B08 DD73F8              A  2999    	LD	(IX+%FFFFFFF8),E
                           A  3000    ;  246	                image_buffer[buffer_ind
                           A  3001    .LINE 246
                           A  3002    
040B0B DD07FC              A  3003    	LD	BC,(IX+%FFFFFFFC)
040B0E 09                  A  3004    	ADD	HL,BC
040B0F DD7ED7              A  3005    	LD	A,(IX+%FFFFFFD7)
040B12 77                  A  3006    	LD	(HL),A
040B13 DD27F5              A  3007    	LD	HL,(IX+%FFFFFFF5)
040B16 DD5EF8              A  3008    	LD	E,(IX+%FFFFFFF8)
040B19 3E01                A  3009    	LD	A,%1
040B1B CD EC 49 04         A  3010    	CALL	__ladd_b
040B1F DD2FF5              A  3011    	LD	(IX+%FFFFFFF5),HL
040B22 DD73F8              A  3012    	LD	(IX+%FFFFFFF8),E
                           A  3013    ;  247	                image_buffer[buffer_ind
                           A  3014    .LINE 247
                           A  3015    
040B25 DD07FC              A  3016    	LD	BC,(IX+%FFFFFFFC)
040B28 09                  A  3017    	ADD	HL,BC
040B29 DD7ED5              A  3018    	LD	A,(IX+%FFFFFFD5)
040B2C 77                  A  3019    	LD	(HL),A
040B2D DD27F5              A  3020    	LD	HL,(IX+%FFFFFFF5)
040B30 DD5EF8              A  3021    	LD	E,(IX+%FFFFFFF8)
040B33 3E01                A  3022    	LD	A,%1
040B35 CD EC 49 04         A  3023    	CALL	__ladd_b
040B39 DD2FF5              A  3024    	LD	(IX+%FFFFFFF5),HL
040B3C DD73F8              A  3025    	LD	(IX+%FFFFFFF8),E
                           A  3026    ;  248	                image_buffer[buffer_ind
                           A  3027    .LINE 248
                           A  3028    
040B3F DD07FC              A  3029    	LD	BC,(IX+%FFFFFFFC)
040B42 09                  A  3030    	ADD	HL,BC
040B43 36FF                A  3031    	LD	(HL),%FF
040B45 DD27F5              A  3032    	LD	HL,(IX+%FFFFFFF5)
040B48 DD5EF8              A  3033    	LD	E,(IX+%FFFFFFF8)
040B4B 3E01                A  3034    	LD	A,%1
040B4D CD EC 49 04         A  3035    	CALL	__ladd_b
040B51 DD2FF5              A  3036    	LD	(IX+%FFFFFFF5),HL
040B54 DD73F8              A  3037    	LD	(IX+%FFFFFFF8),E
040B57 DD27DD              A  3038    	LD	HL,(IX+%FFFFFFDD)
040B5A DD5EE0              A  3039    	LD	E,(IX+%FFFFFFE0)
040B5D 3E01                A  3040    	LD	A,%1
040B5F CD EC 49 04         A  3041    	CALL	__ladd_b
040B63 DD2FDD              A  3042    	LD	(IX+%FFFFFFDD),HL
040B66 DD73E0              A  3043    	LD	(IX+%FFFFFFE0),E
                           A  3044    ;  249	            }
040B69                     A  3045    L_72:
                           A  3046    .LINE 249
                           A  3047    
040B69 DD27DD              A  3048    	LD	HL,(IX+%FFFFFFDD)
040B6C DD5EE0              A  3049    	LD	E,(IX+%FFFFFFE0)
040B6F DD07ED              A  3050    	LD	BC,(IX+%FFFFFFED)
040B72 DD7EF0              A  3051    	LD	A,(IX+%FFFFFFF0)
040B75 CD 6B 50 04         A  3052    	CALL	__lcmps
040B79 FA 83 0B 04         A  3053    	JP	M,L__62
040B7D EA C4 0A 04         A  3054    	JP	PE,L_70
040B81 18 04               A  3055    	JR	L__63
040B83                     A  3056    L__62:
040B83 E2 C4 0A 04         A  3057    	JP	PO,L_70
040B87                     A  3058    L__63:
                           A  3059    ;  250	
                           A  3060    ;  251	            for (i = 0; i < row_padding
                           A  3061    .LINE 251
                           A  3062    
040B87 01000000            A  3063    	LD	BC,0
040B8B AF                  A  3064    	XOR	A,A
040B8C DD0FE9              A  3065    	LD	(IX+%FFFFFFE9),BC
040B8F DD77EC              A  3066    	LD	(IX+%FFFFFFEC),A
040B92 18 1D               A  3067    	JR	L_76
040B94                     A  3068    L_74:
                           A  3069    ;  252	                mos_fgetc(file);
                           A  3070    .LINE 252
                           A  3071    
040B94 DD4EFF              A  3072    	LD	C,(IX+%FFFFFFFF)
040B97 0600                A  3073    	LD	B,%0
040B99 C5                  A  3074    	PUSH	BC
040B9A CD 0A 46 04         A  3075    	CALL	_mos_fgetc
040B9E C1                  A  3076    	POP	BC
040B9F DD27E9              A  3077    	LD	HL,(IX+%FFFFFFE9)
040BA2 DD5EEC              A  3078    	LD	E,(IX+%FFFFFFEC)
040BA5 3E01                A  3079    	LD	A,%1
040BA7 CD EC 49 04         A  3080    	CALL	__ladd_b
040BAB DD2FE9              A  3081    	LD	(IX+%FFFFFFE9),HL
040BAE DD73EC              A  3082    	LD	(IX+%FFFFFFEC),E
                           A  3083    ;  253	            }
040BB1                     A  3084    L_76:
                           A  3085    .LINE 253
                           A  3086    
040BB1 DD27E9              A  3087    	LD	HL,(IX+%FFFFFFE9)
040BB4 DD5EEC              A  3088    	LD	E,(IX+%FFFFFFEC)
040BB7 DD07C9              A  3089    	LD	BC,(IX+%FFFFFFC9)
040BBA DD7ECC              A  3090    	LD	A,(IX+%FFFFFFCC)
040BBD CD 6B 50 04         A  3091    	CALL	__lcmps
040BC1 FA CB 0B 04         A  3092    	JP	M,L__64
040BC5 EA 94 0B 04         A  3093    	JP	PE,L_74
040BC9 18 04               A  3094    	JR	L__65
040BCB                     A  3095    L__64:
040BCB E2 94 0B 04         A  3096    	JP	PO,L_74
040BCF                     A  3097    L__65:
040BCF DD27F1              A  3098    	LD	HL,(IX+%FFFFFFF1)
040BD2 DD5EF4              A  3099    	LD	E,(IX+%FFFFFFF4)
040BD5 01FFFFFF            A  3100    	LD	BC,16777215
040BD9 3EFF                A  3101    	LD	A,%FF
040BDB CD FB 49 04         A  3102    	CALL	__ladd
040BDF DD2FF1              A  3103    	LD	(IX+%FFFFFFF1),HL
040BE2 DD73F4              A  3104    	LD	(IX+%FFFFFFF4),E
                           A  3105    ;  254	        }
040BE5                     A  3106    L_80:
                           A  3107    .LINE 254
                           A  3108    
040BE5 DD27F1              A  3109    	LD	HL,(IX+%FFFFFFF1)
040BE8 DD5EF4              A  3110    	LD	E,(IX+%FFFFFFF4)
040BEB 01000000            A  3111    	LD	BC,0
040BEF AF                  A  3112    	XOR	A,A
040BF0 CD 6B 50 04         A  3113    	CALL	__lcmps
040BF4 F2 FE 0B 04         A  3114    	JP	P,L__66
040BF8 EA B5 0A 04         A  3115    	JP	PE,L_78
040BFC 18 04               A  3116    	JR	L__67
040BFE                     A  3117    L__66:
040BFE E2 B5 0A 04         A  3118    	JP	PO,L_78
040C02                     A  3119    L__67:
                           A  3120    ;  255	        twiddle_buffer(image_buffer, wi
                           A  3121    .LINE 255
                           A  3122    
040C02 DD07E5              A  3123    	LD	BC,(IX+%FFFFFFE5)
040C05 C5                  A  3124    	PUSH	BC
040C06 DD07ED              A  3125    	LD	BC,(IX+%FFFFFFED)
040C09 C5                  A  3126    	PUSH	BC
040C0A DD07FC              A  3127    	LD	BC,(IX+%FFFFFFFC)
040C0D C5                  A  3128    	PUSH	BC
040C0E CD 53 03 04         A  3129    	CALL	_twiddle_buffer
040C12 C1                  A  3130    	POP	BC
040C13 C1                  A  3131    	POP	BC
040C14 C1                  A  3132    	POP	BC
                           A  3133    ;  256			mos_puts(image_buffer, width * 
                           A  3134    .LINE 256
                           A  3135    
040C15 01000000            A  3136    	LD	BC,0
040C19 C5                  A  3137    	PUSH	BC
040C1A DD27ED              A  3138    	LD	HL,(IX+%FFFFFFED)
040C1D DD07E5              A  3139    	LD	BC,(IX+%FFFFFFE5)
040C20 CD B8 4F 04         A  3140    	CALL	__imulu
040C24 29                  A  3141    	ADD	HL,HL
040C25 29                  A  3142    	ADD	HL,HL
040C26 E5                  A  3143    	PUSH	HL
040C27 DD07FC              A  3144    	LD	BC,(IX+%FFFFFFFC)
040C2A C5                  A  3145    	PUSH	BC
040C2B CD 9D 43 04         A  3146    	CALL	_mos_puts
040C2F C1                  A  3147    	POP	BC
040C30 C1                  A  3148    	POP	BC
040C31 C1                  A  3149    	POP	BC
                           A  3150    ;  257	
                           A  3151    ;  258	    } else if (bit_depth == 32) {
                           A  3152    .LINE 258
                           A  3153    
040C32 C3 78 0D 04         A  3154    	JR	L_92
040C36                     A  3155    L_89:
040C36 DD27E1              A  3156    	LD	HL,(IX+%FFFFFFE1)
040C39 DD5EE4              A  3157    	LD	E,(IX+%FFFFFFE4)
040C3C 01200000            A  3158    	LD	BC,32
040C40 AF                  A  3159    	XOR	A,A
040C41 CD 6B 50 04         A  3160    	CALL	__lcmps
040C45 C2 78 0D 04         A  3161    	JR	NZ,L_92
                           A  3162    ;  259			uint32_t buffer_index = 0; // I
                           A  3163    .LINE 259
                           A  3164    
040C49 01000000            A  3165    	LD	BC,0
040C4D AF                  A  3166    	XOR	A,A
040C4E DD0FC4              A  3167    	LD	(IX+%FFFFFFC4),BC
040C51 DD77C7              A  3168    	LD	(IX+%FFFFFFC7),A
                           A  3169    ;  260			uint16_t non_pad_row = width * 
                           A  3170    .LINE 260
                           A  3171    
040C54 DD27ED              A  3172    	LD	HL,(IX+%FFFFFFED)
040C57 DD5EF0              A  3173    	LD	E,(IX+%FFFFFFF0)
040C5A DD07E1              A  3174    	LD	BC,(IX+%FFFFFFE1)
040C5D DD7EE4              A  3175    	LD	A,(IX+%FFFFFFE4)
040C60 CD 4E 55 04         A  3176    	CALL	__lmuls
040C64 01080000            A  3177    	LD	BC,8
040C68 AF                  A  3178    	XOR	A,A
040C69 CD 78 4E 04         A  3179    	CALL	__ldivs
040C6D E5C1                A  3180    	LD	BC,HL
040C6F DD0FD1              A  3181    	LD	(IX+%FFFFFFD1),BC
040C72 DD73D4              A  3182    	LD	(IX+%FFFFFFD4),E
040C75 C5E1                A  3183    	LD	HL,BC
040C77 DD75BC              A  3184    	LD	(IX+%FFFFFFBC),L
040C7A DD74BD              A  3185    	LD	(IX+%FFFFFFBD),H
                           A  3186    ;  261			bytes_per_row = (width * bit_de
                           A  3187    ;  262	
                           A  3188    ;  263			src = (char*)malloc(non_pad_row
                           A  3189    .LINE 263
                           A  3190    
040C7D CD 9B 4D 04         A  3191    	CALL	__stoiu
040C81 E5                  A  3192    	PUSH	HL
040C82 CD 06 4B 04         A  3193    	CALL	_malloc
040C86 C1                  A  3194    	POP	BC
040C87 DD2FC1              A  3195    	LD	(IX+%FFFFFFC1),HL
                           A  3196    ;  264	
                           A  3197    ;  265			for (y = height - 1; y >= 0; y-
                           A  3198    .LINE 265
                           A  3199    
040C8A DD27E5              A  3200    	LD	HL,(IX+%FFFFFFE5)
040C8D DD5EE8              A  3201    	LD	E,(IX+%FFFFFFE8)
040C90 01FFFFFF            A  3202    	LD	BC,16777215
040C94 3EFF                A  3203    	LD	A,%FF
040C96 CD FB 49 04         A  3204    	CALL	__ladd
040C9A DD2FF1              A  3205    	LD	(IX+%FFFFFFF1),HL
040C9D DD73F4              A  3206    	LD	(IX+%FFFFFFF4),E
040CA0 C3 2B 0D 04         A  3207    	JR	L_85
040CA4                     A  3208    L_83:
                           A  3209    ;  266				mos_fread(file, src, non_pa
                           A  3210    .LINE 266
                           A  3211    
040CA4 DD07D1              A  3212    	LD	BC,(IX+%FFFFFFD1)
040CA7 CD 9B 4D 04         A  3213    	CALL	__stoiu
040CAB E5                  A  3214    	PUSH	HL
040CAC DD07C1              A  3215    	LD	BC,(IX+%FFFFFFC1)
040CAF C5                  A  3216    	PUSH	BC
040CB0 DD4EFF              A  3217    	LD	C,(IX+%FFFFFFFF)
040CB3 0600                A  3218    	LD	B,%0
040CB5 C5                  A  3219    	PUSH	BC
040CB6 CD 0A 47 04         A  3220    	CALL	_mos_fread
040CBA C1                  A  3221    	POP	BC
040CBB C1                  A  3222    	POP	BC
040CBC C1                  A  3223    	POP	BC
                           A  3224    ;  267				memcpy(image_buffer + buffe
                           A  3225    .LINE 267
                           A  3226    
040CBD DD07D1              A  3227    	LD	BC,(IX+%FFFFFFD1)
040CC0 CD 9B 4D 04         A  3228    	CALL	__stoiu
040CC4 E5                  A  3229    	PUSH	HL
040CC5 DD07C1              A  3230    	LD	BC,(IX+%FFFFFFC1)
040CC8 C5                  A  3231    	PUSH	BC
040CC9 DD07C4              A  3232    	LD	BC,(IX+%FFFFFFC4)
040CCC DD27FC              A  3233    	LD	HL,(IX+%FFFFFFFC)
040CCF 09                  A  3234    	ADD	HL,BC
040CD0 E5                  A  3235    	PUSH	HL
040CD1 CD 0B 4F 04         A  3236    	CALL	_memcpy
040CD5 C1                  A  3237    	POP	BC
040CD6 C1                  A  3238    	POP	BC
040CD7 C1                  A  3239    	POP	BC
                           A  3240    ;  268				buffer_index += non_pad_row
                           A  3241    .LINE 268
                           A  3242    
040CD8 DD07D1              A  3243    	LD	BC,(IX+%FFFFFFD1)
040CDB CD 9B 4D 04         A  3244    	CALL	__stoiu
040CDF E5C1                A  3245    	LD	BC,HL
040CE1 AF                  A  3246    	XOR	A,A
040CE2 DD27C4              A  3247    	LD	HL,(IX+%FFFFFFC4)
040CE5 DD5EC7              A  3248    	LD	E,(IX+%FFFFFFC7)
040CE8 CD FB 49 04         A  3249    	CALL	__ladd
040CEC DD2FC4              A  3250    	LD	(IX+%FFFFFFC4),HL
040CEF DD73C7              A  3251    	LD	(IX+%FFFFFFC7),E
                           A  3252    ;  269				mos_flseek(file, fo->fptr +
                           A  3253    .LINE 269
                           A  3254    
040CF2 DD31BE              A  3255    	LD	IY,(IX+%FFFFFFBE)
040CF5 FD2711              A  3256    	LD	HL,(IY+%11)
040CF8 FD5E14              A  3257    	LD	E,(IY+%14)
040CFB DD07C9              A  3258    	LD	BC,(IX+%FFFFFFC9)
040CFE DD7ECC              A  3259    	LD	A,(IX+%FFFFFFCC)
040D01 CD FB 49 04         A  3260    	CALL	__ladd
040D05 4B                  A  3261    	LD	C,E
040D06 0600                A  3262    	LD	B,%0
040D08 C5                  A  3263    	PUSH	BC
040D09 E5                  A  3264    	PUSH	HL
040D0A DD4EFF              A  3265    	LD	C,(IX+%FFFFFFFF)
040D0D C5                  A  3266    	PUSH	BC
040D0E CD 44 47 04         A  3267    	CALL	_mos_flseek
040D12 C1                  A  3268    	POP	BC
040D13 C1                  A  3269    	POP	BC
040D14 C1                  A  3270    	POP	BC
040D15 DD27F1              A  3271    	LD	HL,(IX+%FFFFFFF1)
040D18 DD5EF4              A  3272    	LD	E,(IX+%FFFFFFF4)
040D1B 01FFFFFF            A  3273    	LD	BC,16777215
040D1F 3EFF                A  3274    	LD	A,%FF
040D21 CD FB 49 04         A  3275    	CALL	__ladd
040D25 DD2FF1              A  3276    	LD	(IX+%FFFFFFF1),HL
040D28 DD73F4              A  3277    	LD	(IX+%FFFFFFF4),E
                           A  3278    ;  270				
                           A  3279    ;  271			}
040D2B                     A  3280    L_85:
                           A  3281    .LINE 271
                           A  3282    
040D2B DD27F1              A  3283    	LD	HL,(IX+%FFFFFFF1)
040D2E DD5EF4              A  3284    	LD	E,(IX+%FFFFFFF4)
040D31 01000000            A  3285    	LD	BC,0
040D35 AF                  A  3286    	XOR	A,A
040D36 CD 6B 50 04         A  3287    	CALL	__lcmps
040D3A F2 44 0D 04         A  3288    	JP	P,L__68
040D3E EA A4 0C 04         A  3289    	JP	PE,L_83
040D42 18 04               A  3290    	JR	L__69
040D44                     A  3291    L__68:
040D44 E2 A4 0C 04         A  3292    	JP	PO,L_83
040D48                     A  3293    L__69:
                           A  3294    ;  272			twiddle_buffer(image_buffer, wi
                           A  3295    .LINE 272
                           A  3296    
040D48 DD07E5              A  3297    	LD	BC,(IX+%FFFFFFE5)
040D4B C5                  A  3298    	PUSH	BC
040D4C DD07ED              A  3299    	LD	BC,(IX+%FFFFFFED)
040D4F C5                  A  3300    	PUSH	BC
040D50 DD07FC              A  3301    	LD	BC,(IX+%FFFFFFFC)
040D53 C5                  A  3302    	PUSH	BC
040D54 CD 53 03 04         A  3303    	CALL	_twiddle_buffer
040D58 C1                  A  3304    	POP	BC
040D59 C1                  A  3305    	POP	BC
040D5A C1                  A  3306    	POP	BC
                           A  3307    ;  273			mos_puts(image_buffer, width * 
                           A  3308    .LINE 273
                           A  3309    
040D5B 01000000            A  3310    	LD	BC,0
040D5F C5                  A  3311    	PUSH	BC
040D60 DD27ED              A  3312    	LD	HL,(IX+%FFFFFFED)
040D63 DD07E5              A  3313    	LD	BC,(IX+%FFFFFFE5)
040D66 CD B8 4F 04         A  3314    	CALL	__imulu
040D6A 29                  A  3315    	ADD	HL,HL
040D6B 29                  A  3316    	ADD	HL,HL
040D6C E5                  A  3317    	PUSH	HL
040D6D DD07FC              A  3318    	LD	BC,(IX+%FFFFFFFC)
040D70 C5                  A  3319    	PUSH	BC
040D71 CD 9D 43 04         A  3320    	CALL	_mos_puts
040D75 C1                  A  3321    	POP	BC
040D76 C1                  A  3322    	POP	BC
040D77 C1                  A  3323    	POP	BC
                           A  3324    ;  274		}
040D78                     A  3325    L_92:
                           A  3326    .LINE 274
                           A  3327    
                           A  3328    ;  275	
                           A  3329    ;  276	    mos_fclose(file);
                           A  3330    .LINE 276
                           A  3331    
040D78 DD4EFF              A  3332    	LD	C,(IX+%FFFFFFFF)
040D7B 0600                A  3333    	LD	B,%0
040D7D C5                  A  3334    	PUSH	BC
040D7E CD F5 45 04         A  3335    	CALL	_mos_fclose
040D82 C1                  A  3336    	POP	BC
                           A  3337    ;  277	    free(image_buffer);
                           A  3338    .LINE 277
                           A  3339    
040D83 DD07FC              A  3340    	LD	BC,(IX+%FFFFFFFC)
040D86 C5                  A  3341    	PUSH	BC
040D87 CD 01 4A 04         A  3342    	CALL	_free
040D8B C1                  A  3343    	POP	BC
                           A  3344    ;  278	    //return width * height;
                           A  3345    ;  279		return_info.bmp_width = width;
                           A  3346    .LINE 279
                           A  3347    
040D8C DD27ED              A  3348    	LD	HL,(IX+%FFFFFFED)
040D8F DD75D8              A  3349    	LD	(IX+%FFFFFFD8),L
040D92 DD74D9              A  3350    	LD	(IX+%FFFFFFD9),H
                           A  3351    ;  280		return_info.bmp_height = height;
                           A  3352    .LINE 280
                           A  3353    
040D95 DD27E5              A  3354    	LD	HL,(IX+%FFFFFFE5)
040D98 DD75DA              A  3355    	LD	(IX+%FFFFFFDA),L
040D9B DD74DB              A  3356    	LD	(IX+%FFFFFFDB),H
                           A  3357    ;  281		return_info.bmp_bitdepth = bit_dept
                           A  3358    .LINE 281
                           A  3359    
040D9E DD7EE1              A  3360    	LD	A,(IX+%FFFFFFE1)
040DA1 DD77DC              A  3361    	LD	(IX+%FFFFFFDC),A
                           A  3362    ;  282		return return_info;
                           A  3363    .LINE 282
                           A  3364    
040DA4 ED2206              A  3365    	LEA	HL,IX+%6
040DA7 ED17                A  3366    	LD	DE,(HL)
040DA9 ED22D8              A  3367    	LEA	HL,IX+%FFFFFFD8
040DAC 01050000            A  3368    	LD	BC,5
040DB0 EDB0                A  3369    	LDIR	
040DB2 DD2706              A  3370    	LD	HL,(IX+%6)
                           A  3371    ;  283	
                           A  3372    ;  284	}
040DB5                     A  3373    L_93:
                           A  3374    .LINE 284
                           A  3375    
040DB5 DDF9                A  3376    	LD	SP,IX
040DB7 DDE1                A  3377    	POP	IX
040DB9 C9                  A  3378    	RET	
                           A  3379    
                           A  3380    
                           A  3381    ;**************************** _load_bmp_direct 
                           A  3382    ;Name                         Addr/Register   S
                           A  3383    ;_free                               IMPORT  --
                           A  3384    ;_mos_flseek                         IMPORT  --
                           A  3385    ;_memcpy                             IMPORT  --
                           A  3386    ;_mos_puts                           IMPORT  --
                           A  3387    ;_write16bit                         IMPORT  --
                           A  3388    ;_putch                              IMPORT  --
                           A  3389    ;_vdp_bitmapSelect                   IMPORT  --
                           A  3390    ;_mos_fclose                         IMPORT  --
                           A  3391    ;_mos_fgetc                          IMPORT  --
                           A  3392    ;_malloc                             IMPORT  --
                           A  3393    ;_mos_fread                          IMPORT  --
                           A  3394    ;_mos_getfil                         IMPORT  --
                           A  3395    ;___print_sendstring                 IMPORT  --
                           A  3396    ;___print_xputch                     IMPORT    
                           A  3397    ;___print_uputch                     IMPORT  --
                           A  3398    ;_mos_fopen                          IMPORT  --
                           A  3399    ;color_table                        IX-1150   1
                           A  3400    ;header                              IX-126    
                           A  3401    ;biSize                               IX-72    
                           A  3402    ;non_pad_row                          IX-68    
                           A  3403    ;fo                                   IX-66    
                           A  3404    ;src                                  IX-63    
                           A  3405    ;buffer_index                         IX-60    
                           A  3406    ;index                                IX-56    
                           A  3407    ;row_padding                          IX-55    
                           A  3408    ;color_table_size                     IX-51    
                           A  3409    ;O_14                                 IX-47    
                           A  3410    ;r                                    IX-43    
                           A  3411    ;b                                    IX-42    
                           A  3412    ;g                                    IX-41    
                           A  3413    ;return_info                          IX-40    
                           A  3414    ;x                                    IX-35    
                           A  3415    ;bit_depth                            IX-31    
                           A  3416    ;height                               IX-27    
                           A  3417    ;i                                    IX-23    
                           A  3418    ;width                                IX-19    
                           A  3419    ;y                                    IX-15    
                           A  3420    ;buffer_index                         IX-11    
                           A  3421    ;buffer_index                          IX-7    
                           A  3422    ;image_buffer                          IX-4    
                           A  3423    ;file                                  IX-1    
                           A  3424    ;slot                                 IX+12    
                           A  3425    ;filename                              IX+9    
                           A  3426    
                           A  3427    
                           A  3428    ; Stack Frame Size: 1185 (bytes)
                           A  3429    ;       Spill Code: -3 (instruction)
                           A  3430    
                           A  3431    
                           A  3432    .ENDFUNC "load_bmp_direct",284,"_load_bmp_direc
                           A  3433    	SEGMENT STRSECT
0456C8                     A  3434    L__35:
0456C8 4572726F 723A2063   A  3435    	DB	"Error: could not open "
0456D0 6F756C64 206E6F74 
0456D8 206F7065 6E20 
0456DE 00                  A  3436    	DB	0
0456DF                     A  3437    L__36:
0456DF 2E                  A  3438    	DB	"."
0456E0 0D0A00              A  3439    	DB	13,10,0
0456E3                     A  3440    L__45:
0456E3 4572726F 723A2075   A  3441    	DB	"Error: unsupported bit depth (not 8, 2
0456EB 6E737570 706F7274 
0456F3 65642062 69742064 
0456FB 65707468 20286E6F 
045703 7420382C 20323420 
04570B 6F722033 322D6269 
045713 74292E 
045716 0A00                A  3442    	DB	10,0
                           A  3443    	SEGMENT CODE
                           A  3444    ;  285	
                           A  3445    ;  286	
                           A  3446    ;  287	void load_font_frame() {
040DBA                     A  3447    _load_font_frame:
                           A  3448    .DEFINE "_load_font_frame"
                           A  3449    
                           A  3450    .VALUE _load_font_frame
                           A  3451    
                           A  3452    .CLASS 2
                           A  3453    
                           A  3454    .TYPE 65
                           A  3455    
                           A  3456    .ENDEF
                           A  3457    
                           A  3458    .BEGFUNC "load_font_frame",287,"_load_font_fram
                           A  3459    
040DBA DDE5                A  3460    	PUSH	IX
040DBC DD210000 00         A  3461    	LD	IX,0
040DC1 DD39                A  3462    	ADD	IX,SP
040DC3 21F7FEFF            A  3463    	LD	HL,-265
040DC7 39                  A  3464    	ADD	HL,SP
040DC8 F9                  A  3465    	LD	SP,HL
                           A  3466    ;  288	
                           A  3467    ;  289	    printf("Loading font & frame...\r\n
                           A  3468    .LINE 289
                           A  3469    
040DC9 01 A1 4D 04         A  3470    	LD	BC,___print_uputch
040DCD ED43 42 56 04       A  3471    	LD	(___print_xputch),BC
040DD2 01 18 57 04         A  3472    	LD	BC,L__71
040DD6 C5                  A  3473    	PUSH	BC
040DD7 CD 06 4C 04         A  3474    	CALL	___print_sendstring
040DDB C1                  A  3475    	POP	BC
                           A  3476    ;  290	    load_bmp_direct("snake_assets/f_blu
                           A  3477    .LINE 290
                           A  3478    
040DDC 01780000            A  3479    	LD	BC,120
040DE0 C5                  A  3480    	PUSH	BC
040DE1 01 32 57 04         A  3481    	LD	BC,L__72
040DE5 C5                  A  3482    	PUSH	BC
040DE6 ED65FB              A  3483    	PEA	IX+%FFFFFFFB
040DE9 CD 4F 05 04         A  3484    	CALL	_load_bmp_direct
040DED C1                  A  3485    	POP	BC
040DEE C1                  A  3486    	POP	BC
040DEF C1                  A  3487    	POP	BC
                           A  3488    ;  291	    load_bmp_direct("snake_assets/f_blu
                           A  3489    .LINE 291
                           A  3490    
040DF0 01790000            A  3491    	LD	BC,121
040DF4 C5                  A  3492    	PUSH	BC
040DF5 01 4D 57 04         A  3493    	LD	BC,L__73
040DF9 C5                  A  3494    	PUSH	BC
040DFA ED65F6              A  3495    	PEA	IX+%FFFFFFF6
040DFD CD 4F 05 04         A  3496    	CALL	_load_bmp_direct
040E01 C1                  A  3497    	POP	BC
040E02 C1                  A  3498    	POP	BC
040E03 C1                  A  3499    	POP	BC
                           A  3500    ;  292	    load_bmp_direct("snake_assets/f_blu
                           A  3501    .LINE 292
                           A  3502    
040E04 017A0000            A  3503    	LD	BC,122
040E08 C5                  A  3504    	PUSH	BC
040E09 01 67 57 04         A  3505    	LD	BC,L__74
040E0D C5                  A  3506    	PUSH	BC
040E0E ED65F1              A  3507    	PEA	IX+%FFFFFFF1
040E11 CD 4F 05 04         A  3508    	CALL	_load_bmp_direct
040E15 C1                  A  3509    	POP	BC
040E16 C1                  A  3510    	POP	BC
040E17 C1                  A  3511    	POP	BC
                           A  3512    ;  293	    load_bmp_direct("snake_assets/f_blu
                           A  3513    .LINE 293
                           A  3514    
040E18 017B0000            A  3515    	LD	BC,123
040E1C C5                  A  3516    	PUSH	BC
040E1D 01 82 57 04         A  3517    	LD	BC,L__75
040E21 C5                  A  3518    	PUSH	BC
040E22 ED65EC              A  3519    	PEA	IX+%FFFFFFEC
040E25 CD 4F 05 04         A  3520    	CALL	_load_bmp_direct
040E29 C1                  A  3521    	POP	BC
040E2A C1                  A  3522    	POP	BC
040E2B C1                  A  3523    	POP	BC
                           A  3524    ;  294	    load_bmp_direct("snake_assets/f_blu
                           A  3525    .LINE 294
                           A  3526    
040E2C 017C0000            A  3527    	LD	BC,124
040E30 C5                  A  3528    	PUSH	BC
040E31 01 9C 57 04         A  3529    	LD	BC,L__76
040E35 C5                  A  3530    	PUSH	BC
040E36 ED65E7              A  3531    	PEA	IX+%FFFFFFE7
040E39 CD 4F 05 04         A  3532    	CALL	_load_bmp_direct
040E3D C1                  A  3533    	POP	BC
040E3E C1                  A  3534    	POP	BC
040E3F C1                  A  3535    	POP	BC
                           A  3536    ;  295	    load_bmp_direct("snake_assets/f_blu
                           A  3537    .LINE 295
                           A  3538    
040E40 017D0000            A  3539    	LD	BC,125
040E44 C5                  A  3540    	PUSH	BC
040E45 01 B7 57 04         A  3541    	LD	BC,L__77
040E49 C5                  A  3542    	PUSH	BC
040E4A ED65E2              A  3543    	PEA	IX+%FFFFFFE2
040E4D CD 4F 05 04         A  3544    	CALL	_load_bmp_direct
040E51 C1                  A  3545    	POP	BC
040E52 C1                  A  3546    	POP	BC
040E53 C1                  A  3547    	POP	BC
                           A  3548    ;  296	    load_bmp_direct("snake_assets/f_blu
                           A  3549    .LINE 296
                           A  3550    
040E54 017E0000            A  3551    	LD	BC,126
040E58 C5                  A  3552    	PUSH	BC
040E59 01 D1 57 04         A  3553    	LD	BC,L__78
040E5D C5                  A  3554    	PUSH	BC
040E5E ED65DD              A  3555    	PEA	IX+%FFFFFFDD
040E61 CD 4F 05 04         A  3556    	CALL	_load_bmp_direct
040E65 C1                  A  3557    	POP	BC
040E66 C1                  A  3558    	POP	BC
040E67 C1                  A  3559    	POP	BC
                           A  3560    ;  297	    load_bmp_direct("snake_assets/f_blu
                           A  3561    .LINE 297
                           A  3562    
040E68 017F0000            A  3563    	LD	BC,127
040E6C C5                  A  3564    	PUSH	BC
040E6D 01 EC 57 04         A  3565    	LD	BC,L__79
040E71 C5                  A  3566    	PUSH	BC
040E72 ED65D8              A  3567    	PEA	IX+%FFFFFFD8
040E75 CD 4F 05 04         A  3568    	CALL	_load_bmp_direct
040E79 C1                  A  3569    	POP	BC
040E7A C1                  A  3570    	POP	BC
040E7B C1                  A  3571    	POP	BC
                           A  3572    ;  298	    load_bmp_direct("snake_assets/f_blu
                           A  3573    .LINE 298
                           A  3574    
040E7C 01800000            A  3575    	LD	BC,128
040E80 C5                  A  3576    	PUSH	BC
040E81 01 06 58 04         A  3577    	LD	BC,L__80
040E85 C5                  A  3578    	PUSH	BC
040E86 ED65D3              A  3579    	PEA	IX+%FFFFFFD3
040E89 CD 4F 05 04         A  3580    	CALL	_load_bmp_direct
040E8D C1                  A  3581    	POP	BC
040E8E C1                  A  3582    	POP	BC
040E8F C1                  A  3583    	POP	BC
                           A  3584    ;  299	
                           A  3585    ;  300	    //load_bmp_direct("snake_assets/fon
                           A  3586    ;  301	
                           A  3587    ;  302	    load_bmp_direct("snake_assets/font/
                           A  3588    .LINE 302
                           A  3589    
040E90 01850000            A  3590    	LD	BC,133
040E94 C5                  A  3591    	PUSH	BC
040E95 01 22 58 04         A  3592    	LD	BC,L__81
040E99 C5                  A  3593    	PUSH	BC
040E9A ED65CE              A  3594    	PEA	IX+%FFFFFFCE
040E9D CD 4F 05 04         A  3595    	CALL	_load_bmp_direct
040EA1 C1                  A  3596    	POP	BC
040EA2 C1                  A  3597    	POP	BC
040EA3 C1                  A  3598    	POP	BC
                           A  3599    ;  303	    load_bmp_direct("snake_assets/font/
                           A  3600    .LINE 303
                           A  3601    
040EA4 01880000            A  3602    	LD	BC,136
040EA8 C5                  A  3603    	PUSH	BC
040EA9 01 3B 58 04         A  3604    	LD	BC,L__82
040EAD C5                  A  3605    	PUSH	BC
040EAE ED65C9              A  3606    	PEA	IX+%FFFFFFC9
040EB1 CD 4F 05 04         A  3607    	CALL	_load_bmp_direct
040EB5 C1                  A  3608    	POP	BC
040EB6 C1                  A  3609    	POP	BC
040EB7 C1                  A  3610    	POP	BC
                           A  3611    ;  304	    load_bmp_direct("snake_assets/font/
                           A  3612    .LINE 304
                           A  3613    
040EB8 018A0000            A  3614    	LD	BC,138
040EBC C5                  A  3615    	PUSH	BC
040EBD 01 54 58 04         A  3616    	LD	BC,L__83
040EC1 C5                  A  3617    	PUSH	BC
040EC2 ED65C4              A  3618    	PEA	IX+%FFFFFFC4
040EC5 CD 4F 05 04         A  3619    	CALL	_load_bmp_direct
040EC9 C1                  A  3620    	POP	BC
040ECA C1                  A  3621    	POP	BC
040ECB C1                  A  3622    	POP	BC
                           A  3623    ;  305	    load_bmp_direct("snake_assets/font/
                           A  3624    .LINE 305
                           A  3625    
040ECC 018B0000            A  3626    	LD	BC,139
040ED0 C5                  A  3627    	PUSH	BC
040ED1 01 6D 58 04         A  3628    	LD	BC,L__84
040ED5 C5                  A  3629    	PUSH	BC
040ED6 ED65BF              A  3630    	PEA	IX+%FFFFFFBF
040ED9 CD 4F 05 04         A  3631    	CALL	_load_bmp_direct
040EDD C1                  A  3632    	POP	BC
040EDE C1                  A  3633    	POP	BC
040EDF C1                  A  3634    	POP	BC
                           A  3635    ;  306	    load_bmp_direct("snake_assets/font/
                           A  3636    .LINE 306
                           A  3637    
040EE0 01900000            A  3638    	LD	BC,144
040EE4 C5                  A  3639    	PUSH	BC
040EE5 01 86 58 04         A  3640    	LD	BC,L__85
040EE9 C5                  A  3641    	PUSH	BC
040EEA ED65BA              A  3642    	PEA	IX+%FFFFFFBA
040EED CD 4F 05 04         A  3643    	CALL	_load_bmp_direct
040EF1 C1                  A  3644    	POP	BC
040EF2 C1                  A  3645    	POP	BC
040EF3 C1                  A  3646    	POP	BC
                           A  3647    ;  307	    load_bmp_direct("snake_assets/font/
                           A  3648    .LINE 307
                           A  3649    
040EF4 01920000            A  3650    	LD	BC,146
040EF8 C5                  A  3651    	PUSH	BC
040EF9 01 9F 58 04         A  3652    	LD	BC,L__86
040EFD C5                  A  3653    	PUSH	BC
040EFE ED65B5              A  3654    	PEA	IX+%FFFFFFB5
040F01 CD 4F 05 04         A  3655    	CALL	_load_bmp_direct
040F05 C1                  A  3656    	POP	BC
040F06 C1                  A  3657    	POP	BC
040F07 C1                  A  3658    	POP	BC
                           A  3659    ;  308	
                           A  3660    ;  309	    load_bmp_direct("snake_assets/font/
                           A  3661    .LINE 309
                           A  3662    
040F08 01940000            A  3663    	LD	BC,148
040F0C C5                  A  3664    	PUSH	BC
040F0D 01 B8 58 04         A  3665    	LD	BC,L__87
040F11 C5                  A  3666    	PUSH	BC
040F12 ED65B0              A  3667    	PEA	IX+%FFFFFFB0
040F15 CD 4F 05 04         A  3668    	CALL	_load_bmp_direct
040F19 C1                  A  3669    	POP	BC
040F1A C1                  A  3670    	POP	BC
040F1B C1                  A  3671    	POP	BC
                           A  3672    ;  310	    load_bmp_direct("snake_assets/font/
                           A  3673    .LINE 310
                           A  3674    
040F1C 01950000            A  3675    	LD	BC,149
040F20 C5                  A  3676    	PUSH	BC
040F21 01 D1 58 04         A  3677    	LD	BC,L__88
040F25 C5                  A  3678    	PUSH	BC
040F26 ED65AB              A  3679    	PEA	IX+%FFFFFFAB
040F29 CD 4F 05 04         A  3680    	CALL	_load_bmp_direct
040F2D C1                  A  3681    	POP	BC
040F2E C1                  A  3682    	POP	BC
040F2F C1                  A  3683    	POP	BC
                           A  3684    ;  311	    load_bmp_direct("snake_assets/font/
                           A  3685    .LINE 311
                           A  3686    
040F30 01960000            A  3687    	LD	BC,150
040F34 C5                  A  3688    	PUSH	BC
040F35 01 EA 58 04         A  3689    	LD	BC,L__89
040F39 C5                  A  3690    	PUSH	BC
040F3A ED65A6              A  3691    	PEA	IX+%FFFFFFA6
040F3D CD 4F 05 04         A  3692    	CALL	_load_bmp_direct
040F41 C1                  A  3693    	POP	BC
040F42 C1                  A  3694    	POP	BC
040F43 C1                  A  3695    	POP	BC
                           A  3696    ;  312	    load_bmp_direct("snake_assets/font/
                           A  3697    .LINE 312
                           A  3698    
040F44 01970000            A  3699    	LD	BC,151
040F48 C5                  A  3700    	PUSH	BC
040F49 01 03 59 04         A  3701    	LD	BC,L__90
040F4D C5                  A  3702    	PUSH	BC
040F4E ED65A1              A  3703    	PEA	IX+%FFFFFFA1
040F51 CD 4F 05 04         A  3704    	CALL	_load_bmp_direct
040F55 C1                  A  3705    	POP	BC
040F56 C1                  A  3706    	POP	BC
040F57 C1                  A  3707    	POP	BC
                           A  3708    ;  313	    load_bmp_direct("snake_assets/font/
                           A  3709    .LINE 313
                           A  3710    
040F58 01980000            A  3711    	LD	BC,152
040F5C C5                  A  3712    	PUSH	BC
040F5D 01 1C 59 04         A  3713    	LD	BC,L__91
040F61 C5                  A  3714    	PUSH	BC
040F62 ED659C              A  3715    	PEA	IX+%FFFFFF9C
040F65 CD 4F 05 04         A  3716    	CALL	_load_bmp_direct
040F69 C1                  A  3717    	POP	BC
040F6A C1                  A  3718    	POP	BC
040F6B C1                  A  3719    	POP	BC
                           A  3720    ;  314	    load_bmp_direct("snake_assets/font/
                           A  3721    .LINE 314
                           A  3722    
040F6C 01990000            A  3723    	LD	BC,153
040F70 C5                  A  3724    	PUSH	BC
040F71 01 35 59 04         A  3725    	LD	BC,L__92
040F75 C5                  A  3726    	PUSH	BC
040F76 ED6597              A  3727    	PEA	IX+%FFFFFF97
040F79 CD 4F 05 04         A  3728    	CALL	_load_bmp_direct
040F7D C1                  A  3729    	POP	BC
040F7E C1                  A  3730    	POP	BC
040F7F C1                  A  3731    	POP	BC
                           A  3732    ;  315	    load_bmp_direct("snake_assets/font/
                           A  3733    .LINE 315
                           A  3734    
040F80 019A0000            A  3735    	LD	BC,154
040F84 C5                  A  3736    	PUSH	BC
040F85 01 4E 59 04         A  3737    	LD	BC,L__93
040F89 C5                  A  3738    	PUSH	BC
040F8A ED6592              A  3739    	PEA	IX+%FFFFFF92
040F8D CD 4F 05 04         A  3740    	CALL	_load_bmp_direct
040F91 C1                  A  3741    	POP	BC
040F92 C1                  A  3742    	POP	BC
040F93 C1                  A  3743    	POP	BC
                           A  3744    ;  316	    load_bmp_direct("snake_assets/font/
                           A  3745    .LINE 316
                           A  3746    
040F94 019B0000            A  3747    	LD	BC,155
040F98 C5                  A  3748    	PUSH	BC
040F99 01 67 59 04         A  3749    	LD	BC,L__94
040F9D C5                  A  3750    	PUSH	BC
040F9E ED658D              A  3751    	PEA	IX+%FFFFFF8D
040FA1 CD 4F 05 04         A  3752    	CALL	_load_bmp_direct
040FA5 C1                  A  3753    	POP	BC
040FA6 C1                  A  3754    	POP	BC
040FA7 C1                  A  3755    	POP	BC
                           A  3756    ;  317	    load_bmp_direct("snake_assets/font/
                           A  3757    .LINE 317
                           A  3758    
040FA8 019C0000            A  3759    	LD	BC,156
040FAC C5                  A  3760    	PUSH	BC
040FAD 01 80 59 04         A  3761    	LD	BC,L__95
040FB1 C5                  A  3762    	PUSH	BC
040FB2 ED6588              A  3763    	PEA	IX+%FFFFFF88
040FB5 CD 4F 05 04         A  3764    	CALL	_load_bmp_direct
040FB9 C1                  A  3765    	POP	BC
040FBA C1                  A  3766    	POP	BC
040FBB C1                  A  3767    	POP	BC
                           A  3768    ;  318	    load_bmp_direct("snake_assets/font/
                           A  3769    .LINE 318
                           A  3770    
040FBC 019D0000            A  3771    	LD	BC,157
040FC0 C5                  A  3772    	PUSH	BC
040FC1 01 99 59 04         A  3773    	LD	BC,L__96
040FC5 C5                  A  3774    	PUSH	BC
040FC6 ED6583              A  3775    	PEA	IX+%FFFFFF83
040FC9 CD 4F 05 04         A  3776    	CALL	_load_bmp_direct
040FCD C1                  A  3777    	POP	BC
040FCE C1                  A  3778    	POP	BC
040FCF C1                  A  3779    	POP	BC
                           A  3780    ;  319	
                           A  3781    ;  320	    load_bmp_direct("snake_assets/font/
                           A  3782    .LINE 320
                           A  3783    
040FD0 01A20000            A  3784    	LD	BC,162
040FD4 C5                  A  3785    	PUSH	BC
040FD5 01 B2 59 04         A  3786    	LD	BC,L__97
040FD9 C5                  A  3787    	PUSH	BC
040FDA DDE5E1              A  3788    	LD	HL,IX
040FDD 017EFFFF            A  3789    	LD	BC,-130
040FE1 09                  A  3790    	ADD	HL,BC
040FE2 E5C1                A  3791    	LD	BC,HL
040FE4 C5                  A  3792    	PUSH	BC
040FE5 CD 4F 05 04         A  3793    	CALL	_load_bmp_direct
040FE9 C1                  A  3794    	POP	BC
040FEA C1                  A  3795    	POP	BC
040FEB C1                  A  3796    	POP	BC
                           A  3797    ;  321		load_bmp_direct("snake_assets/font/
                           A  3798    .LINE 321
                           A  3799    
040FEC 01A30000            A  3800    	LD	BC,163
040FF0 C5                  A  3801    	PUSH	BC
040FF1 01 CB 59 04         A  3802    	LD	BC,L__98
040FF5 C5                  A  3803    	PUSH	BC
040FF6 DDE5E1              A  3804    	LD	HL,IX
040FF9 0179FFFF            A  3805    	LD	BC,-135
040FFD 09                  A  3806    	ADD	HL,BC
040FFE E5C1                A  3807    	LD	BC,HL
041000 C5                  A  3808    	PUSH	BC
041001 CD 4F 05 04         A  3809    	CALL	_load_bmp_direct
041005 C1                  A  3810    	POP	BC
041006 C1                  A  3811    	POP	BC
041007 C1                  A  3812    	POP	BC
                           A  3813    ;  322	
                           A  3814    ;  323	    load_bmp_direct("snake_assets/font/
                           A  3815    .LINE 323
                           A  3816    
041008 01A50000            A  3817    	LD	BC,165
04100C C5                  A  3818    	PUSH	BC
04100D 01 E4 59 04         A  3819    	LD	BC,L__99
041011 C5                  A  3820    	PUSH	BC
041012 DDE5E1              A  3821    	LD	HL,IX
041015 0174FFFF            A  3822    	LD	BC,-140
041019 09                  A  3823    	ADD	HL,BC
04101A E5C1                A  3824    	LD	BC,HL
04101C C5                  A  3825    	PUSH	BC
04101D CD 4F 05 04         A  3826    	CALL	_load_bmp_direct
041021 C1                  A  3827    	POP	BC
041022 C1                  A  3828    	POP	BC
041023 C1                  A  3829    	POP	BC
                           A  3830    ;  324	    load_bmp_direct("snake_assets/font/
                           A  3831    .LINE 324
                           A  3832    
041024 01A60000            A  3833    	LD	BC,166
041028 C5                  A  3834    	PUSH	BC
041029 01 FD 59 04         A  3835    	LD	BC,L__100
04102D C5                  A  3836    	PUSH	BC
04102E DDE5E1              A  3837    	LD	HL,IX
041031 016FFFFF            A  3838    	LD	BC,-145
041035 09                  A  3839    	ADD	HL,BC
041036 E5C1                A  3840    	LD	BC,HL
041038 C5                  A  3841    	PUSH	BC
041039 CD 4F 05 04         A  3842    	CALL	_load_bmp_direct
04103D C1                  A  3843    	POP	BC
04103E C1                  A  3844    	POP	BC
04103F C1                  A  3845    	POP	BC
                           A  3846    ;  325	    load_bmp_direct("snake_assets/font/
                           A  3847    .LINE 325
                           A  3848    
041040 01A70000            A  3849    	LD	BC,167
041044 C5                  A  3850    	PUSH	BC
041045 01 16 5A 04         A  3851    	LD	BC,L__101
041049 C5                  A  3852    	PUSH	BC
04104A DDE5E1              A  3853    	LD	HL,IX
04104D 016AFFFF            A  3854    	LD	BC,-150
041051 09                  A  3855    	ADD	HL,BC
041052 E5C1                A  3856    	LD	BC,HL
041054 C5                  A  3857    	PUSH	BC
041055 CD 4F 05 04         A  3858    	CALL	_load_bmp_direct
041059 C1                  A  3859    	POP	BC
04105A C1                  A  3860    	POP	BC
04105B C1                  A  3861    	POP	BC
                           A  3862    ;  326	    load_bmp_direct("snake_assets/font/
                           A  3863    .LINE 326
                           A  3864    
04105C 01A80000            A  3865    	LD	BC,168
041060 C5                  A  3866    	PUSH	BC
041061 01 2F 5A 04         A  3867    	LD	BC,L__102
041065 C5                  A  3868    	PUSH	BC
041066 DDE5E1              A  3869    	LD	HL,IX
041069 0165FFFF            A  3870    	LD	BC,-155
04106D 09                  A  3871    	ADD	HL,BC
04106E E5C1                A  3872    	LD	BC,HL
041070 C5                  A  3873    	PUSH	BC
041071 CD 4F 05 04         A  3874    	CALL	_load_bmp_direct
041075 C1                  A  3875    	POP	BC
041076 C1                  A  3876    	POP	BC
041077 C1                  A  3877    	POP	BC
                           A  3878    ;  327	    load_bmp_direct("snake_assets/font/
                           A  3879    .LINE 327
                           A  3880    
041078 01A90000            A  3881    	LD	BC,169
04107C C5                  A  3882    	PUSH	BC
04107D 01 48 5A 04         A  3883    	LD	BC,L__103
041081 C5                  A  3884    	PUSH	BC
041082 DDE5E1              A  3885    	LD	HL,IX
041085 0160FFFF            A  3886    	LD	BC,-160
041089 09                  A  3887    	ADD	HL,BC
04108A E5C1                A  3888    	LD	BC,HL
04108C C5                  A  3889    	PUSH	BC
04108D CD 4F 05 04         A  3890    	CALL	_load_bmp_direct
041091 C1                  A  3891    	POP	BC
041092 C1                  A  3892    	POP	BC
041093 C1                  A  3893    	POP	BC
                           A  3894    ;  328	    load_bmp_direct("snake_assets/font/
                           A  3895    .LINE 328
                           A  3896    
041094 01AA0000            A  3897    	LD	BC,170
041098 C5                  A  3898    	PUSH	BC
041099 01 61 5A 04         A  3899    	LD	BC,L__104
04109D C5                  A  3900    	PUSH	BC
04109E DDE5E1              A  3901    	LD	HL,IX
0410A1 015BFFFF            A  3902    	LD	BC,-165
0410A5 09                  A  3903    	ADD	HL,BC
0410A6 E5C1                A  3904    	LD	BC,HL
0410A8 C5                  A  3905    	PUSH	BC
0410A9 CD 4F 05 04         A  3906    	CALL	_load_bmp_direct
0410AD C1                  A  3907    	POP	BC
0410AE C1                  A  3908    	POP	BC
0410AF C1                  A  3909    	POP	BC
                           A  3910    ;  329	    load_bmp_direct("snake_assets/font/
                           A  3911    .LINE 329
                           A  3912    
0410B0 01AB0000            A  3913    	LD	BC,171
0410B4 C5                  A  3914    	PUSH	BC
0410B5 01 7A 5A 04         A  3915    	LD	BC,L__105
0410B9 C5                  A  3916    	PUSH	BC
0410BA DDE5E1              A  3917    	LD	HL,IX
0410BD 0156FFFF            A  3918    	LD	BC,-170
0410C1 09                  A  3919    	ADD	HL,BC
0410C2 E5C1                A  3920    	LD	BC,HL
0410C4 C5                  A  3921    	PUSH	BC
0410C5 CD 4F 05 04         A  3922    	CALL	_load_bmp_direct
0410C9 C1                  A  3923    	POP	BC
0410CA C1                  A  3924    	POP	BC
0410CB C1                  A  3925    	POP	BC
                           A  3926    ;  330	    load_bmp_direct("snake_assets/font/
                           A  3927    .LINE 330
                           A  3928    
0410CC 01AC0000            A  3929    	LD	BC,172
0410D0 C5                  A  3930    	PUSH	BC
0410D1 01 93 5A 04         A  3931    	LD	BC,L__106
0410D5 C5                  A  3932    	PUSH	BC
0410D6 DDE5E1              A  3933    	LD	HL,IX
0410D9 0151FFFF            A  3934    	LD	BC,-175
0410DD 09                  A  3935    	ADD	HL,BC
0410DE E5C1                A  3936    	LD	BC,HL
0410E0 C5                  A  3937    	PUSH	BC
0410E1 CD 4F 05 04         A  3938    	CALL	_load_bmp_direct
0410E5 C1                  A  3939    	POP	BC
0410E6 C1                  A  3940    	POP	BC
0410E7 C1                  A  3941    	POP	BC
                           A  3942    ;  331	    load_bmp_direct("snake_assets/font/
                           A  3943    .LINE 331
                           A  3944    
0410E8 01AD0000            A  3945    	LD	BC,173
0410EC C5                  A  3946    	PUSH	BC
0410ED 01 AC 5A 04         A  3947    	LD	BC,L__107
0410F1 C5                  A  3948    	PUSH	BC
0410F2 DDE5E1              A  3949    	LD	HL,IX
0410F5 014CFFFF            A  3950    	LD	BC,-180
0410F9 09                  A  3951    	ADD	HL,BC
0410FA E5C1                A  3952    	LD	BC,HL
0410FC C5                  A  3953    	PUSH	BC
0410FD CD 4F 05 04         A  3954    	CALL	_load_bmp_direct
041101 C1                  A  3955    	POP	BC
041102 C1                  A  3956    	POP	BC
041103 C1                  A  3957    	POP	BC
                           A  3958    ;  332	    load_bmp_direct("snake_assets/font/
                           A  3959    .LINE 332
                           A  3960    
041104 01AE0000            A  3961    	LD	BC,174
041108 C5                  A  3962    	PUSH	BC
041109 01 C5 5A 04         A  3963    	LD	BC,L__108
04110D C5                  A  3964    	PUSH	BC
04110E DDE5E1              A  3965    	LD	HL,IX
041111 0147FFFF            A  3966    	LD	BC,-185
041115 09                  A  3967    	ADD	HL,BC
041116 E5C1                A  3968    	LD	BC,HL
041118 C5                  A  3969    	PUSH	BC
041119 CD 4F 05 04         A  3970    	CALL	_load_bmp_direct
04111D C1                  A  3971    	POP	BC
04111E C1                  A  3972    	POP	BC
04111F C1                  A  3973    	POP	BC
                           A  3974    ;  333	    load_bmp_direct("snake_assets/font/
                           A  3975    .LINE 333
                           A  3976    
041120 01AF0000            A  3977    	LD	BC,175
041124 C5                  A  3978    	PUSH	BC
041125 01 DE 5A 04         A  3979    	LD	BC,L__109
041129 C5                  A  3980    	PUSH	BC
04112A DDE5E1              A  3981    	LD	HL,IX
04112D 0142FFFF            A  3982    	LD	BC,-190
041131 09                  A  3983    	ADD	HL,BC
041132 E5C1                A  3984    	LD	BC,HL
041134 C5                  A  3985    	PUSH	BC
041135 CD 4F 05 04         A  3986    	CALL	_load_bmp_direct
041139 C1                  A  3987    	POP	BC
04113A C1                  A  3988    	POP	BC
04113B C1                  A  3989    	POP	BC
                           A  3990    ;  334	    load_bmp_direct("snake_assets/font/
                           A  3991    .LINE 334
                           A  3992    
04113C 01B00000            A  3993    	LD	BC,176
041140 C5                  A  3994    	PUSH	BC
041141 01 F7 5A 04         A  3995    	LD	BC,L__110
041145 C5                  A  3996    	PUSH	BC
041146 DDE5E1              A  3997    	LD	HL,IX
041149 013DFFFF            A  3998    	LD	BC,-195
04114D 09                  A  3999    	ADD	HL,BC
04114E E5C1                A  4000    	LD	BC,HL
041150 C5                  A  4001    	PUSH	BC
041151 CD 4F 05 04         A  4002    	CALL	_load_bmp_direct
041155 C1                  A  4003    	POP	BC
041156 C1                  A  4004    	POP	BC
041157 C1                  A  4005    	POP	BC
                           A  4006    ;  335	    load_bmp_direct("snake_assets/font/
                           A  4007    .LINE 335
                           A  4008    
041158 01B10000            A  4009    	LD	BC,177
04115C C5                  A  4010    	PUSH	BC
04115D 01 10 5B 04         A  4011    	LD	BC,L__111
041161 C5                  A  4012    	PUSH	BC
041162 DDE5E1              A  4013    	LD	HL,IX
041165 0138FFFF            A  4014    	LD	BC,-200
041169 09                  A  4015    	ADD	HL,BC
04116A E5C1                A  4016    	LD	BC,HL
04116C C5                  A  4017    	PUSH	BC
04116D CD 4F 05 04         A  4018    	CALL	_load_bmp_direct
041171 C1                  A  4019    	POP	BC
041172 C1                  A  4020    	POP	BC
041173 C1                  A  4021    	POP	BC
                           A  4022    ;  336	    load_bmp_direct("snake_assets/font/
                           A  4023    .LINE 336
                           A  4024    
041174 01B20000            A  4025    	LD	BC,178
041178 C5                  A  4026    	PUSH	BC
041179 01 29 5B 04         A  4027    	LD	BC,L__112
04117D C5                  A  4028    	PUSH	BC
04117E DDE5E1              A  4029    	LD	HL,IX
041181 0133FFFF            A  4030    	LD	BC,-205
041185 09                  A  4031    	ADD	HL,BC
041186 E5C1                A  4032    	LD	BC,HL
041188 C5                  A  4033    	PUSH	BC
041189 CD 4F 05 04         A  4034    	CALL	_load_bmp_direct
04118D C1                  A  4035    	POP	BC
04118E C1                  A  4036    	POP	BC
04118F C1                  A  4037    	POP	BC
                           A  4038    ;  337	    load_bmp_direct("snake_assets/font/
                           A  4039    .LINE 337
                           A  4040    
041190 01B30000            A  4041    	LD	BC,179
041194 C5                  A  4042    	PUSH	BC
041195 01 42 5B 04         A  4043    	LD	BC,L__113
041199 C5                  A  4044    	PUSH	BC
04119A DDE5E1              A  4045    	LD	HL,IX
04119D 012EFFFF            A  4046    	LD	BC,-210
0411A1 09                  A  4047    	ADD	HL,BC
0411A2 E5C1                A  4048    	LD	BC,HL
0411A4 C5                  A  4049    	PUSH	BC
0411A5 CD 4F 05 04         A  4050    	CALL	_load_bmp_direct
0411A9 C1                  A  4051    	POP	BC
0411AA C1                  A  4052    	POP	BC
0411AB C1                  A  4053    	POP	BC
                           A  4054    ;  338	    load_bmp_direct("snake_assets/font/
                           A  4055    .LINE 338
                           A  4056    
0411AC 01B40000            A  4057    	LD	BC,180
0411B0 C5                  A  4058    	PUSH	BC
0411B1 01 5B 5B 04         A  4059    	LD	BC,L__114
0411B5 C5                  A  4060    	PUSH	BC
0411B6 DDE5E1              A  4061    	LD	HL,IX
0411B9 0129FFFF            A  4062    	LD	BC,-215
0411BD 09                  A  4063    	ADD	HL,BC
0411BE E5C1                A  4064    	LD	BC,HL
0411C0 C5                  A  4065    	PUSH	BC
0411C1 CD 4F 05 04         A  4066    	CALL	_load_bmp_direct
0411C5 C1                  A  4067    	POP	BC
0411C6 C1                  A  4068    	POP	BC
0411C7 C1                  A  4069    	POP	BC
                           A  4070    ;  339	    load_bmp_direct("snake_assets/font/
                           A  4071    .LINE 339
                           A  4072    
0411C8 01B50000            A  4073    	LD	BC,181
0411CC C5                  A  4074    	PUSH	BC
0411CD 01 74 5B 04         A  4075    	LD	BC,L__115
0411D1 C5                  A  4076    	PUSH	BC
0411D2 DDE5E1              A  4077    	LD	HL,IX
0411D5 0124FFFF            A  4078    	LD	BC,-220
0411D9 09                  A  4079    	ADD	HL,BC
0411DA E5C1                A  4080    	LD	BC,HL
0411DC C5                  A  4081    	PUSH	BC
0411DD CD 4F 05 04         A  4082    	CALL	_load_bmp_direct
0411E1 C1                  A  4083    	POP	BC
0411E2 C1                  A  4084    	POP	BC
0411E3 C1                  A  4085    	POP	BC
                           A  4086    ;  340	    load_bmp_direct("snake_assets/font/
                           A  4087    .LINE 340
                           A  4088    
0411E4 01B60000            A  4089    	LD	BC,182
0411E8 C5                  A  4090    	PUSH	BC
0411E9 01 8D 5B 04         A  4091    	LD	BC,L__116
0411ED C5                  A  4092    	PUSH	BC
0411EE DDE5E1              A  4093    	LD	HL,IX
0411F1 011FFFFF            A  4094    	LD	BC,-225
0411F5 09                  A  4095    	ADD	HL,BC
0411F6 E5C1                A  4096    	LD	BC,HL
0411F8 C5                  A  4097    	PUSH	BC
0411F9 CD 4F 05 04         A  4098    	CALL	_load_bmp_direct
0411FD C1                  A  4099    	POP	BC
0411FE C1                  A  4100    	POP	BC
0411FF C1                  A  4101    	POP	BC
                           A  4102    ;  341	    load_bmp_direct("snake_assets/font/
                           A  4103    .LINE 341
                           A  4104    
041200 01B70000            A  4105    	LD	BC,183
041204 C5                  A  4106    	PUSH	BC
041205 01 A6 5B 04         A  4107    	LD	BC,L__117
041209 C5                  A  4108    	PUSH	BC
04120A DDE5E1              A  4109    	LD	HL,IX
04120D 011AFFFF            A  4110    	LD	BC,-230
041211 09                  A  4111    	ADD	HL,BC
041212 E5C1                A  4112    	LD	BC,HL
041214 C5                  A  4113    	PUSH	BC
041215 CD 4F 05 04         A  4114    	CALL	_load_bmp_direct
041219 C1                  A  4115    	POP	BC
04121A C1                  A  4116    	POP	BC
04121B C1                  A  4117    	POP	BC
                           A  4118    ;  342	    load_bmp_direct("snake_assets/font/
                           A  4119    .LINE 342
                           A  4120    
04121C 01B80000            A  4121    	LD	BC,184
041220 C5                  A  4122    	PUSH	BC
041221 01 BF 5B 04         A  4123    	LD	BC,L__118
041225 C5                  A  4124    	PUSH	BC
041226 DDE5E1              A  4125    	LD	HL,IX
041229 0115FFFF            A  4126    	LD	BC,-235
04122D 09                  A  4127    	ADD	HL,BC
04122E E5C1                A  4128    	LD	BC,HL
041230 C5                  A  4129    	PUSH	BC
041231 CD 4F 05 04         A  4130    	CALL	_load_bmp_direct
041235 C1                  A  4131    	POP	BC
041236 C1                  A  4132    	POP	BC
041237 C1                  A  4133    	POP	BC
                           A  4134    ;  343	    load_bmp_direct("snake_assets/font/
                           A  4135    .LINE 343
                           A  4136    
041238 01B90000            A  4137    	LD	BC,185
04123C C5                  A  4138    	PUSH	BC
04123D 01 D8 5B 04         A  4139    	LD	BC,L__119
041241 C5                  A  4140    	PUSH	BC
041242 DDE5E1              A  4141    	LD	HL,IX
041245 0110FFFF            A  4142    	LD	BC,-240
041249 09                  A  4143    	ADD	HL,BC
04124A E5C1                A  4144    	LD	BC,HL
04124C C5                  A  4145    	PUSH	BC
04124D CD 4F 05 04         A  4146    	CALL	_load_bmp_direct
041251 C1                  A  4147    	POP	BC
041252 C1                  A  4148    	POP	BC
041253 C1                  A  4149    	POP	BC
                           A  4150    ;  344	    load_bmp_direct("snake_assets/font/
                           A  4151    .LINE 344
                           A  4152    
041254 01BA0000            A  4153    	LD	BC,186
041258 C5                  A  4154    	PUSH	BC
041259 01 F1 5B 04         A  4155    	LD	BC,L__120
04125D C5                  A  4156    	PUSH	BC
04125E DDE5E1              A  4157    	LD	HL,IX
041261 010BFFFF            A  4158    	LD	BC,-245
041265 09                  A  4159    	ADD	HL,BC
041266 E5C1                A  4160    	LD	BC,HL
041268 C5                  A  4161    	PUSH	BC
041269 CD 4F 05 04         A  4162    	CALL	_load_bmp_direct
04126D C1                  A  4163    	POP	BC
04126E C1                  A  4164    	POP	BC
04126F C1                  A  4165    	POP	BC
                           A  4166    ;  345	    load_bmp_direct("snake_assets/font/
                           A  4167    .LINE 345
                           A  4168    
041270 01BB0000            A  4169    	LD	BC,187
041274 C5                  A  4170    	PUSH	BC
041275 01 0A 5C 04         A  4171    	LD	BC,L__121
041279 C5                  A  4172    	PUSH	BC
04127A DDE5E1              A  4173    	LD	HL,IX
04127D 0106FFFF            A  4174    	LD	BC,-250
041281 09                  A  4175    	ADD	HL,BC
041282 E5C1                A  4176    	LD	BC,HL
041284 C5                  A  4177    	PUSH	BC
041285 CD 4F 05 04         A  4178    	CALL	_load_bmp_direct
041289 C1                  A  4179    	POP	BC
04128A C1                  A  4180    	POP	BC
04128B C1                  A  4181    	POP	BC
                           A  4182    ;  346	    load_bmp_direct("snake_assets/font/
                           A  4183    .LINE 346
                           A  4184    
04128C 01BC0000            A  4185    	LD	BC,188
041290 C5                  A  4186    	PUSH	BC
041291 01 23 5C 04         A  4187    	LD	BC,L__122
041295 C5                  A  4188    	PUSH	BC
041296 DDE5E1              A  4189    	LD	HL,IX
041299 0101FFFF            A  4190    	LD	BC,-255
04129D 09                  A  4191    	ADD	HL,BC
04129E E5C1                A  4192    	LD	BC,HL
0412A0 C5                  A  4193    	PUSH	BC
0412A1 CD 4F 05 04         A  4194    	CALL	_load_bmp_direct
0412A5 C1                  A  4195    	POP	BC
0412A6 C1                  A  4196    	POP	BC
0412A7 C1                  A  4197    	POP	BC
                           A  4198    ;  347	    load_bmp_direct("snake_assets/font/
                           A  4199    .LINE 347
                           A  4200    
0412A8 01BD0000            A  4201    	LD	BC,189
0412AC C5                  A  4202    	PUSH	BC
0412AD 01 3C 5C 04         A  4203    	LD	BC,L__123
0412B1 C5                  A  4204    	PUSH	BC
0412B2 DDE5E1              A  4205    	LD	HL,IX
0412B5 01FCFEFF            A  4206    	LD	BC,-260
0412B9 09                  A  4207    	ADD	HL,BC
0412BA E5C1                A  4208    	LD	BC,HL
0412BC C5                  A  4209    	PUSH	BC
0412BD CD 4F 05 04         A  4210    	CALL	_load_bmp_direct
0412C1 C1                  A  4211    	POP	BC
0412C2 C1                  A  4212    	POP	BC
0412C3 C1                  A  4213    	POP	BC
                           A  4214    ;  348	    load_bmp_direct("snake_assets/font/
                           A  4215    .LINE 348
                           A  4216    
0412C4 01BE0000            A  4217    	LD	BC,190
0412C8 C5                  A  4218    	PUSH	BC
0412C9 01 55 5C 04         A  4219    	LD	BC,L__124
0412CD C5                  A  4220    	PUSH	BC
0412CE DDE5E1              A  4221    	LD	HL,IX
0412D1 01F7FEFF            A  4222    	LD	BC,-265
0412D5 09                  A  4223    	ADD	HL,BC
0412D6 E5C1                A  4224    	LD	BC,HL
0412D8 C5                  A  4225    	PUSH	BC
0412D9 CD 4F 05 04         A  4226    	CALL	_load_bmp_direct
0412DD C1                  A  4227    	POP	BC
0412DE C1                  A  4228    	POP	BC
0412DF C1                  A  4229    	POP	BC
                           A  4230    ;  349	
                           A  4231    ;  350	}
                           A  4232    .LINE 350
                           A  4233    
0412E0 DDF9                A  4234    	LD	SP,IX
0412E2 DDE1                A  4235    	POP	IX
0412E4 C9                  A  4236    	RET	
                           A  4237    
                           A  4238    
                           A  4239    ;**************************** _load_font_frame 
                           A  4240    ;Name                         Addr/Register   S
                           A  4241    ;___print_sendstring                 IMPORT  --
                           A  4242    ;___print_xputch                     IMPORT    
                           A  4243    ;___print_uputch                     IMPORT  --
                           A  4244    
                           A  4245    
                           A  4246    ; Stack Frame Size: 271 (bytes)
                           A  4247    ;       Spill Code: -3 (instruction)
                           A  4248    
                           A  4249    
                           A  4250    .ENDFUNC "load_font_frame",350,"_load_font_fram
                           A  4251    	SEGMENT STRSECT
045718                     A  4252    L__71:
045718 4C6F6164 696E6720   A  4253    	DB	"Loading font & frame..."
045720 666F6E74 20262066 
045728 72616D65 2E2E2E 
04572F 0D0A00              A  4254    	DB	13,10,0
045732                     A  4255    L__72:
045732 736E616B 655F6173   A  4256    	DB	"snake_assets/f_blue/nw.bmp"
04573A 73657473 2F665F62 
045742 6C75652F 6E772E62 
04574A 6D70 
04574C 00                  A  4257    	DB	0
04574D                     A  4258    L__73:
04574D 736E616B 655F6173   A  4259    	DB	"snake_assets/f_blue/n.bmp"
045755 73657473 2F665F62 
04575D 6C75652F 6E2E626D 
045765 70 
045766 00                  A  4260    	DB	0
045767                     A  4261    L__74:
045767 736E616B 655F6173   A  4262    	DB	"snake_assets/f_blue/ne.bmp"
04576F 73657473 2F665F62 
045777 6C75652F 6E652E62 
04577F 6D70 
045781 00                  A  4263    	DB	0
045782                     A  4264    L__75:
045782 736E616B 655F6173   A  4265    	DB	"snake_assets/f_blue/e.bmp"
04578A 73657473 2F665F62 
045792 6C75652F 652E626D 
04579A 70 
04579B 00                  A  4266    	DB	0
04579C                     A  4267    L__76:
04579C 736E616B 655F6173   A  4268    	DB	"snake_assets/f_blue/se.bmp"
0457A4 73657473 2F665F62 
0457AC 6C75652F 73652E62 
0457B4 6D70 
0457B6 00                  A  4269    	DB	0
0457B7                     A  4270    L__77:
0457B7 736E616B 655F6173   A  4271    	DB	"snake_assets/f_blue/s.bmp"
0457BF 73657473 2F665F62 
0457C7 6C75652F 732E626D 
0457CF 70 
0457D0 00                  A  4272    	DB	0
0457D1                     A  4273    L__78:
0457D1 736E616B 655F6173   A  4274    	DB	"snake_assets/f_blue/sw.bmp"
0457D9 73657473 2F665F62 
0457E1 6C75652F 73772E62 
0457E9 6D70 
0457EB 00                  A  4275    	DB	0
0457EC                     A  4276    L__79:
0457EC 736E616B 655F6173   A  4277    	DB	"snake_assets/f_blue/w.bmp"
0457F4 73657473 2F665F62 
0457FC 6C75652F 772E626D 
045804 70 
045805 00                  A  4278    	DB	0
045806                     A  4279    L__80:
045806 736E616B 655F6173   A  4280    	DB	"snake_assets/f_blue/mid.bmp"
04580E 73657473 2F665F62 
045816 6C75652F 6D69642E 
04581E 626D70 
045821 00                  A  4281    	DB	0
045822                     A  4282    L__81:
045822 736E616B 655F6173   A  4283    	DB	"snake_assets/font/33.bmp"
04582A 73657473 2F666F6E 
045832 742F3333 2E626D70 
04583A 00                  A  4284    	DB	0
04583B                     A  4285    L__82:
04583B 736E616B 655F6173   A  4286    	DB	"snake_assets/font/36.bmp"
045843 73657473 2F666F6E 
04584B 742F3336 2E626D70 
045853 00                  A  4287    	DB	0
045854                     A  4288    L__83:
045854 736E616B 655F6173   A  4289    	DB	"snake_assets/font/38.bmp"
04585C 73657473 2F666F6E 
045864 742F3338 2E626D70 
04586C 00                  A  4290    	DB	0
04586D                     A  4291    L__84:
04586D 736E616B 655F6173   A  4292    	DB	"snake_assets/font/39.bmp"
045875 73657473 2F666F6E 
04587D 742F3339 2E626D70 
045885 00                  A  4293    	DB	0
045886                     A  4294    L__85:
045886 736E616B 655F6173   A  4295    	DB	"snake_assets/font/44.bmp"
04588E 73657473 2F666F6E 
045896 742F3434 2E626D70 
04589E 00                  A  4296    	DB	0
04589F                     A  4297    L__86:
04589F 736E616B 655F6173   A  4298    	DB	"snake_assets/font/46.bmp"
0458A7 73657473 2F666F6E 
0458AF 742F3436 2E626D70 
0458B7 00                  A  4299    	DB	0
0458B8                     A  4300    L__87:
0458B8 736E616B 655F6173   A  4301    	DB	"snake_assets/font/48.bmp"
0458C0 73657473 2F666F6E 
0458C8 742F3438 2E626D70 
0458D0 00                  A  4302    	DB	0
0458D1                     A  4303    L__88:
0458D1 736E616B 655F6173   A  4304    	DB	"snake_assets/font/49.bmp"
0458D9 73657473 2F666F6E 
0458E1 742F3439 2E626D70 
0458E9 00                  A  4305    	DB	0
0458EA                     A  4306    L__89:
0458EA 736E616B 655F6173   A  4307    	DB	"snake_assets/font/50.bmp"
0458F2 73657473 2F666F6E 
0458FA 742F3530 2E626D70 
045902 00                  A  4308    	DB	0
045903                     A  4309    L__90:
045903 736E616B 655F6173   A  4310    	DB	"snake_assets/font/51.bmp"
04590B 73657473 2F666F6E 
045913 742F3531 2E626D70 
04591B 00                  A  4311    	DB	0
04591C                     A  4312    L__91:
04591C 736E616B 655F6173   A  4313    	DB	"snake_assets/font/52.bmp"
045924 73657473 2F666F6E 
04592C 742F3532 2E626D70 
045934 00                  A  4314    	DB	0
045935                     A  4315    L__92:
045935 736E616B 655F6173   A  4316    	DB	"snake_assets/font/53.bmp"
04593D 73657473 2F666F6E 
045945 742F3533 2E626D70 
04594D 00                  A  4317    	DB	0
04594E                     A  4318    L__93:
04594E 736E616B 655F6173   A  4319    	DB	"snake_assets/font/54.bmp"
045956 73657473 2F666F6E 
04595E 742F3534 2E626D70 
045966 00                  A  4320    	DB	0
045967                     A  4321    L__94:
045967 736E616B 655F6173   A  4322    	DB	"snake_assets/font/55.bmp"
04596F 73657473 2F666F6E 
045977 742F3535 2E626D70 
04597F 00                  A  4323    	DB	0
045980                     A  4324    L__95:
045980 736E616B 655F6173   A  4325    	DB	"snake_assets/font/56.bmp"
045988 73657473 2F666F6E 
045990 742F3536 2E626D70 
045998 00                  A  4326    	DB	0
045999                     A  4327    L__96:
045999 736E616B 655F6173   A  4328    	DB	"snake_assets/font/57.bmp"
0459A1 73657473 2F666F6E 
0459A9 742F3537 2E626D70 
0459B1 00                  A  4329    	DB	0
0459B2                     A  4330    L__97:
0459B2 736E616B 655F6173   A  4331    	DB	"snake_assets/font/62.bmp"
0459BA 73657473 2F666F6E 
0459C2 742F3632 2E626D70 
0459CA 00                  A  4332    	DB	0
0459CB                     A  4333    L__98:
0459CB 736E616B 655F6173   A  4334    	DB	"snake_assets/font/63.bmp"
0459D3 73657473 2F666F6E 
0459DB 742F3633 2E626D70 
0459E3 00                  A  4335    	DB	0
0459E4                     A  4336    L__99:
0459E4 736E616B 655F6173   A  4337    	DB	"snake_assets/font/65.bmp"
0459EC 73657473 2F666F6E 
0459F4 742F3635 2E626D70 
0459FC 00                  A  4338    	DB	0
0459FD                     A  4339    L__100:
0459FD 736E616B 655F6173   A  4340    	DB	"snake_assets/font/66.bmp"
045A05 73657473 2F666F6E 
045A0D 742F3636 2E626D70 
045A15 00                  A  4341    	DB	0
045A16                     A  4342    L__101:
045A16 736E616B 655F6173   A  4343    	DB	"snake_assets/font/67.bmp"
045A1E 73657473 2F666F6E 
045A26 742F3637 2E626D70 
045A2E 00                  A  4344    	DB	0
045A2F                     A  4345    L__102:
045A2F 736E616B 655F6173   A  4346    	DB	"snake_assets/font/68.bmp"
045A37 73657473 2F666F6E 
045A3F 742F3638 2E626D70 
045A47 00                  A  4347    	DB	0
045A48                     A  4348    L__103:
045A48 736E616B 655F6173   A  4349    	DB	"snake_assets/font/69.bmp"
045A50 73657473 2F666F6E 
045A58 742F3639 2E626D70 
045A60 00                  A  4350    	DB	0
045A61                     A  4351    L__104:
045A61 736E616B 655F6173   A  4352    	DB	"snake_assets/font/70.bmp"
045A69 73657473 2F666F6E 
045A71 742F3730 2E626D70 
045A79 00                  A  4353    	DB	0
045A7A                     A  4354    L__105:
045A7A 736E616B 655F6173   A  4355    	DB	"snake_assets/font/71.bmp"
045A82 73657473 2F666F6E 
045A8A 742F3731 2E626D70 
045A92 00                  A  4356    	DB	0
045A93                     A  4357    L__106:
045A93 736E616B 655F6173   A  4358    	DB	"snake_assets/font/72.bmp"
045A9B 73657473 2F666F6E 
045AA3 742F3732 2E626D70 
045AAB 00                  A  4359    	DB	0
045AAC                     A  4360    L__107:
045AAC 736E616B 655F6173   A  4361    	DB	"snake_assets/font/73.bmp"
045AB4 73657473 2F666F6E 
045ABC 742F3733 2E626D70 
045AC4 00                  A  4362    	DB	0
045AC5                     A  4363    L__108:
045AC5 736E616B 655F6173   A  4364    	DB	"snake_assets/font/74.bmp"
045ACD 73657473 2F666F6E 
045AD5 742F3734 2E626D70 
045ADD 00                  A  4365    	DB	0
045ADE                     A  4366    L__109:
045ADE 736E616B 655F6173   A  4367    	DB	"snake_assets/font/75.bmp"
045AE6 73657473 2F666F6E 
045AEE 742F3735 2E626D70 
045AF6 00                  A  4368    	DB	0
045AF7                     A  4369    L__110:
045AF7 736E616B 655F6173   A  4370    	DB	"snake_assets/font/76.bmp"
045AFF 73657473 2F666F6E 
045B07 742F3736 2E626D70 
045B0F 00                  A  4371    	DB	0
045B10                     A  4372    L__111:
045B10 736E616B 655F6173   A  4373    	DB	"snake_assets/font/77.bmp"
045B18 73657473 2F666F6E 
045B20 742F3737 2E626D70 
045B28 00                  A  4374    	DB	0
045B29                     A  4375    L__112:
045B29 736E616B 655F6173   A  4376    	DB	"snake_assets/font/78.bmp"
045B31 73657473 2F666F6E 
045B39 742F3738 2E626D70 
045B41 00                  A  4377    	DB	0
045B42                     A  4378    L__113:
045B42 736E616B 655F6173   A  4379    	DB	"snake_assets/font/79.bmp"
045B4A 73657473 2F666F6E 
045B52 742F3739 2E626D70 
045B5A 00                  A  4380    	DB	0
045B5B                     A  4381    L__114:
045B5B 736E616B 655F6173   A  4382    	DB	"snake_assets/font/80.bmp"
045B63 73657473 2F666F6E 
045B6B 742F3830 2E626D70 
045B73 00                  A  4383    	DB	0
045B74                     A  4384    L__115:
045B74 736E616B 655F6173   A  4385    	DB	"snake_assets/font/81.bmp"
045B7C 73657473 2F666F6E 
045B84 742F3831 2E626D70 
045B8C 00                  A  4386    	DB	0
045B8D                     A  4387    L__116:
045B8D 736E616B 655F6173   A  4388    	DB	"snake_assets/font/82.bmp"
045B95 73657473 2F666F6E 
045B9D 742F3832 2E626D70 
045BA5 00                  A  4389    	DB	0
045BA6                     A  4390    L__117:
045BA6 736E616B 655F6173   A  4391    	DB	"snake_assets/font/83.bmp"
045BAE 73657473 2F666F6E 
045BB6 742F3833 2E626D70 
045BBE 00                  A  4392    	DB	0
045BBF                     A  4393    L__118:
045BBF 736E616B 655F6173   A  4394    	DB	"snake_assets/font/84.bmp"
045BC7 73657473 2F666F6E 
045BCF 742F3834 2E626D70 
045BD7 00                  A  4395    	DB	0
045BD8                     A  4396    L__119:
045BD8 736E616B 655F6173   A  4397    	DB	"snake_assets/font/85.bmp"
045BE0 73657473 2F666F6E 
045BE8 742F3835 2E626D70 
045BF0 00                  A  4398    	DB	0
045BF1                     A  4399    L__120:
045BF1 736E616B 655F6173   A  4400    	DB	"snake_assets/font/86.bmp"
045BF9 73657473 2F666F6E 
045C01 742F3836 2E626D70 
045C09 00                  A  4401    	DB	0
045C0A                     A  4402    L__121:
045C0A 736E616B 655F6173   A  4403    	DB	"snake_assets/font/87.bmp"
045C12 73657473 2F666F6E 
045C1A 742F3837 2E626D70 
045C22 00                  A  4404    	DB	0
045C23                     A  4405    L__122:
045C23 736E616B 655F6173   A  4406    	DB	"snake_assets/font/88.bmp"
045C2B 73657473 2F666F6E 
045C33 742F3838 2E626D70 
045C3B 00                  A  4407    	DB	0
045C3C                     A  4408    L__123:
045C3C 736E616B 655F6173   A  4409    	DB	"snake_assets/font/89.bmp"
045C44 73657473 2F666F6E 
045C4C 742F3839 2E626D70 
045C54 00                  A  4410    	DB	0
045C55                     A  4411    L__124:
045C55 736E616B 655F6173   A  4412    	DB	"snake_assets/font/90.bmp"
045C5D 73657473 2F666F6E 
045C65 742F3930 2E626D70 
045C6D 00                  A  4413    	DB	0
                           A  4414    	SEGMENT CODE
                           A  4415    ;  351	
                           A  4416    ;  352	uint8_t count(const char * text, char t
0412E5                     A  4417    _count:
                           A  4418    .DEFINE "_count"
                           A  4419    
                           A  4420    .VALUE _count
                           A  4421    
                           A  4422    .CLASS 2
                           A  4423    
                           A  4424    .TYPE 76
                           A  4425    
                           A  4426    .ENDEF
                           A  4427    
                           A  4428    .BEGFUNC "count",352,"_count"
                           A  4429    
                           A  4430    .LINE 352
                           A  4431    
                           A  4432    .DEFINE "text"
                           A  4433    
                           A  4434    .CLASS 65
                           A  4435    
                           A  4436    .VALUE 6
                           A  4437    
                           A  4438    .TYPE 194
                           A  4439    
                           A  4440    .ENDEF
                           A  4441    
                           A  4442    .DEFINE "test"
                           A  4443    
                           A  4444    .CLASS 65
                           A  4445    
                           A  4446    .VALUE 9
                           A  4447    
                           A  4448    .TYPE 2
                           A  4449    
                           A  4450    .ENDEF
                           A  4451    
                           A  4452    .DEFINE "count"
                           A  4453    
                           A  4454    .CLASS 65
                           A  4455    
                           A  4456    .VALUE -1
                           A  4457    
                           A  4458    .TYPE 12
                           A  4459    
                           A  4460    .ENDEF
                           A  4461    
                           A  4462    .DEFINE "k"
                           A  4463    
                           A  4464    .CLASS 65
                           A  4465    
                           A  4466    .VALUE -2
                           A  4467    
                           A  4468    .TYPE 12
                           A  4469    
                           A  4470    .ENDEF
                           A  4471    
0412E5 DDE5                A  4472    	PUSH	IX
0412E7 DD210000 00         A  4473    	LD	IX,0
0412EC DD39                A  4474    	ADD	IX,SP
0412EE C5                  A  4475    	PUSH	BC
0412EF 3B                  A  4476    	DEC	SP
0412F0 3B                  A  4477    	DEC	SP
                           A  4478    ;  353	    uint8_t count = 0, k = 0;
                           A  4479    .LINE 353
                           A  4480    
0412F1 DD36FF00            A  4481    	LD	(IX+%FFFFFFFF),%0
0412F5 DD36FE00            A  4482    	LD	(IX+%FFFFFFFE),%0
                           A  4483    ;  354	    while (text[k] != '\0') {
                           A  4484    .LINE 354
                           A  4485    
0412F9 18 0F               A  4486    	JR	L_99
0412FB                     A  4487    L_100:
                           A  4488    ;  355	        if (text[k] == test)
                           A  4489    .LINE 355
                           A  4490    
0412FB DD27FB              A  4491    	LD	HL,(IX+%FFFFFFFB)
0412FE 7E                  A  4492    	LD	A,(HL)
0412FF DDBE09              A  4493    	CP	A,(IX+%9)
041302 20 03               A  4494    	JR	NZ,L_98
                           A  4495    ;  356	            count++;
                           A  4496    .LINE 356
                           A  4497    
041304 DD34FF              A  4498    	INC	(IX+%FFFFFFFF)
041307                     A  4499    L_98:
                           A  4500    ;  357	        k++;
                           A  4501    .LINE 357
                           A  4502    
041307 DD34FE              A  4503    	INC	(IX+%FFFFFFFE)
                           A  4504    ;  358	    }
04130A                     A  4505    L_99:
                           A  4506    .LINE 358
                           A  4507    
04130A DD7EFE              A  4508    	LD	A,(IX+%FFFFFFFE)
04130D B7ED62              A  4509    	UEXT	HL
041310 6F                  A  4510    	LD	L,A
041311 DD0706              A  4511    	LD	BC,(IX+%6)
041314 09                  A  4512    	ADD	HL,BC
041315 DD2FFB              A  4513    	LD	(IX+%FFFFFFFB),HL
041318 7E                  A  4514    	LD	A,(HL)
041319 B7                  A  4515    	OR	A,A
04131A 20 DF               A  4516    	JR	NZ,L_100
                           A  4517    ;  359	    return count;
                           A  4518    .LINE 359
                           A  4519    
04131C DD7EFF              A  4520    	LD	A,(IX+%FFFFFFFF)
                           A  4521    ;  360	}
                           A  4522    .LINE 360
                           A  4523    
04131F DDF9                A  4524    	LD	SP,IX
041321 DDE1                A  4525    	POP	IX
041323 C9                  A  4526    	RET	
                           A  4527    
                           A  4528    
                           A  4529    ;**************************** _count **********
                           A  4530    ;Name                         Addr/Register   S
                           A  4531    ;G_0                                   IX-5    
                           A  4532    ;k                                     IX-2    
                           A  4533    ;count                                 IX-1    
                           A  4534    ;test                                  IX+9    
                           A  4535    ;text                                  IX+6    
                           A  4536    
                           A  4537    
                           A  4538    ; Stack Frame Size: 17 (bytes)
                           A  4539    ;       Spill Code: -3 (instruction)
                           A  4540    
                           A  4541    
                           A  4542    .ENDFUNC "count",360,"_count"
                           A  4543    ;  361	
                           A  4544    ;  362	uint8_t longest_stretch(char * str) {
041324                     A  4545    _longest_stretch:
                           A  4546    .DEFINE "_longest_stretch"
                           A  4547    
                           A  4548    .VALUE _longest_stretch
                           A  4549    
                           A  4550    .CLASS 2
                           A  4551    
                           A  4552    .TYPE 76
                           A  4553    
                           A  4554    .ENDEF
                           A  4555    
                           A  4556    .BEGFUNC "longest_stretch",362,"_longest_stretc
                           A  4557    
                           A  4558    .LINE 362
                           A  4559    
                           A  4560    .DEFINE "str"
                           A  4561    
                           A  4562    .CLASS 65
                           A  4563    
                           A  4564    .VALUE 6
                           A  4565    
                           A  4566    .TYPE 34
                           A  4567    
                           A  4568    .ENDEF
                           A  4569    
                           A  4570    .DEFINE "len"
                           A  4571    
                           A  4572    .CLASS 65
                           A  4573    
                           A  4574    .VALUE -1
                           A  4575    
                           A  4576    .TYPE 12
                           A  4577    
                           A  4578    .ENDEF
                           A  4579    
                           A  4580    .DEFINE "max_len"
                           A  4581    
                           A  4582    .CLASS 65
                           A  4583    
                           A  4584    .VALUE -2
                           A  4585    
                           A  4586    .TYPE 12
                           A  4587    
                           A  4588    .ENDEF
                           A  4589    
                           A  4590    .DEFINE "p"
                           A  4591    
                           A  4592    .CLASS 65
                           A  4593    
                           A  4594    .VALUE -5
                           A  4595    
                           A  4596    .TYPE 34
                           A  4597    
                           A  4598    .ENDEF
                           A  4599    
041324 DDE5                A  4600    	PUSH	IX
041326 DD210000 00         A  4601    	LD	IX,0
04132B DD39                A  4602    	ADD	IX,SP
04132D C5                  A  4603    	PUSH	BC
04132E 3B                  A  4604    	DEC	SP
04132F 3B                  A  4605    	DEC	SP
                           A  4606    ;  363	    uint8_t len = 0, max_len = 0;
                           A  4607    .LINE 363
                           A  4608    
041330 DD36FF00            A  4609    	LD	(IX+%FFFFFFFF),%0
041334 DD36FE00            A  4610    	LD	(IX+%FFFFFFFE),%0
                           A  4611    ;  364	    char * p = str;
                           A  4612    .LINE 364
                           A  4613    
041338 DD0706              A  4614    	LD	BC,(IX+%6)
04133B DD0FFB              A  4615    	LD	(IX+%FFFFFFFB),BC
                           A  4616    ;  365	
                           A  4617    ;  366	    while ( * p != '\0') {
                           A  4618    .LINE 366
                           A  4619    
04133E 18 30               A  4620    	JR	L_110
041340                     A  4621    L_111:
                           A  4622    ;  367	        if ( * p == '\n') {
                           A  4623    .LINE 367
                           A  4624    
041340 DD27FB              A  4625    	LD	HL,(IX+%FFFFFFFB)
041343 7E                  A  4626    	LD	A,(HL)
041344 47                  A  4627    	LD	B,A
041345 17ED62              A  4628    	SEXT	HL
041348 68                  A  4629    	LD	L,B
041349 010A0000            A  4630    	LD	BC,10
04134D B7                  A  4631    	OR	A,A
04134E ED42                A  4632    	SBC	HL,BC
041350 20 14               A  4633    	JR	NZ,L_107
                           A  4634    ;  368	            if (len > max_len) {
                           A  4635    .LINE 368
                           A  4636    
041352 DD7EFE              A  4637    	LD	A,(IX+%FFFFFFFE)
041355 DDBEFF              A  4638    	CP	A,(IX+%FFFFFFFF)
041358 30 06               A  4639    	JR	NC,L_104
                           A  4640    ;  369	                max_len = len;
                           A  4641    .LINE 369
                           A  4642    
04135A DD7EFF              A  4643    	LD	A,(IX+%FFFFFFFF)
04135D DD77FE              A  4644    	LD	(IX+%FFFFFFFE),A
                           A  4645    ;  370	            }
041360                     A  4646    L_104:
                           A  4647    .LINE 370
                           A  4648    
                           A  4649    ;  371	            len = 0;
                           A  4650    .LINE 371
                           A  4651    
041360 DD36FF00            A  4652    	LD	(IX+%FFFFFFFF),%0
                           A  4653    ;  372	        } else {
                           A  4654    .LINE 372
                           A  4655    
041364 18 03               A  4656    	JR	L_109
041366                     A  4657    L_107:
                           A  4658    ;  373	            len++;
                           A  4659    .LINE 373
                           A  4660    
041366 DD34FF              A  4661    	INC	(IX+%FFFFFFFF)
                           A  4662    ;  374	        }
041369                     A  4663    L_109:
                           A  4664    .LINE 374
                           A  4665    
                           A  4666    ;  375	        p++;
                           A  4667    .LINE 375
                           A  4668    
041369 DD07FB              A  4669    	LD	BC,(IX+%FFFFFFFB)
04136C 03                  A  4670    	INC	BC
04136D DD0FFB              A  4671    	LD	(IX+%FFFFFFFB),BC
                           A  4672    ;  376	    }
041370                     A  4673    L_110:
                           A  4674    .LINE 376
                           A  4675    
041370 DD27FB              A  4676    	LD	HL,(IX+%FFFFFFFB)
041373 7E                  A  4677    	LD	A,(HL)
041374 B7                  A  4678    	OR	A,A
041375 20 C9               A  4679    	JR	NZ,L_111
                           A  4680    ;  377	
                           A  4681    ;  378	    if (len > max_len) {
                           A  4682    .LINE 378
                           A  4683    
041377 DD7EFE              A  4684    	LD	A,(IX+%FFFFFFFE)
04137A DDBEFF              A  4685    	CP	A,(IX+%FFFFFFFF)
04137D 30 06               A  4686    	JR	NC,L_114
                           A  4687    ;  379	        max_len = len;
                           A  4688    .LINE 379
                           A  4689    
04137F DD7EFF              A  4690    	LD	A,(IX+%FFFFFFFF)
041382 DD77FE              A  4691    	LD	(IX+%FFFFFFFE),A
                           A  4692    ;  380	    }
041385                     A  4693    L_114:
                           A  4694    .LINE 380
                           A  4695    
                           A  4696    ;  381	
                           A  4697    ;  382	    return max_len;
                           A  4698    .LINE 382
                           A  4699    
041385 DD7EFE              A  4700    	LD	A,(IX+%FFFFFFFE)
                           A  4701    ;  383	}
                           A  4702    .LINE 383
                           A  4703    
041388 DDF9                A  4704    	LD	SP,IX
04138A DDE1                A  4705    	POP	IX
04138C C9                  A  4706    	RET	
                           A  4707    
                           A  4708    
                           A  4709    ;**************************** _longest_stretch 
                           A  4710    ;Name                         Addr/Register   S
                           A  4711    ;p                                     IX-5    
                           A  4712    ;max_len                               IX-2    
                           A  4713    ;len                                   IX-1    
                           A  4714    ;str                                   IX+6    
                           A  4715    
                           A  4716    
                           A  4717    ; Stack Frame Size: 14 (bytes)
                           A  4718    ;       Spill Code: -3 (instruction)
                           A  4719    
                           A  4720    
                           A  4721    .ENDFUNC "longest_stretch",383,"_longest_stretc
                           A  4722    ;  384	
                           A  4723    ;  385	void raw_text(const char * text, uint16
04138D                     A  4724    _raw_text:
                           A  4725    .DEFINE "_raw_text"
                           A  4726    
                           A  4727    .VALUE _raw_text
                           A  4728    
                           A  4729    .CLASS 2
                           A  4730    
                           A  4731    .TYPE 65
                           A  4732    
                           A  4733    .ENDEF
                           A  4734    
                           A  4735    .BEGFUNC "raw_text",385,"_raw_text"
                           A  4736    
                           A  4737    .LINE 385
                           A  4738    
                           A  4739    .DEFINE "text"
                           A  4740    
                           A  4741    .CLASS 65
                           A  4742    
                           A  4743    .VALUE 6
                           A  4744    
                           A  4745    .TYPE 194
                           A  4746    
                           A  4747    .ENDEF
                           A  4748    
                           A  4749    .DEFINE "x"
                           A  4750    
                           A  4751    .CLASS 65
                           A  4752    
                           A  4753    .VALUE 9
                           A  4754    
                           A  4755    .TYPE 13
                           A  4756    
                           A  4757    .ENDEF
                           A  4758    
                           A  4759    .DEFINE "y"
                           A  4760    
                           A  4761    .CLASS 65
                           A  4762    
                           A  4763    .VALUE 12
                           A  4764    
                           A  4765    .TYPE 13
                           A  4766    
                           A  4767    .ENDEF
                           A  4768    
                           A  4769    .DEFINE "i"
                           A  4770    
                           A  4771    .CLASS 65
                           A  4772    
                           A  4773    .VALUE -1
                           A  4774    
                           A  4775    .TYPE 12
                           A  4776    
                           A  4777    .ENDEF
                           A  4778    
                           A  4779    .DEFINE "l"
                           A  4780    
                           A  4781    .CLASS 65
                           A  4782    
                           A  4783    .VALUE -2
                           A  4784    
                           A  4785    .TYPE 12
                           A  4786    
                           A  4787    .ENDEF
                           A  4788    
                           A  4789    .DEFINE "w"
                           A  4790    
                           A  4791    .CLASS 65
                           A  4792    
                           A  4793    .VALUE -4
                           A  4794    
                           A  4795    .TYPE 13
                           A  4796    
                           A  4797    .ENDEF
                           A  4798    
04138D DDE5                A  4799    	PUSH	IX
04138F DD210000 00         A  4800    	LD	IX,0
041394 DD39                A  4801    	ADD	IX,SP
041396 C5                  A  4802    	PUSH	BC
041397 3B                  A  4803    	DEC	SP
                           A  4804    ;  386	    uint8_t i, l;
                           A  4805    ;  387	    uint16_t w;
                           A  4806    ;  388	    l = strlen(text);
                           A  4807    .LINE 388
                           A  4808    
041398 DD0706              A  4809    	LD	BC,(IX+%6)
04139B C5                  A  4810    	PUSH	BC
04139C CD 19 4E 04         A  4811    	CALL	_strlen
0413A0 C1                  A  4812    	POP	BC
0413A1 DD75FE              A  4813    	LD	(IX+%FFFFFFFE),L
                           A  4814    ;  389	
                           A  4815    ;  390	    if (l > 30) return;
                           A  4816    .LINE 390
                           A  4817    
0413A4 3E1E                A  4818    	LD	A,%1E
0413A6 DDBEFE              A  4819    	CP	A,(IX+%FFFFFFFE)
0413A9 DA DE 14 04         A  4820    	JR	C,L_127
                           A  4821    ;  391	
                           A  4822    ;  392	    w = (l * 8);
                           A  4823    .LINE 392
                           A  4824    
0413AD DD4EFE              A  4825    	LD	C,(IX+%FFFFFFFE)
0413B0 0600                A  4826    	LD	B,%0
0413B2 C5E1                A  4827    	LD	HL,BC
0413B4 29                  A  4828    	ADD	HL,HL
0413B5 29                  A  4829    	ADD	HL,HL
0413B6 29                  A  4830    	ADD	HL,HL
0413B7 DD75FC              A  4831    	LD	(IX+%FFFFFFFC),L
0413BA DD74FD              A  4832    	LD	(IX+%FFFFFFFD),H
                           A  4833    ;  393	
                           A  4834    ;  394	    vdp_bitmapDraw(FRAME_NW, x, y);
                           A  4835    .LINE 394
                           A  4836    
0413BD DD070C              A  4837    	LD	BC,(IX+%C)
0413C0 C5                  A  4838    	PUSH	BC
0413C1 DD0709              A  4839    	LD	BC,(IX+%9)
0413C4 C5                  A  4840    	PUSH	BC
0413C5 01780000            A  4841    	LD	BC,120
0413C9 C5                  A  4842    	PUSH	BC
0413CA CD 6E 3D 04         A  4843    	CALL	_vdp_bitmapDraw
0413CE C1                  A  4844    	POP	BC
0413CF C1                  A  4845    	POP	BC
0413D0 C1                  A  4846    	POP	BC
                           A  4847    ;  395	    vdp_bitmapDraw(FRAME_NE, x + w, y);
                           A  4848    .LINE 395
                           A  4849    
0413D1 DD070C              A  4850    	LD	BC,(IX+%C)
0413D4 C5                  A  4851    	PUSH	BC
0413D5 DD07FC              A  4852    	LD	BC,(IX+%FFFFFFFC)
0413D8 DD2709              A  4853    	LD	HL,(IX+%9)
0413DB 4009                A  4854    	ADD.SIS	HL,BC
0413DD E5                  A  4855    	PUSH	HL
0413DE 017A0000            A  4856    	LD	BC,122
0413E2 C5                  A  4857    	PUSH	BC
0413E3 CD 6E 3D 04         A  4858    	CALL	_vdp_bitmapDraw
0413E7 C1                  A  4859    	POP	BC
0413E8 C1                  A  4860    	POP	BC
0413E9 C1                  A  4861    	POP	BC
                           A  4862    ;  396	
                           A  4863    ;  397	    for (i = 1; i < (w / 8); i++) {
                           A  4864    .LINE 397
                           A  4865    
0413EA DD36FF01            A  4866    	LD	(IX+%FFFFFFFF),%1
0413EE 18 46               A  4867    	JR	L_121
0413F0                     A  4868    L_119:
                           A  4869    ;  398	        vdp_bitmapDraw(FRAME_N, x + (i 
                           A  4870    .LINE 398
                           A  4871    
0413F0 DD070C              A  4872    	LD	BC,(IX+%C)
0413F3 C5                  A  4873    	PUSH	BC
0413F4 DD4EFF              A  4874    	LD	C,(IX+%FFFFFFFF)
0413F7 0600                A  4875    	LD	B,%0
0413F9 C5E1                A  4876    	LD	HL,BC
0413FB 29                  A  4877    	ADD	HL,HL
0413FC 29                  A  4878    	ADD	HL,HL
0413FD 29                  A  4879    	ADD	HL,HL
0413FE DD0709              A  4880    	LD	BC,(IX+%9)
041401 4009                A  4881    	ADD.SIS	HL,BC
041403 E5                  A  4882    	PUSH	HL
041404 01790000            A  4883    	LD	BC,121
041408 C5                  A  4884    	PUSH	BC
041409 CD 6E 3D 04         A  4885    	CALL	_vdp_bitmapDraw
04140D C1                  A  4886    	POP	BC
04140E C1                  A  4887    	POP	BC
04140F C1                  A  4888    	POP	BC
                           A  4889    ;  399	        vdp_bitmapDraw(FRAME_S, x + (i 
                           A  4890    .LINE 399
                           A  4891    
041410 DD310C              A  4892    	LD	IY,(IX+%C)
041413 ED0308              A  4893    	LEA	BC,IY+%8
041416 C5                  A  4894    	PUSH	BC
041417 DD4EFF              A  4895    	LD	C,(IX+%FFFFFFFF)
04141A 0600                A  4896    	LD	B,%0
04141C C5E1                A  4897    	LD	HL,BC
04141E 29                  A  4898    	ADD	HL,HL
04141F 29                  A  4899    	ADD	HL,HL
041420 29                  A  4900    	ADD	HL,HL
041421 DD0709              A  4901    	LD	BC,(IX+%9)
041424 4009                A  4902    	ADD.SIS	HL,BC
041426 E5                  A  4903    	PUSH	HL
041427 017D0000            A  4904    	LD	BC,125
04142B C5                  A  4905    	PUSH	BC
04142C CD 6E 3D 04         A  4906    	CALL	_vdp_bitmapDraw
041430 C1                  A  4907    	POP	BC
041431 C1                  A  4908    	POP	BC
041432 C1                  A  4909    	POP	BC
041433 DD34FF              A  4910    	INC	(IX+%FFFFFFFF)
                           A  4911    ;  400	    }
041436                     A  4912    L_121:
                           A  4913    .LINE 400
                           A  4914    
041436 DD07FC              A  4915    	LD	BC,(IX+%FFFFFFFC)
041439 CD 9B 4D 04         A  4916    	CALL	__stoiu
04143D 01080000            A  4917    	LD	BC,8
041441 CD 2B 50 04         A  4918    	CALL	__idivs
041445 E5C1                A  4919    	LD	BC,HL
041447 DD7EFF              A  4920    	LD	A,(IX+%FFFFFFFF)
04144A B7ED62              A  4921    	UEXT	HL
04144D 6F                  A  4922    	LD	L,A
04144E B7                  A  4923    	OR	A,A
04144F ED42                A  4924    	SBC	HL,BC
041451 FA F0 13 04         A  4925    	JP	M,L_119
                           A  4926    ;  401	
                           A  4927    ;  402	    vdp_bitmapDraw(FRAME_SW, x, y + 8);
                           A  4928    .LINE 402
                           A  4929    
041455 DD310C              A  4930    	LD	IY,(IX+%C)
041458 ED0308              A  4931    	LEA	BC,IY+%8
04145B C5                  A  4932    	PUSH	BC
04145C DD0709              A  4933    	LD	BC,(IX+%9)
04145F C5                  A  4934    	PUSH	BC
041460 017E0000            A  4935    	LD	BC,126
041464 C5                  A  4936    	PUSH	BC
041465 CD 6E 3D 04         A  4937    	CALL	_vdp_bitmapDraw
041469 C1                  A  4938    	POP	BC
04146A C1                  A  4939    	POP	BC
04146B C1                  A  4940    	POP	BC
                           A  4941    ;  403	    vdp_bitmapDraw(FRAME_SE, x + w, y +
                           A  4942    .LINE 403
                           A  4943    
04146C DD310C              A  4944    	LD	IY,(IX+%C)
04146F ED0308              A  4945    	LEA	BC,IY+%8
041472 C5                  A  4946    	PUSH	BC
041473 DD07FC              A  4947    	LD	BC,(IX+%FFFFFFFC)
041476 DD2709              A  4948    	LD	HL,(IX+%9)
041479 4009                A  4949    	ADD.SIS	HL,BC
04147B E5                  A  4950    	PUSH	HL
04147C 017C0000            A  4951    	LD	BC,124
041480 C5                  A  4952    	PUSH	BC
041481 CD 6E 3D 04         A  4953    	CALL	_vdp_bitmapDraw
041485 C1                  A  4954    	POP	BC
041486 C1                  A  4955    	POP	BC
041487 C1                  A  4956    	POP	BC
                           A  4957    ;  404	
                           A  4958    ;  405	    for (i = 0; i < l; i++) vdp_bitmapD
                           A  4959    .LINE 405
                           A  4960    
041488 DD36FF00            A  4961    	LD	(IX+%FFFFFFFF),%0
04148C 18 48               A  4962    	JR	L_126
04148E                     A  4963    L_124:
04148E DD310C              A  4964    	LD	IY,(IX+%C)
041491 ED0304              A  4965    	LEA	BC,IY+%4
041494 C5                  A  4966    	PUSH	BC
041495 DD4EFF              A  4967    	LD	C,(IX+%FFFFFFFF)
041498 0600                A  4968    	LD	B,%0
04149A C5E1                A  4969    	LD	HL,BC
04149C 29                  A  4970    	ADD	HL,HL
04149D 29                  A  4971    	ADD	HL,HL
04149E 29                  A  4972    	ADD	HL,HL
04149F DD0709              A  4973    	LD	BC,(IX+%9)
0414A2 4009                A  4974    	ADD.SIS	HL,BC
0414A4 E5FDE1              A  4975    	LD	IY,HL
0414A7 ED0304              A  4976    	LEA	BC,IY+%4
0414AA C5                  A  4977    	PUSH	BC
0414AB DD7EFF              A  4978    	LD	A,(IX+%FFFFFFFF)
0414AE B7ED62              A  4979    	UEXT	HL
0414B1 6F                  A  4980    	LD	L,A
0414B2 DD0706              A  4981    	LD	BC,(IX+%6)
0414B5 09                  A  4982    	ADD	HL,BC
0414B6 7E                  A  4983    	LD	A,(HL)
0414B7 47                  A  4984    	LD	B,A
0414B8 17ED62              A  4985    	SEXT	HL
0414BB 68                  A  4986    	LD	L,B
0414BC E5                  A  4987    	PUSH	HL
0414BD CD E7 4D 04         A  4988    	CALL	_toupper
0414C1 C1                  A  4989    	POP	BC
0414C2 E5FDE1              A  4990    	LD	IY,HL
0414C5 ED2364              A  4991    	LEA	HL,IY+%64
0414C8 4D                  A  4992    	LD	C,L
0414C9 0600                A  4993    	LD	B,%0
0414CB C5                  A  4994    	PUSH	BC
0414CC CD 6E 3D 04         A  4995    	CALL	_vdp_bitmapDraw
0414D0 C1                  A  4996    	POP	BC
0414D1 C1                  A  4997    	POP	BC
0414D2 C1                  A  4998    	POP	BC
0414D3 DD34FF              A  4999    	INC	(IX+%FFFFFFFF)
0414D6                     A  5000    L_126:
0414D6 DD7EFF              A  5001    	LD	A,(IX+%FFFFFFFF)
0414D9 DDBEFE              A  5002    	CP	A,(IX+%FFFFFFFE)
0414DC 38 B0               A  5003    	JR	C,L_124
                           A  5004    ;  406	}
0414DE                     A  5005    L_127:
                           A  5006    .LINE 406
                           A  5007    
0414DE DDF9                A  5008    	LD	SP,IX
0414E0 DDE1                A  5009    	POP	IX
0414E2 C9                  A  5010    	RET	
                           A  5011    
                           A  5012    
                           A  5013    ;**************************** _raw_text *******
                           A  5014    ;Name                         Addr/Register   S
                           A  5015    ;_toupper                            IMPORT  --
                           A  5016    ;_vdp_bitmapDraw                     IMPORT  --
                           A  5017    ;_strlen                             IMPORT  --
                           A  5018    ;w                                     IX-4    
                           A  5019    ;l                                     IX-2    
                           A  5020    ;i                                     IX-1    
                           A  5021    ;y                                    IX+12    
                           A  5022    ;x                                     IX+9    
                           A  5023    ;text                                  IX+6    
                           A  5024    
                           A  5025    
                           A  5026    ; Stack Frame Size: 19 (bytes)
                           A  5027    ;       Spill Code: -3 (instruction)
                           A  5028    
                           A  5029    
                           A  5030    .ENDFUNC "raw_text",406,"_raw_text"
                           A  5031    ;  407	
                           A  5032    ;  408	uint16_t raw_text_multi_centre(const ch
0414E3                     A  5033    _raw_text_multi_centre:
                           A  5034    .DEFINE "_raw_text_multi_centre"
                           A  5035    
                           A  5036    .VALUE _raw_text_multi_centre
                           A  5037    
                           A  5038    .CLASS 2
                           A  5039    
                           A  5040    .TYPE 77
                           A  5041    
                           A  5042    .ENDEF
                           A  5043    
                           A  5044    .BEGFUNC "raw_text_multi_centre",408,"_raw_text
                           A  5045    
                           A  5046    .LINE 408
                           A  5047    
                           A  5048    .DEFINE "text"
                           A  5049    
                           A  5050    .CLASS 65
                           A  5051    
                           A  5052    .VALUE 6
                           A  5053    
                           A  5054    .TYPE 194
                           A  5055    
                           A  5056    .ENDEF
                           A  5057    
                           A  5058    .DEFINE "y"
                           A  5059    
                           A  5060    .CLASS 65
                           A  5061    
                           A  5062    .VALUE 9
                           A  5063    
                           A  5064    .TYPE 13
                           A  5065    
                           A  5066    .ENDEF
                           A  5067    
                           A  5068    .DEFINE "i"
                           A  5069    
                           A  5070    .CLASS 65
                           A  5071    
                           A  5072    .VALUE -1
                           A  5073    
                           A  5074    .TYPE 12
                           A  5075    
                           A  5076    .ENDEF
                           A  5077    
                           A  5078    .DEFINE "x"
                           A  5079    
                           A  5080    .CLASS 65
                           A  5081    
                           A  5082    .VALUE -3
                           A  5083    
                           A  5084    .TYPE 13
                           A  5085    
                           A  5086    .ENDEF
                           A  5087    
                           A  5088    .DEFINE "h"
                           A  5089    
                           A  5090    .CLASS 65
                           A  5091    
                           A  5092    .VALUE -4
                           A  5093    
                           A  5094    .TYPE 12
                           A  5095    
                           A  5096    .ENDEF
                           A  5097    
                           A  5098    .DEFINE "col"
                           A  5099    
                           A  5100    .CLASS 65
                           A  5101    
                           A  5102    .VALUE -5
                           A  5103    
                           A  5104    .TYPE 12
                           A  5105    
                           A  5106    .ENDEF
                           A  5107    
                           A  5108    .DEFINE "j"
                           A  5109    
                           A  5110    .CLASS 65
                           A  5111    
                           A  5112    .VALUE -6
                           A  5113    
                           A  5114    .TYPE 12
                           A  5115    
                           A  5116    .ENDEF
                           A  5117    
                           A  5118    .DEFINE "w"
                           A  5119    
                           A  5120    .CLASS 65
                           A  5121    
                           A  5122    .VALUE -8
                           A  5123    
                           A  5124    .TYPE 13
                           A  5125    
                           A  5126    .ENDEF
                           A  5127    
                           A  5128    .DEFINE "line"
                           A  5129    
                           A  5130    .CLASS 65
                           A  5131    
                           A  5132    .VALUE -9
                           A  5133    
                           A  5134    .TYPE 12
                           A  5135    
                           A  5136    .ENDEF
                           A  5137    
                           A  5138    .DEFINE "l"
                           A  5139    
                           A  5140    .CLASS 65
                           A  5141    
                           A  5142    .VALUE -10
                           A  5143    
                           A  5144    .TYPE 12
                           A  5145    
                           A  5146    .ENDEF
                           A  5147    
0414E3 DDE5                A  5148    	PUSH	IX
0414E5 DD210000 00         A  5149    	LD	IX,0
0414EA DD39                A  5150    	ADD	IX,SP
0414EC ED22F3              A  5151    	LEA	HL,IX+%FFFFFFF3
0414EF F9                  A  5152    	LD	SP,HL
                           A  5153    ;  409	    uint8_t i, l, j, h, col = 0, line =
                           A  5154    .LINE 409
                           A  5155    
0414F0 DD36F700            A  5156    	LD	(IX+%FFFFFFF7),%0
                           A  5157    ;  410	    uint16_t w, x;
                           A  5158    ;  411	    l = strlen(text);
                           A  5159    .LINE 411
                           A  5160    
0414F4 DD0706              A  5161    	LD	BC,(IX+%6)
0414F7 C5                  A  5162    	PUSH	BC
0414F8 CD 19 4E 04         A  5163    	CALL	_strlen
0414FC C1                  A  5164    	POP	BC
0414FD DD75F6              A  5165    	LD	(IX+%FFFFFFF6),L
                           A  5166    ;  412	
                           A  5167    ;  413	    if (longest_stretch(text) > 30) ret
                           A  5168    .LINE 413
                           A  5169    
041500 DD0706              A  5170    	LD	BC,(IX+%6)
041503 C5                  A  5171    	PUSH	BC
041504 CD 24 13 04         A  5172    	CALL	_longest_stretch
041508 C1                  A  5173    	POP	BC
041509 B7ED62              A  5174    	UEXT	HL
04150C 6F                  A  5175    	LD	L,A
04150D E5C1                A  5176    	LD	BC,HL
04150F 211E0000            A  5177    	LD	HL,30
041513 B7                  A  5178    	OR	A,A
041514 ED42                A  5179    	SBC	HL,BC
041516 F2 20 15 04         A  5180    	JP	P,L__144
04151A EA 2B 15 04         A  5181    	JP	PE,L_129
04151E 18 04               A  5182    	JR	L__145
041520                     A  5183    L__144:
041520 E2 2B 15 04         A  5184    	JP	PO,L_129
041524                     A  5185    L__145:
041524 B7                  A  5186    	OR	A,A
041525 ED62                A  5187    	SBC	HL,HL
041527 C3 C1 17 04         A  5188    	JR	L_154
04152B                     A  5189    L_129:
                           A  5190    ;  414	
                           A  5191    ;  415	    h = (count(text, '\n') * 8) + 8;
                           A  5192    .LINE 415
                           A  5193    
04152B 010A0000            A  5194    	LD	BC,10
04152F C5                  A  5195    	PUSH	BC
041530 DD0706              A  5196    	LD	BC,(IX+%6)
041533 C5                  A  5197    	PUSH	BC
041534 CD E5 12 04         A  5198    	CALL	_count
041538 C1                  A  5199    	POP	BC
041539 C1                  A  5200    	POP	BC
04153A 87                  A  5201    	ADD	A,A
04153B 87                  A  5202    	ADD	A,A
04153C 87                  A  5203    	ADD	A,A
04153D C608                A  5204    	ADD	A,%8
04153F DD77FC              A  5205    	LD	(IX+%FFFFFFFC),A
                           A  5206    ;  416	
                           A  5207    ;  417	    w = (longest_stretch(text) * 8);
                           A  5208    .LINE 417
                           A  5209    
041542 DD0706              A  5210    	LD	BC,(IX+%6)
041545 C5                  A  5211    	PUSH	BC
041546 CD 24 13 04         A  5212    	CALL	_longest_stretch
04154A C1                  A  5213    	POP	BC
04154B 4F                  A  5214    	LD	C,A
04154C 0600                A  5215    	LD	B,%0
04154E C5E1                A  5216    	LD	HL,BC
041550 29                  A  5217    	ADD	HL,HL
041551 29                  A  5218    	ADD	HL,HL
041552 29                  A  5219    	ADD	HL,HL
041553 DD75F8              A  5220    	LD	(IX+%FFFFFFF8),L
041556 DD74F9              A  5221    	LD	(IX+%FFFFFFF9),H
                           A  5222    ;  418	    x = (game.screen_width - w) / 2;
                           A  5223    .LINE 418
                           A  5224    
041559 ED4B 7D 5E 04       A  5225    	LD	BC,(_game)
04155E CD 9B 4D 04         A  5226    	CALL	__stoiu
041562 E5D1                A  5227    	LD	DE,HL
041564 DD07F8              A  5228    	LD	BC,(IX+%FFFFFFF8)
041567 CD 9B 4D 04         A  5229    	CALL	__stoiu
04156B E5C1                A  5230    	LD	BC,HL
04156D D5E1                A  5231    	LD	HL,DE
04156F B7                  A  5232    	OR	A,A
041570 ED42                A  5233    	SBC	HL,BC
041572 01020000            A  5234    	LD	BC,2
041576 CD 2B 50 04         A  5235    	CALL	__idivs
04157A DD75FD              A  5236    	LD	(IX+%FFFFFFFD),L
04157D DD74FE              A  5237    	LD	(IX+%FFFFFFFE),H
                           A  5238    ;  419	
                           A  5239    ;  420	    vdp_bitmapDraw(FRAME_NW, x, y);
                           A  5240    .LINE 420
                           A  5241    
041580 DD0709              A  5242    	LD	BC,(IX+%9)
041583 C5                  A  5243    	PUSH	BC
041584 DD07FD              A  5244    	LD	BC,(IX+%FFFFFFFD)
041587 C5                  A  5245    	PUSH	BC
041588 01780000            A  5246    	LD	BC,120
04158C C5                  A  5247    	PUSH	BC
04158D CD 6E 3D 04         A  5248    	CALL	_vdp_bitmapDraw
041591 C1                  A  5249    	POP	BC
041592 C1                  A  5250    	POP	BC
041593 C1                  A  5251    	POP	BC
                           A  5252    ;  421	    vdp_bitmapDraw(FRAME_NE, x + w, y);
                           A  5253    .LINE 421
                           A  5254    
041594 DD0709              A  5255    	LD	BC,(IX+%9)
041597 C5                  A  5256    	PUSH	BC
041598 DD07F8              A  5257    	LD	BC,(IX+%FFFFFFF8)
04159B DD27FD              A  5258    	LD	HL,(IX+%FFFFFFFD)
04159E 4009                A  5259    	ADD.SIS	HL,BC
0415A0 E5                  A  5260    	PUSH	HL
0415A1 017A0000            A  5261    	LD	BC,122
0415A5 C5                  A  5262    	PUSH	BC
0415A6 CD 6E 3D 04         A  5263    	CALL	_vdp_bitmapDraw
0415AA C1                  A  5264    	POP	BC
0415AB C1                  A  5265    	POP	BC
0415AC C1                  A  5266    	POP	BC
                           A  5267    ;  422	
                           A  5268    ;  423	    for (i = 1; i < (w / 8); i++) {
                           A  5269    .LINE 423
                           A  5270    
0415AD DD36FF01            A  5271    	LD	(IX+%FFFFFFFF),%1
0415B1 C3 5B 16 04         A  5272    	JR	L_138
0415B5                     A  5273    L_136:
                           A  5274    ;  424	
                           A  5275    ;  425	        vdp_bitmapDraw(FRAME_N, x + (i 
                           A  5276    .LINE 425
                           A  5277    
0415B5 DD0709              A  5278    	LD	BC,(IX+%9)
0415B8 C5                  A  5279    	PUSH	BC
0415B9 DD4EFF              A  5280    	LD	C,(IX+%FFFFFFFF)
0415BC 0600                A  5281    	LD	B,%0
0415BE C5E1                A  5282    	LD	HL,BC
0415C0 29                  A  5283    	ADD	HL,HL
0415C1 29                  A  5284    	ADD	HL,HL
0415C2 29                  A  5285    	ADD	HL,HL
0415C3 DD07FD              A  5286    	LD	BC,(IX+%FFFFFFFD)
0415C6 4009                A  5287    	ADD.SIS	HL,BC
0415C8 E5                  A  5288    	PUSH	HL
0415C9 01790000            A  5289    	LD	BC,121
0415CD C5                  A  5290    	PUSH	BC
0415CE CD 6E 3D 04         A  5291    	CALL	_vdp_bitmapDraw
0415D2 C1                  A  5292    	POP	BC
0415D3 C1                  A  5293    	POP	BC
0415D4 C1                  A  5294    	POP	BC
                           A  5295    ;  426	        for (j = 1; j < (h / 8); j++) v
                           A  5296    .LINE 426
                           A  5297    
0415D5 DD36FA01            A  5298    	LD	(IX+%FFFFFFFA),%1
0415D9 18 2F               A  5299    	JR	L_134
0415DB                     A  5300    L_132:
0415DB DD4EFA              A  5301    	LD	C,(IX+%FFFFFFFA)
0415DE 0600                A  5302    	LD	B,%0
0415E0 C5E1                A  5303    	LD	HL,BC
0415E2 29                  A  5304    	ADD	HL,HL
0415E3 29                  A  5305    	ADD	HL,HL
0415E4 29                  A  5306    	ADD	HL,HL
0415E5 DD0709              A  5307    	LD	BC,(IX+%9)
0415E8 4009                A  5308    	ADD.SIS	HL,BC
0415EA E5                  A  5309    	PUSH	HL
0415EB DD4EFF              A  5310    	LD	C,(IX+%FFFFFFFF)
0415EE 0600                A  5311    	LD	B,%0
0415F0 C5E1                A  5312    	LD	HL,BC
0415F2 29                  A  5313    	ADD	HL,HL
0415F3 29                  A  5314    	ADD	HL,HL
0415F4 29                  A  5315    	ADD	HL,HL
0415F5 DD07FD              A  5316    	LD	BC,(IX+%FFFFFFFD)
0415F8 4009                A  5317    	ADD.SIS	HL,BC
0415FA E5                  A  5318    	PUSH	HL
0415FB 01800000            A  5319    	LD	BC,128
0415FF C5                  A  5320    	PUSH	BC
041600 CD 6E 3D 04         A  5321    	CALL	_vdp_bitmapDraw
041604 C1                  A  5322    	POP	BC
041605 C1                  A  5323    	POP	BC
041606 C1                  A  5324    	POP	BC
041607 DD34FA              A  5325    	INC	(IX+%FFFFFFFA)
04160A                     A  5326    L_134:
04160A DD7EFC              A  5327    	LD	A,(IX+%FFFFFFFC)
04160D B7ED62              A  5328    	UEXT	HL
041610 6F                  A  5329    	LD	L,A
041611 01080000            A  5330    	LD	BC,8
041615 CD 2B 50 04         A  5331    	CALL	__idivs
041619 E5C1                A  5332    	LD	BC,HL
04161B DD7EFA              A  5333    	LD	A,(IX+%FFFFFFFA)
04161E B7ED62              A  5334    	UEXT	HL
041621 6F                  A  5335    	LD	L,A
041622 B7                  A  5336    	OR	A,A
041623 ED42                A  5337    	SBC	HL,BC
041625 FA 2F 16 04         A  5338    	JP	M,L__146
041629 EA DB 15 04         A  5339    	JP	PE,L_132
04162D 18 04               A  5340    	JR	L__147
04162F                     A  5341    L__146:
04162F E2 DB 15 04         A  5342    	JP	PO,L_132
041633                     A  5343    L__147:
                           A  5344    ;  427	        vdp_bitmapDraw(FRAME_S, x + (i 
                           A  5345    .LINE 427
                           A  5346    
041633 DD4EFC              A  5347    	LD	C,(IX+%FFFFFFFC)
041636 0600                A  5348    	LD	B,%0
041638 DD2709              A  5349    	LD	HL,(IX+%9)
04163B 4009                A  5350    	ADD.SIS	HL,BC
04163D E5                  A  5351    	PUSH	HL
04163E DD4EFF              A  5352    	LD	C,(IX+%FFFFFFFF)
041641 C5E1                A  5353    	LD	HL,BC
041643 29                  A  5354    	ADD	HL,HL
041644 29                  A  5355    	ADD	HL,HL
041645 29                  A  5356    	ADD	HL,HL
041646 DD07FD              A  5357    	LD	BC,(IX+%FFFFFFFD)
041649 4009                A  5358    	ADD.SIS	HL,BC
04164B E5                  A  5359    	PUSH	HL
04164C 017D0000            A  5360    	LD	BC,125
041650 C5                  A  5361    	PUSH	BC
041651 CD 6E 3D 04         A  5362    	CALL	_vdp_bitmapDraw
041655 C1                  A  5363    	POP	BC
041656 C1                  A  5364    	POP	BC
041657 C1                  A  5365    	POP	BC
041658 DD34FF              A  5366    	INC	(IX+%FFFFFFFF)
                           A  5367    ;  428	
                           A  5368    ;  429	    }
04165B                     A  5369    L_138:
                           A  5370    .LINE 429
                           A  5371    
04165B DD07F8              A  5372    	LD	BC,(IX+%FFFFFFF8)
04165E CD 9B 4D 04         A  5373    	CALL	__stoiu
041662 01080000            A  5374    	LD	BC,8
041666 CD 2B 50 04         A  5375    	CALL	__idivs
04166A E5C1                A  5376    	LD	BC,HL
04166C DD7EFF              A  5377    	LD	A,(IX+%FFFFFFFF)
04166F B7ED62              A  5378    	UEXT	HL
041672 6F                  A  5379    	LD	L,A
041673 B7                  A  5380    	OR	A,A
041674 ED42                A  5381    	SBC	HL,BC
041676 FA 80 16 04         A  5382    	JP	M,L__148
04167A EA B5 15 04         A  5383    	JP	PE,L_136
04167E 18 04               A  5384    	JR	L__149
041680                     A  5385    L__148:
041680 E2 B5 15 04         A  5386    	JP	PO,L_136
041684                     A  5387    L__149:
                           A  5388    ;  430	
                           A  5389    ;  431	    for (i = 1; i < (h / 8); i++) {
                           A  5390    .LINE 431
                           A  5391    
041684 DD36FF01            A  5392    	LD	(IX+%FFFFFFFF),%1
041688 18 48               A  5393    	JR	L_142
04168A                     A  5394    L_140:
                           A  5395    ;  432	
                           A  5396    ;  433	        vdp_bitmapDraw(FRAME_W, x, y + 
                           A  5397    .LINE 433
                           A  5398    
04168A DD4EFF              A  5399    	LD	C,(IX+%FFFFFFFF)
04168D 0600                A  5400    	LD	B,%0
04168F C5E1                A  5401    	LD	HL,BC
041691 29                  A  5402    	ADD	HL,HL
041692 29                  A  5403    	ADD	HL,HL
041693 29                  A  5404    	ADD	HL,HL
041694 DD0709              A  5405    	LD	BC,(IX+%9)
041697 4009                A  5406    	ADD.SIS	HL,BC
041699 E5                  A  5407    	PUSH	HL
04169A DD07FD              A  5408    	LD	BC,(IX+%FFFFFFFD)
04169D C5                  A  5409    	PUSH	BC
04169E 017F0000            A  5410    	LD	BC,127
0416A2 C5                  A  5411    	PUSH	BC
0416A3 CD 6E 3D 04         A  5412    	CALL	_vdp_bitmapDraw
0416A7 C1                  A  5413    	POP	BC
0416A8 C1                  A  5414    	POP	BC
0416A9 C1                  A  5415    	POP	BC
                           A  5416    ;  434	        vdp_bitmapDraw(FRAME_E, x + w, 
                           A  5417    .LINE 434
                           A  5418    
0416AA DD4EFF              A  5419    	LD	C,(IX+%FFFFFFFF)
0416AD 0600                A  5420    	LD	B,%0
0416AF C5E1                A  5421    	LD	HL,BC
0416B1 29                  A  5422    	ADD	HL,HL
0416B2 29                  A  5423    	ADD	HL,HL
0416B3 29                  A  5424    	ADD	HL,HL
0416B4 DD0709              A  5425    	LD	BC,(IX+%9)
0416B7 4009                A  5426    	ADD.SIS	HL,BC
0416B9 E5                  A  5427    	PUSH	HL
0416BA DD07F8              A  5428    	LD	BC,(IX+%FFFFFFF8)
0416BD DD27FD              A  5429    	LD	HL,(IX+%FFFFFFFD)
0416C0 4009                A  5430    	ADD.SIS	HL,BC
0416C2 E5                  A  5431    	PUSH	HL
0416C3 017B0000            A  5432    	LD	BC,123
0416C7 C5                  A  5433    	PUSH	BC
0416C8 CD 6E 3D 04         A  5434    	CALL	_vdp_bitmapDraw
0416CC C1                  A  5435    	POP	BC
0416CD C1                  A  5436    	POP	BC
0416CE C1                  A  5437    	POP	BC
0416CF DD34FF              A  5438    	INC	(IX+%FFFFFFFF)
                           A  5439    ;  435	
                           A  5440    ;  436	    }
0416D2                     A  5441    L_142:
                           A  5442    .LINE 436
                           A  5443    
0416D2 DD7EFC              A  5444    	LD	A,(IX+%FFFFFFFC)
0416D5 B7ED62              A  5445    	UEXT	HL
0416D8 6F                  A  5446    	LD	L,A
0416D9 01080000            A  5447    	LD	BC,8
0416DD CD 2B 50 04         A  5448    	CALL	__idivs
0416E1 E5C1                A  5449    	LD	BC,HL
0416E3 DD7EFF              A  5450    	LD	A,(IX+%FFFFFFFF)
0416E6 B7ED62              A  5451    	UEXT	HL
0416E9 6F                  A  5452    	LD	L,A
0416EA B7                  A  5453    	OR	A,A
0416EB ED42                A  5454    	SBC	HL,BC
0416ED FA F7 16 04         A  5455    	JP	M,L__150
0416F1 EA 8A 16 04         A  5456    	JP	PE,L_140
0416F5 18 04               A  5457    	JR	L__151
0416F7                     A  5458    L__150:
0416F7 E2 8A 16 04         A  5459    	JP	PO,L_140
0416FB                     A  5460    L__151:
                           A  5461    ;  437	
                           A  5462    ;  438	    vdp_bitmapDraw(FRAME_SW, x, y + h);
                           A  5463    .LINE 438
                           A  5464    
0416FB DD4EFC              A  5465    	LD	C,(IX+%FFFFFFFC)
0416FE 0600                A  5466    	LD	B,%0
041700 DD2709              A  5467    	LD	HL,(IX+%9)
041703 4009                A  5468    	ADD.SIS	HL,BC
041705 E5                  A  5469    	PUSH	HL
041706 DD07FD              A  5470    	LD	BC,(IX+%FFFFFFFD)
041709 C5                  A  5471    	PUSH	BC
04170A 017E0000            A  5472    	LD	BC,126
04170E C5                  A  5473    	PUSH	BC
04170F CD 6E 3D 04         A  5474    	CALL	_vdp_bitmapDraw
041713 C1                  A  5475    	POP	BC
041714 C1                  A  5476    	POP	BC
041715 C1                  A  5477    	POP	BC
                           A  5478    ;  439	    vdp_bitmapDraw(FRAME_SE, x + w, y +
                           A  5479    .LINE 439
                           A  5480    
041716 DD4EFC              A  5481    	LD	C,(IX+%FFFFFFFC)
041719 0600                A  5482    	LD	B,%0
04171B DD2709              A  5483    	LD	HL,(IX+%9)
04171E 4009                A  5484    	ADD.SIS	HL,BC
041720 E5                  A  5485    	PUSH	HL
041721 DD07F8              A  5486    	LD	BC,(IX+%FFFFFFF8)
041724 DD27FD              A  5487    	LD	HL,(IX+%FFFFFFFD)
041727 4009                A  5488    	ADD.SIS	HL,BC
041729 E5                  A  5489    	PUSH	HL
04172A 017C0000            A  5490    	LD	BC,124
04172E C5                  A  5491    	PUSH	BC
04172F CD 6E 3D 04         A  5492    	CALL	_vdp_bitmapDraw
041733 C1                  A  5493    	POP	BC
041734 C1                  A  5494    	POP	BC
041735 C1                  A  5495    	POP	BC
                           A  5496    ;  440	
                           A  5497    ;  441	    col = 0;
                           A  5498    .LINE 441
                           A  5499    
041736 DD36FB00            A  5500    	LD	(IX+%FFFFFFFB),%0
                           A  5501    ;  442	    for (i = 0; i < l; i++) {
                           A  5502    .LINE 442
                           A  5503    
04173A DD36FF00            A  5504    	LD	(IX+%FFFFFFFF),%0
04173E 18 73               A  5505    	JR	L_152
041740                     A  5506    L_150:
                           A  5507    ;  443	
                           A  5508    ;  444	        if (text[i] == '\n') {
                           A  5509    .LINE 444
                           A  5510    
041740 DD7EFF              A  5511    	LD	A,(IX+%FFFFFFFF)
041743 B7ED62              A  5512    	UEXT	HL
041746 6F                  A  5513    	LD	L,A
041747 DD0706              A  5514    	LD	BC,(IX+%6)
04174A 09                  A  5515    	ADD	HL,BC
04174B DD2FF3              A  5516    	LD	(IX+%FFFFFFF3),HL
04174E 7E                  A  5517    	LD	A,(HL)
04174F 47                  A  5518    	LD	B,A
041750 17ED62              A  5519    	SEXT	HL
041753 68                  A  5520    	LD	L,B
041754 010A0000            A  5521    	LD	BC,10
041758 B7                  A  5522    	OR	A,A
041759 ED42                A  5523    	SBC	HL,BC
04175B 20 09               A  5524    	JR	NZ,L_149
                           A  5525    ;  445	            line++;
                           A  5526    .LINE 445
                           A  5527    
04175D DD34F7              A  5528    	INC	(IX+%FFFFFFF7)
                           A  5529    ;  446	            col = 0;
                           A  5530    .LINE 446
                           A  5531    
041760 DD36FB00            A  5532    	LD	(IX+%FFFFFFFB),%0
                           A  5533    ;  447	        } else {
                           A  5534    .LINE 447
                           A  5535    
041764 18 4A               A  5536    	JR	L_151
041766                     A  5537    L_149:
                           A  5538    ;  448	            vdp_bitmapDraw(toupper(text
                           A  5539    .LINE 448
                           A  5540    
041766 DD4EF7              A  5541    	LD	C,(IX+%FFFFFFF7)
041769 0600                A  5542    	LD	B,%0
04176B 49210A00            A  5543    	LD.LIS	HL,10
04176F CD C7 55 04         A  5544    	CALL	__smulu
041773 DD0709              A  5545    	LD	BC,(IX+%9)
041776 4009                A  5546    	ADD.SIS	HL,BC
041778 23                  A  5547    	INC	HL
041779 23                  A  5548    	INC	HL
04177A E5                  A  5549    	PUSH	HL
04177B DD4EFB              A  5550    	LD	C,(IX+%FFFFFFFB)
04177E 0600                A  5551    	LD	B,%0
041780 C5E1                A  5552    	LD	HL,BC
041782 29                  A  5553    	ADD	HL,HL
041783 29                  A  5554    	ADD	HL,HL
041784 29                  A  5555    	ADD	HL,HL
041785 DD07FD              A  5556    	LD	BC,(IX+%FFFFFFFD)
041788 4009                A  5557    	ADD.SIS	HL,BC
04178A 23                  A  5558    	INC	HL
04178B 23                  A  5559    	INC	HL
04178C E5                  A  5560    	PUSH	HL
04178D DD27F3              A  5561    	LD	HL,(IX+%FFFFFFF3)
041790 7E                  A  5562    	LD	A,(HL)
041791 47                  A  5563    	LD	B,A
041792 17ED62              A  5564    	SEXT	HL
041795 68                  A  5565    	LD	L,B
041796 E5                  A  5566    	PUSH	HL
041797 CD E7 4D 04         A  5567    	CALL	_toupper
04179B C1                  A  5568    	POP	BC
04179C E5FDE1              A  5569    	LD	IY,HL
04179F ED2364              A  5570    	LEA	HL,IY+%64
0417A2 4D                  A  5571    	LD	C,L
0417A3 0600                A  5572    	LD	B,%0
0417A5 C5                  A  5573    	PUSH	BC
0417A6 CD 6E 3D 04         A  5574    	CALL	_vdp_bitmapDraw
0417AA C1                  A  5575    	POP	BC
0417AB C1                  A  5576    	POP	BC
0417AC C1                  A  5577    	POP	BC
                           A  5578    ;  449	            col++;
                           A  5579    .LINE 449
                           A  5580    
0417AD DD34FB              A  5581    	INC	(IX+%FFFFFFFB)
                           A  5582    ;  450	        }
                           A  5583    ;  451	
                           A  5584    ;  452	    }
0417B0                     A  5585    L_151:
                           A  5586    .LINE 452
                           A  5587    
0417B0 DD34FF              A  5588    	INC	(IX+%FFFFFFFF)
0417B3                     A  5589    L_152:
0417B3 DD7EFF              A  5590    	LD	A,(IX+%FFFFFFFF)
0417B6 DDBEF6              A  5591    	CP	A,(IX+%FFFFFFF6)
0417B9 38 85               A  5592    	JR	C,L_150
                           A  5593    ;  453	
                           A  5594    ;  454	    return x + 4;
                           A  5595    .LINE 454
                           A  5596    
0417BB DD31FD              A  5597    	LD	IY,(IX+%FFFFFFFD)
0417BE ED2304              A  5598    	LEA	HL,IY+%4
                           A  5599    ;  455	}
0417C1                     A  5600    L_154:
                           A  5601    .LINE 455
                           A  5602    
0417C1 DDF9                A  5603    	LD	SP,IX
0417C3 DDE1                A  5604    	POP	IX
0417C5 C9                  A  5605    	RET	
                           A  5606    
                           A  5607    
                           A  5608    ;**************************** _raw_text_multi_c
                           A  5609    ;Name                         Addr/Register   S
                           A  5610    ;_toupper                            IMPORT  --
                           A  5611    ;_vdp_bitmapDraw                     IMPORT  --
                           A  5612    ;_game                               STATIC   1
                           A  5613    ;_strlen                             IMPORT  --
                           A  5614    ;G_1                                  IX-13    
                           A  5615    ;l                                    IX-10    
                           A  5616    ;line                                  IX-9    
                           A  5617    ;w                                     IX-8    
                           A  5618    ;j                                     IX-6    
                           A  5619    ;col                                   IX-5    
                           A  5620    ;h                                     IX-4    
                           A  5621    ;x                                     IX-3    
                           A  5622    ;i                                     IX-1    
                           A  5623    ;y                                     IX+9    
                           A  5624    ;text                                  IX+6    
                           A  5625    
                           A  5626    
                           A  5627    ; Stack Frame Size: 25 (bytes)
                           A  5628    ;       Spill Code: -3 (instruction)
                           A  5629    
                           A  5630    
                           A  5631    .ENDFUNC "raw_text_multi_centre",455,"_raw_text
                           A  5632    ;  456	
                           A  5633    ;  457	void raw_text_centre(const char * text,
0417C6                     A  5634    _raw_text_centre:
                           A  5635    .DEFINE "_raw_text_centre"
                           A  5636    
                           A  5637    .VALUE _raw_text_centre
                           A  5638    
                           A  5639    .CLASS 2
                           A  5640    
                           A  5641    .TYPE 65
                           A  5642    
                           A  5643    .ENDEF
                           A  5644    
                           A  5645    .BEGFUNC "raw_text_centre",457,"_raw_text_centr
                           A  5646    
                           A  5647    .LINE 457
                           A  5648    
                           A  5649    .DEFINE "text"
                           A  5650    
                           A  5651    .CLASS 65
                           A  5652    
                           A  5653    .VALUE 6
                           A  5654    
                           A  5655    .TYPE 194
                           A  5656    
                           A  5657    .ENDEF
                           A  5658    
                           A  5659    .DEFINE "y"
                           A  5660    
                           A  5661    .CLASS 65
                           A  5662    
                           A  5663    .VALUE 9
                           A  5664    
                           A  5665    .TYPE 13
                           A  5666    
                           A  5667    .ENDEF
                           A  5668    
                           A  5669    .DEFINE "i"
                           A  5670    
                           A  5671    .CLASS 65
                           A  5672    
                           A  5673    .VALUE -1
                           A  5674    
                           A  5675    .TYPE 12
                           A  5676    
                           A  5677    .ENDEF
                           A  5678    
                           A  5679    .DEFINE "x"
                           A  5680    
                           A  5681    .CLASS 65
                           A  5682    
                           A  5683    .VALUE -3
                           A  5684    
                           A  5685    .TYPE 13
                           A  5686    
                           A  5687    .ENDEF
                           A  5688    
                           A  5689    .DEFINE "w"
                           A  5690    
                           A  5691    .CLASS 65
                           A  5692    
                           A  5693    .VALUE -5
                           A  5694    
                           A  5695    .TYPE 13
                           A  5696    
                           A  5697    .ENDEF
                           A  5698    
                           A  5699    .DEFINE "l"
                           A  5700    
                           A  5701    .CLASS 65
                           A  5702    
                           A  5703    .VALUE -6
                           A  5704    
                           A  5705    .TYPE 12
                           A  5706    
                           A  5707    .ENDEF
                           A  5708    
0417C6 DDE5                A  5709    	PUSH	IX
0417C8 DD210000 00         A  5710    	LD	IX,0
0417CD DD39                A  5711    	ADD	IX,SP
0417CF C5                  A  5712    	PUSH	BC
0417D0 C5                  A  5713    	PUSH	BC
                           A  5714    ;  458	    uint8_t i, l;
                           A  5715    ;  459	    uint16_t w, x;
                           A  5716    ;  460	    l = strlen(text);
                           A  5717    .LINE 460
                           A  5718    
0417D1 DD0706              A  5719    	LD	BC,(IX+%6)
0417D4 C5                  A  5720    	PUSH	BC
0417D5 CD 19 4E 04         A  5721    	CALL	_strlen
0417D9 C1                  A  5722    	POP	BC
0417DA DD75FA              A  5723    	LD	(IX+%FFFFFFFA),L
                           A  5724    ;  461	    if (l > 30) return;
                           A  5725    .LINE 461
                           A  5726    
0417DD 3E1E                A  5727    	LD	A,%1E
0417DF DDBEFA              A  5728    	CP	A,(IX+%FFFFFFFA)
0417E2 DA 3F 19 04         A  5729    	JR	C,L_166
                           A  5730    ;  462	
                           A  5731    ;  463	    w = (l * 8);
                           A  5732    .LINE 463
                           A  5733    
0417E6 DD4EFA              A  5734    	LD	C,(IX+%FFFFFFFA)
0417E9 0600                A  5735    	LD	B,%0
0417EB C5E1                A  5736    	LD	HL,BC
0417ED 29                  A  5737    	ADD	HL,HL
0417EE 29                  A  5738    	ADD	HL,HL
0417EF 29                  A  5739    	ADD	HL,HL
0417F0 DD75FB              A  5740    	LD	(IX+%FFFFFFFB),L
0417F3 DD74FC              A  5741    	LD	(IX+%FFFFFFFC),H
                           A  5742    ;  464	    x = (320 - w) / 2;
                           A  5743    .LINE 464
                           A  5744    
0417F6 DD07FB              A  5745    	LD	BC,(IX+%FFFFFFFB)
0417F9 CD 9B 4D 04         A  5746    	CALL	__stoiu
0417FD E5C1                A  5747    	LD	BC,HL
0417FF 21400100            A  5748    	LD	HL,320
041803 B7                  A  5749    	OR	A,A
041804 ED42                A  5750    	SBC	HL,BC
041806 01020000            A  5751    	LD	BC,2
04180A CD 2B 50 04         A  5752    	CALL	__idivs
04180E DD75FD              A  5753    	LD	(IX+%FFFFFFFD),L
041811 DD74FE              A  5754    	LD	(IX+%FFFFFFFE),H
                           A  5755    ;  465	
                           A  5756    ;  466	    vdp_bitmapDraw(FRAME_NW, x, y);
                           A  5757    .LINE 466
                           A  5758    
041814 DD0709              A  5759    	LD	BC,(IX+%9)
041817 C5                  A  5760    	PUSH	BC
041818 DD07FD              A  5761    	LD	BC,(IX+%FFFFFFFD)
04181B C5                  A  5762    	PUSH	BC
04181C 01780000            A  5763    	LD	BC,120
041820 C5                  A  5764    	PUSH	BC
041821 CD 6E 3D 04         A  5765    	CALL	_vdp_bitmapDraw
041825 C1                  A  5766    	POP	BC
041826 C1                  A  5767    	POP	BC
041827 C1                  A  5768    	POP	BC
                           A  5769    ;  467	    vdp_bitmapDraw(FRAME_NE, x + w, y);
                           A  5770    .LINE 467
                           A  5771    
041828 DD0709              A  5772    	LD	BC,(IX+%9)
04182B C5                  A  5773    	PUSH	BC
04182C DD07FB              A  5774    	LD	BC,(IX+%FFFFFFFB)
04182F DD27FD              A  5775    	LD	HL,(IX+%FFFFFFFD)
041832 4009                A  5776    	ADD.SIS	HL,BC
041834 E5                  A  5777    	PUSH	HL
041835 017A0000            A  5778    	LD	BC,122
041839 C5                  A  5779    	PUSH	BC
04183A CD 6E 3D 04         A  5780    	CALL	_vdp_bitmapDraw
04183E C1                  A  5781    	POP	BC
04183F C1                  A  5782    	POP	BC
041840 C1                  A  5783    	POP	BC
                           A  5784    ;  468	
                           A  5785    ;  469	    for (i = 1; i < (w / 8); i++) {
                           A  5786    .LINE 469
                           A  5787    
041841 DD36FF01            A  5788    	LD	(IX+%FFFFFFFF),%1
041845 18 46               A  5789    	JR	L_160
041847                     A  5790    L_158:
                           A  5791    ;  470	        vdp_bitmapDraw(FRAME_N, x + (i 
                           A  5792    .LINE 470
                           A  5793    
041847 DD0709              A  5794    	LD	BC,(IX+%9)
04184A C5                  A  5795    	PUSH	BC
04184B DD4EFF              A  5796    	LD	C,(IX+%FFFFFFFF)
04184E 0600                A  5797    	LD	B,%0
041850 C5E1                A  5798    	LD	HL,BC
041852 29                  A  5799    	ADD	HL,HL
041853 29                  A  5800    	ADD	HL,HL
041854 29                  A  5801    	ADD	HL,HL
041855 DD07FD              A  5802    	LD	BC,(IX+%FFFFFFFD)
041858 4009                A  5803    	ADD.SIS	HL,BC
04185A E5                  A  5804    	PUSH	HL
04185B 01790000            A  5805    	LD	BC,121
04185F C5                  A  5806    	PUSH	BC
041860 CD 6E 3D 04         A  5807    	CALL	_vdp_bitmapDraw
041864 C1                  A  5808    	POP	BC
041865 C1                  A  5809    	POP	BC
041866 C1                  A  5810    	POP	BC
                           A  5811    ;  471	        vdp_bitmapDraw(FRAME_S, x + (i 
                           A  5812    .LINE 471
                           A  5813    
041867 DD3109              A  5814    	LD	IY,(IX+%9)
04186A ED0308              A  5815    	LEA	BC,IY+%8
04186D C5                  A  5816    	PUSH	BC
04186E DD4EFF              A  5817    	LD	C,(IX+%FFFFFFFF)
041871 0600                A  5818    	LD	B,%0
041873 C5E1                A  5819    	LD	HL,BC
041875 29                  A  5820    	ADD	HL,HL
041876 29                  A  5821    	ADD	HL,HL
041877 29                  A  5822    	ADD	HL,HL
041878 DD07FD              A  5823    	LD	BC,(IX+%FFFFFFFD)
04187B 4009                A  5824    	ADD.SIS	HL,BC
04187D E5                  A  5825    	PUSH	HL
04187E 017D0000            A  5826    	LD	BC,125
041882 C5                  A  5827    	PUSH	BC
041883 CD 6E 3D 04         A  5828    	CALL	_vdp_bitmapDraw
041887 C1                  A  5829    	POP	BC
041888 C1                  A  5830    	POP	BC
041889 C1                  A  5831    	POP	BC
04188A DD34FF              A  5832    	INC	(IX+%FFFFFFFF)
                           A  5833    ;  472	    }
04188D                     A  5834    L_160:
                           A  5835    .LINE 472
                           A  5836    
04188D DD07FB              A  5837    	LD	BC,(IX+%FFFFFFFB)
041890 CD 9B 4D 04         A  5838    	CALL	__stoiu
041894 01080000            A  5839    	LD	BC,8
041898 CD 2B 50 04         A  5840    	CALL	__idivs
04189C E5C1                A  5841    	LD	BC,HL
04189E DD7EFF              A  5842    	LD	A,(IX+%FFFFFFFF)
0418A1 B7ED62              A  5843    	UEXT	HL
0418A4 6F                  A  5844    	LD	L,A
0418A5 B7                  A  5845    	OR	A,A
0418A6 ED42                A  5846    	SBC	HL,BC
0418A8 FA B2 18 04         A  5847    	JP	M,L__156
0418AC EA 47 18 04         A  5848    	JP	PE,L_158
0418B0 18 04               A  5849    	JR	L__157
0418B2                     A  5850    L__156:
0418B2 E2 47 18 04         A  5851    	JP	PO,L_158
0418B6                     A  5852    L__157:
                           A  5853    ;  473	
                           A  5854    ;  474	    vdp_bitmapDraw(FRAME_SW, x, y + 8);
                           A  5855    .LINE 474
                           A  5856    
0418B6 DD3109              A  5857    	LD	IY,(IX+%9)
0418B9 ED0308              A  5858    	LEA	BC,IY+%8
0418BC C5                  A  5859    	PUSH	BC
0418BD DD07FD              A  5860    	LD	BC,(IX+%FFFFFFFD)
0418C0 C5                  A  5861    	PUSH	BC
0418C1 017E0000            A  5862    	LD	BC,126
0418C5 C5                  A  5863    	PUSH	BC
0418C6 CD 6E 3D 04         A  5864    	CALL	_vdp_bitmapDraw
0418CA C1                  A  5865    	POP	BC
0418CB C1                  A  5866    	POP	BC
0418CC C1                  A  5867    	POP	BC
                           A  5868    ;  475	    vdp_bitmapDraw(FRAME_SE, x + w, y +
                           A  5869    .LINE 475
                           A  5870    
0418CD DD3109              A  5871    	LD	IY,(IX+%9)
0418D0 ED0308              A  5872    	LEA	BC,IY+%8
0418D3 C5                  A  5873    	PUSH	BC
0418D4 DD07FB              A  5874    	LD	BC,(IX+%FFFFFFFB)
0418D7 DD27FD              A  5875    	LD	HL,(IX+%FFFFFFFD)
0418DA 4009                A  5876    	ADD.SIS	HL,BC
0418DC E5                  A  5877    	PUSH	HL
0418DD 017C0000            A  5878    	LD	BC,124
0418E1 C5                  A  5879    	PUSH	BC
0418E2 CD 6E 3D 04         A  5880    	CALL	_vdp_bitmapDraw
0418E6 C1                  A  5881    	POP	BC
0418E7 C1                  A  5882    	POP	BC
0418E8 C1                  A  5883    	POP	BC
                           A  5884    ;  476	
                           A  5885    ;  477	    for (i = 0; i < l; i++) {
                           A  5886    .LINE 477
                           A  5887    
0418E9 DD36FF00            A  5888    	LD	(IX+%FFFFFFFF),%0
0418ED 18 48               A  5889    	JR	L_165
0418EF                     A  5890    L_163:
                           A  5891    ;  478	
                           A  5892    ;  479	        vdp_bitmapDraw(toupper(text[i])
                           A  5893    .LINE 479
                           A  5894    
0418EF DD3109              A  5895    	LD	IY,(IX+%9)
0418F2 ED0304              A  5896    	LEA	BC,IY+%4
0418F5 C5                  A  5897    	PUSH	BC
0418F6 DD4EFF              A  5898    	LD	C,(IX+%FFFFFFFF)
0418F9 0600                A  5899    	LD	B,%0
0418FB C5E1                A  5900    	LD	HL,BC
0418FD 29                  A  5901    	ADD	HL,HL
0418FE 29                  A  5902    	ADD	HL,HL
0418FF 29                  A  5903    	ADD	HL,HL
041900 DD07FD              A  5904    	LD	BC,(IX+%FFFFFFFD)
041903 4009                A  5905    	ADD.SIS	HL,BC
041905 E5FDE1              A  5906    	LD	IY,HL
041908 ED0304              A  5907    	LEA	BC,IY+%4
04190B C5                  A  5908    	PUSH	BC
04190C DD7EFF              A  5909    	LD	A,(IX+%FFFFFFFF)
04190F B7ED62              A  5910    	UEXT	HL
041912 6F                  A  5911    	LD	L,A
041913 DD0706              A  5912    	LD	BC,(IX+%6)
041916 09                  A  5913    	ADD	HL,BC
041917 7E                  A  5914    	LD	A,(HL)
041918 47                  A  5915    	LD	B,A
041919 17ED62              A  5916    	SEXT	HL
04191C 68                  A  5917    	LD	L,B
04191D E5                  A  5918    	PUSH	HL
04191E CD E7 4D 04         A  5919    	CALL	_toupper
041922 C1                  A  5920    	POP	BC
041923 E5FDE1              A  5921    	LD	IY,HL
041926 ED2364              A  5922    	LEA	HL,IY+%64
041929 4D                  A  5923    	LD	C,L
04192A 0600                A  5924    	LD	B,%0
04192C C5                  A  5925    	PUSH	BC
04192D CD 6E 3D 04         A  5926    	CALL	_vdp_bitmapDraw
041931 C1                  A  5927    	POP	BC
041932 C1                  A  5928    	POP	BC
041933 C1                  A  5929    	POP	BC
041934 DD34FF              A  5930    	INC	(IX+%FFFFFFFF)
                           A  5931    ;  480	
                           A  5932    ;  481	    }
041937                     A  5933    L_165:
                           A  5934    .LINE 481
                           A  5935    
041937 DD7EFF              A  5936    	LD	A,(IX+%FFFFFFFF)
04193A DDBEFA              A  5937    	CP	A,(IX+%FFFFFFFA)
04193D 38 B0               A  5938    	JR	C,L_163
                           A  5939    ;  482	}
04193F                     A  5940    L_166:
                           A  5941    .LINE 482
                           A  5942    
04193F DDF9                A  5943    	LD	SP,IX
041941 DDE1                A  5944    	POP	IX
041943 C9                  A  5945    	RET	
                           A  5946    
                           A  5947    
                           A  5948    ;**************************** _raw_text_centre 
                           A  5949    ;Name                         Addr/Register   S
                           A  5950    ;_toupper                            IMPORT  --
                           A  5951    ;_vdp_bitmapDraw                     IMPORT  --
                           A  5952    ;_strlen                             IMPORT  --
                           A  5953    ;l                                     IX-6    
                           A  5954    ;w                                     IX-5    
                           A  5955    ;x                                     IX-3    
                           A  5956    ;i                                     IX-1    
                           A  5957    ;y                                     IX+9    
                           A  5958    ;text                                  IX+6    
                           A  5959    
                           A  5960    
                           A  5961    ; Stack Frame Size: 18 (bytes)
                           A  5962    ;       Spill Code: -3 (instruction)
                           A  5963    
                           A  5964    
                           A  5965    .ENDFUNC "raw_text_centre",482,"_raw_text_centr
                           A  5966    ;  483	
                           A  5967    ;  484	uint24_t alt_atoi(const char * str) {
041944                     A  5968    _alt_atoi:
                           A  5969    .DEFINE "_alt_atoi"
                           A  5970    
                           A  5971    .VALUE _alt_atoi
                           A  5972    
                           A  5973    .CLASS 2
                           A  5974    
                           A  5975    .TYPE 78
                           A  5976    
                           A  5977    .ENDEF
                           A  5978    
                           A  5979    .BEGFUNC "alt_atoi",484,"_alt_atoi"
                           A  5980    
                           A  5981    .LINE 484
                           A  5982    
                           A  5983    .DEFINE "str"
                           A  5984    
                           A  5985    .CLASS 65
                           A  5986    
                           A  5987    .VALUE 6
                           A  5988    
                           A  5989    .TYPE 194
                           A  5990    
                           A  5991    .ENDEF
                           A  5992    
                           A  5993    .DEFINE "result"
                           A  5994    
                           A  5995    .CLASS 65
                           A  5996    
                           A  5997    .VALUE -3
                           A  5998    
                           A  5999    .TYPE 14
                           A  6000    
                           A  6001    .ENDEF
                           A  6002    
041944 DDE5                A  6003    	PUSH	IX
041946 DD210000 00         A  6004    	LD	IX,0
04194B DD39                A  6005    	ADD	IX,SP
04194D C5                  A  6006    	PUSH	BC
                           A  6007    ;  485	    uint24_t result = 0;
                           A  6008    .LINE 485
                           A  6009    
04194E 01000000            A  6010    	LD	BC,0
041952 DD0FFD              A  6011    	LD	(IX+%FFFFFFFD),BC
                           A  6012    ;  486	
                           A  6013    ;  487	    while (isdigit( * str)) {
                           A  6014    .LINE 487
                           A  6015    
041955 18 27               A  6016    	JR	L_168
041957                     A  6017    L_169:
                           A  6018    ;  488	        result = result * 10 + ( * str 
                           A  6019    .LINE 488
                           A  6020    
041957 DD27FD              A  6021    	LD	HL,(IX+%FFFFFFFD)
04195A 3E0A                A  6022    	LD	A,%A
04195C CD AC 4F 04         A  6023    	CALL	__imul_b
041960 E5D1                A  6024    	LD	DE,HL
041962 DD2706              A  6025    	LD	HL,(IX+%6)
041965 7E                  A  6026    	LD	A,(HL)
041966 47                  A  6027    	LD	B,A
041967 17ED62              A  6028    	SEXT	HL
04196A 68                  A  6029    	LD	L,B
04196B E5FDE1              A  6030    	LD	IY,HL
04196E ED03D0              A  6031    	LEA	BC,IY+%FFFFFFD0
041971 D5E1                A  6032    	LD	HL,DE
041973 09                  A  6033    	ADD	HL,BC
041974 DD2FFD              A  6034    	LD	(IX+%FFFFFFFD),HL
                           A  6035    ;  489	        str++;
                           A  6036    .LINE 489
                           A  6037    
041977 DD0706              A  6038    	LD	BC,(IX+%6)
04197A 03                  A  6039    	INC	BC
04197B DD0F06              A  6040    	LD	(IX+%6),BC
                           A  6041    ;  490	    }
04197E                     A  6042    L_168:
                           A  6043    .LINE 490
                           A  6044    
04197E DD2706              A  6045    	LD	HL,(IX+%6)
041981 7E                  A  6046    	LD	A,(HL)
041982 47                  A  6047    	LD	B,A
041983 17ED62              A  6048    	SEXT	HL
041986 68                  A  6049    	LD	L,B
041987 E5                  A  6050    	PUSH	HL
041988 CD 83 4F 04         A  6051    	CALL	_isdigit
04198C C1                  A  6052    	POP	BC
04198D 01000000            A  6053    	LD	BC,0
041991 B7                  A  6054    	OR	A,A
041992 ED42                A  6055    	SBC	HL,BC
041994 20 C1               A  6056    	JR	NZ,L_169
                           A  6057    ;  491	
                           A  6058    ;  492	    return result;
                           A  6059    .LINE 492
                           A  6060    
041996 DD27FD              A  6061    	LD	HL,(IX+%FFFFFFFD)
                           A  6062    ;  493	}
                           A  6063    .LINE 493
                           A  6064    
041999 DDF9                A  6065    	LD	SP,IX
04199B DDE1                A  6066    	POP	IX
04199D C9                  A  6067    	RET	
                           A  6068    
                           A  6069    
                           A  6070    ;**************************** _alt_atoi *******
                           A  6071    ;Name                         Addr/Register   S
                           A  6072    ;_isdigit                            IMPORT  --
                           A  6073    ;result                                IX-3    
                           A  6074    ;str                                   IX+6    
                           A  6075    
                           A  6076    
                           A  6077    ; Stack Frame Size: 12 (bytes)
                           A  6078    ;       Spill Code: -3 (instruction)
                           A  6079    
                           A  6080    
                           A  6081    .ENDFUNC "alt_atoi",493,"_alt_atoi"
                           A  6082    ;  494	
                           A  6083    ;  495	
                           A  6084    ;  496	size_t safe_strcpy(char* dest, const ch
04199E                     A  6085    _safe_strcpy:
                           A  6086    .DEFINE "_safe_strcpy"
                           A  6087    
                           A  6088    .VALUE _safe_strcpy
                           A  6089    
                           A  6090    .CLASS 2
                           A  6091    
                           A  6092    .TYPE 78
                           A  6093    
                           A  6094    .ENDEF
                           A  6095    
                           A  6096    .BEGFUNC "safe_strcpy",496,"_safe_strcpy"
                           A  6097    
                           A  6098    .LINE 496
                           A  6099    
                           A  6100    .DEFINE "dest"
                           A  6101    
                           A  6102    .CLASS 65
                           A  6103    
                           A  6104    .VALUE 6
                           A  6105    
                           A  6106    .TYPE 34
                           A  6107    
                           A  6108    .ENDEF
                           A  6109    
                           A  6110    .DEFINE "src"
                           A  6111    
                           A  6112    .CLASS 65
                           A  6113    
                           A  6114    .VALUE 9
                           A  6115    
                           A  6116    .TYPE 194
                           A  6117    
                           A  6118    .ENDEF
                           A  6119    
                           A  6120    .DEFINE "size"
                           A  6121    
                           A  6122    .CLASS 65
                           A  6123    
                           A  6124    .VALUE 12
                           A  6125    
                           A  6126    .TYPE 14
                           A  6127    
                           A  6128    .ENDEF
                           A  6129    
                           A  6130    .DEFINE "src_len"
                           A  6131    
                           A  6132    .CLASS 65
                           A  6133    
                           A  6134    .VALUE -3
                           A  6135    
                           A  6136    .TYPE 14
                           A  6137    
                           A  6138    .ENDEF
                           A  6139    
                           A  6140    .DEFINE "copy_len"
                           A  6141    
                           A  6142    .CLASS 65
                           A  6143    
                           A  6144    .VALUE -6
                           A  6145    
                           A  6146    .TYPE 14
                           A  6147    
                           A  6148    .ENDEF
                           A  6149    
04199E DDE5                A  6150    	PUSH	IX
0419A0 DD210000 00         A  6151    	LD	IX,0
0419A5 DD39                A  6152    	ADD	IX,SP
0419A7 C5                  A  6153    	PUSH	BC
0419A8 C5                  A  6154    	PUSH	BC
0419A9 C5                  A  6155    	PUSH	BC
                           A  6156    ;  497	    size_t src_len = strlen(src);
                           A  6157    .LINE 497
                           A  6158    
0419AA DD0709              A  6159    	LD	BC,(IX+%9)
0419AD C5                  A  6160    	PUSH	BC
0419AE CD 19 4E 04         A  6161    	CALL	_strlen
0419B2 C1                  A  6162    	POP	BC
0419B3 DD2FFD              A  6163    	LD	(IX+%FFFFFFFD),HL
                           A  6164    ;  498	    size_t copy_len = (src_len < size) 
                           A  6165    .LINE 498
                           A  6166    
0419B6 DD070C              A  6167    	LD	BC,(IX+%C)
0419B9 DD27FD              A  6168    	LD	HL,(IX+%FFFFFFFD)
0419BC B7                  A  6169    	OR	A,A
0419BD ED42                A  6170    	SBC	HL,BC
0419BF 30 08               A  6171    	JR	NC,L_174
0419C1 DD07FD              A  6172    	LD	BC,(IX+%FFFFFFFD)
0419C4 DD0FF7              A  6173    	LD	(IX+%FFFFFFF7),BC
0419C7 18 09               A  6174    	JR	L_175
0419C9                     A  6175    L_174:
0419C9 DD310C              A  6176    	LD	IY,(IX+%C)
0419CC ED33FF              A  6177    	LEA	IY,IY+%FFFFFFFF
0419CF DD3EF7              A  6178    	LD	(IX+%FFFFFFF7),IY
0419D2                     A  6179    L_175:
0419D2 DD07F7              A  6180    	LD	BC,(IX+%FFFFFFF7)
0419D5 DD0FFA              A  6181    	LD	(IX+%FFFFFFFA),BC
                           A  6182    ;  499	    
                           A  6183    ;  500	    memcpy(dest, src, copy_len);
                           A  6184    .LINE 500
                           A  6185    
0419D8 C5                  A  6186    	PUSH	BC
0419D9 DD0709              A  6187    	LD	BC,(IX+%9)
0419DC C5                  A  6188    	PUSH	BC
0419DD DD0706              A  6189    	LD	BC,(IX+%6)
0419E0 C5                  A  6190    	PUSH	BC
0419E1 CD 0B 4F 04         A  6191    	CALL	_memcpy
0419E5 C1                  A  6192    	POP	BC
0419E6 C1                  A  6193    	POP	BC
0419E7 C1                  A  6194    	POP	BC
                           A  6195    ;  501	    dest[copy_len] = '\0';
                           A  6196    .LINE 501
                           A  6197    
0419E8 DD07FA              A  6198    	LD	BC,(IX+%FFFFFFFA)
0419EB DD2706              A  6199    	LD	HL,(IX+%6)
0419EE 09                  A  6200    	ADD	HL,BC
0419EF 3600                A  6201    	LD	(HL),%0
                           A  6202    ;  502	    
                           A  6203    ;  503	    return src_len;
                           A  6204    .LINE 503
                           A  6205    
0419F1 DD27FD              A  6206    	LD	HL,(IX+%FFFFFFFD)
                           A  6207    ;  504	}
                           A  6208    .LINE 504
                           A  6209    
0419F4 DDF9                A  6210    	LD	SP,IX
0419F6 DDE1                A  6211    	POP	IX
0419F8 C9                  A  6212    	RET	
                           A  6213    
                           A  6214    
                           A  6215    ;**************************** _safe_strcpy ****
                           A  6216    ;Name                         Addr/Register   S
                           A  6217    ;_memcpy                             IMPORT  --
                           A  6218    ;_strlen                             IMPORT  --
                           A  6219    ;temp172                               IX-9    
                           A  6220    ;copy_len                              IX-6    
                           A  6221    ;src_len                               IX-3    
                           A  6222    ;size                                 IX+12    
                           A  6223    ;src                                   IX+9    
                           A  6224    ;dest                                  IX+6    
                           A  6225    
                           A  6226    
                           A  6227    ; Stack Frame Size: 24 (bytes)
                           A  6228    ;       Spill Code: -3 (instruction)
                           A  6229    
                           A  6230    
                           A  6231    .ENDFUNC "safe_strcpy",504,"_safe_strcpy"
                           A  6232    ;  505	
                           A  6233    ;  506	void setup_text_sprites() {
0419F9                     A  6234    _setup_text_sprites:
                           A  6235    .DEFINE "_setup_text_sprites"
                           A  6236    
                           A  6237    .VALUE _setup_text_sprites
                           A  6238    
                           A  6239    .CLASS 2
                           A  6240    
                           A  6241    .TYPE 65
                           A  6242    
                           A  6243    .ENDEF
                           A  6244    
                           A  6245    .BEGFUNC "setup_text_sprites",506,"_setup_text_
                           A  6246    
0419F9 DDE5                A  6247    	PUSH	IX
0419FB DD210000 00         A  6248    	LD	IX,0
041A00 DD39                A  6249    	ADD	IX,SP
                           A  6250    ;  507	
                           A  6251    ;  508	    vdp_spriteClearFrames(SPRITE_SCORE0
                           A  6252    .LINE 508
                           A  6253    
041A02 01000000            A  6254    	LD	BC,0
041A06 C5                  A  6255    	PUSH	BC
041A07 CD 7B 3E 04         A  6256    	CALL	_vdp_spriteClearFrames
041A0B C1                  A  6257    	POP	BC
                           A  6258    ;  509	    vdp_spriteAddFrameSelected(100 + '0
                           A  6259    .LINE 509
                           A  6260    
041A0C 01940000            A  6261    	LD	BC,148
041A10 C5                  A  6262    	PUSH	BC
041A11 CD 98 3E 04         A  6263    	CALL	_vdp_spriteAddFrameSelected
041A15 C1                  A  6264    	POP	BC
                           A  6265    ;  510	    vdp_spriteAddFrameSelected(149); //
                           A  6266    .LINE 510
                           A  6267    
041A16 01950000            A  6268    	LD	BC,149
041A1A C5                  A  6269    	PUSH	BC
041A1B CD 98 3E 04         A  6270    	CALL	_vdp_spriteAddFrameSelected
041A1F C1                  A  6271    	POP	BC
                           A  6272    ;  511	    vdp_spriteAddFrameSelected(150); //
                           A  6273    .LINE 511
                           A  6274    
041A20 01960000            A  6275    	LD	BC,150
041A24 C5                  A  6276    	PUSH	BC
041A25 CD 98 3E 04         A  6277    	CALL	_vdp_spriteAddFrameSelected
041A29 C1                  A  6278    	POP	BC
                           A  6279    ;  512	    vdp_spriteAddFrameSelected(151); //
                           A  6280    .LINE 512
                           A  6281    
041A2A 01970000            A  6282    	LD	BC,151
041A2E C5                  A  6283    	PUSH	BC
041A2F CD 98 3E 04         A  6284    	CALL	_vdp_spriteAddFrameSelected
041A33 C1                  A  6285    	POP	BC
                           A  6286    ;  513	    vdp_spriteAddFrameSelected(152); //
                           A  6287    .LINE 513
                           A  6288    
041A34 01980000            A  6289    	LD	BC,152
041A38 C5                  A  6290    	PUSH	BC
041A39 CD 98 3E 04         A  6291    	CALL	_vdp_spriteAddFrameSelected
041A3D C1                  A  6292    	POP	BC
                           A  6293    ;  514	    vdp_spriteAddFrameSelected(153); //
                           A  6294    .LINE 514
                           A  6295    
041A3E 01990000            A  6296    	LD	BC,153
041A42 C5                  A  6297    	PUSH	BC
041A43 CD 98 3E 04         A  6298    	CALL	_vdp_spriteAddFrameSelected
041A47 C1                  A  6299    	POP	BC
                           A  6300    ;  515	    vdp_spriteAddFrameSelected(154); //
                           A  6301    .LINE 515
                           A  6302    
041A48 019A0000            A  6303    	LD	BC,154
041A4C C5                  A  6304    	PUSH	BC
041A4D CD 98 3E 04         A  6305    	CALL	_vdp_spriteAddFrameSelected
041A51 C1                  A  6306    	POP	BC
                           A  6307    ;  516	    vdp_spriteAddFrameSelected(155); //
                           A  6308    .LINE 516
                           A  6309    
041A52 019B0000            A  6310    	LD	BC,155
041A56 C5                  A  6311    	PUSH	BC
041A57 CD 98 3E 04         A  6312    	CALL	_vdp_spriteAddFrameSelected
041A5B C1                  A  6313    	POP	BC
                           A  6314    ;  517	    vdp_spriteAddFrameSelected(156); //
                           A  6315    .LINE 517
                           A  6316    
041A5C 019C0000            A  6317    	LD	BC,156
041A60 C5                  A  6318    	PUSH	BC
041A61 CD 98 3E 04         A  6319    	CALL	_vdp_spriteAddFrameSelected
041A65 C1                  A  6320    	POP	BC
                           A  6321    ;  518	    vdp_spriteAddFrameSelected(157); //
                           A  6322    .LINE 518
                           A  6323    
041A66 019D0000            A  6324    	LD	BC,157
041A6A C5                  A  6325    	PUSH	BC
041A6B CD 98 3E 04         A  6326    	CALL	_vdp_spriteAddFrameSelected
041A6F C1                  A  6327    	POP	BC
                           A  6328    ;  519	    vdp_spriteHideSelected();
                           A  6329    .LINE 519
                           A  6330    
041A70 CD 2D 40 04         A  6331    	CALL	_vdp_spriteHideSelected
                           A  6332    ;  520	
                           A  6333    ;  521	    vdp_spriteClearFrames(SPRITE_SCORE1
                           A  6334    .LINE 521
                           A  6335    
041A74 01010000            A  6336    	LD	BC,1
041A78 C5                  A  6337    	PUSH	BC
041A79 CD 7B 3E 04         A  6338    	CALL	_vdp_spriteClearFrames
041A7D C1                  A  6339    	POP	BC
                           A  6340    ;  522	    vdp_spriteAddFrameSelected(148); //
                           A  6341    .LINE 522
                           A  6342    
041A7E 01940000            A  6343    	LD	BC,148
041A82 C5                  A  6344    	PUSH	BC
041A83 CD 98 3E 04         A  6345    	CALL	_vdp_spriteAddFrameSelected
041A87 C1                  A  6346    	POP	BC
                           A  6347    ;  523	    vdp_spriteAddFrameSelected(149); //
                           A  6348    .LINE 523
                           A  6349    
041A88 01950000            A  6350    	LD	BC,149
041A8C C5                  A  6351    	PUSH	BC
041A8D CD 98 3E 04         A  6352    	CALL	_vdp_spriteAddFrameSelected
041A91 C1                  A  6353    	POP	BC
                           A  6354    ;  524	    vdp_spriteAddFrameSelected(150); //
                           A  6355    .LINE 524
                           A  6356    
041A92 01960000            A  6357    	LD	BC,150
041A96 C5                  A  6358    	PUSH	BC
041A97 CD 98 3E 04         A  6359    	CALL	_vdp_spriteAddFrameSelected
041A9B C1                  A  6360    	POP	BC
                           A  6361    ;  525	    vdp_spriteAddFrameSelected(151); //
                           A  6362    .LINE 525
                           A  6363    
041A9C 01970000            A  6364    	LD	BC,151
041AA0 C5                  A  6365    	PUSH	BC
041AA1 CD 98 3E 04         A  6366    	CALL	_vdp_spriteAddFrameSelected
041AA5 C1                  A  6367    	POP	BC
                           A  6368    ;  526	    vdp_spriteAddFrameSelected(152); //
                           A  6369    .LINE 526
                           A  6370    
041AA6 01980000            A  6371    	LD	BC,152
041AAA C5                  A  6372    	PUSH	BC
041AAB CD 98 3E 04         A  6373    	CALL	_vdp_spriteAddFrameSelected
041AAF C1                  A  6374    	POP	BC
                           A  6375    ;  527	    vdp_spriteAddFrameSelected(153); //
                           A  6376    .LINE 527
                           A  6377    
041AB0 01990000            A  6378    	LD	BC,153
041AB4 C5                  A  6379    	PUSH	BC
041AB5 CD 98 3E 04         A  6380    	CALL	_vdp_spriteAddFrameSelected
041AB9 C1                  A  6381    	POP	BC
                           A  6382    ;  528	    vdp_spriteAddFrameSelected(154); //
                           A  6383    .LINE 528
                           A  6384    
041ABA 019A0000            A  6385    	LD	BC,154
041ABE C5                  A  6386    	PUSH	BC
041ABF CD 98 3E 04         A  6387    	CALL	_vdp_spriteAddFrameSelected
041AC3 C1                  A  6388    	POP	BC
                           A  6389    ;  529	    vdp_spriteAddFrameSelected(155); //
                           A  6390    .LINE 529
                           A  6391    
041AC4 019B0000            A  6392    	LD	BC,155
041AC8 C5                  A  6393    	PUSH	BC
041AC9 CD 98 3E 04         A  6394    	CALL	_vdp_spriteAddFrameSelected
041ACD C1                  A  6395    	POP	BC
                           A  6396    ;  530	    vdp_spriteAddFrameSelected(156); //
                           A  6397    .LINE 530
                           A  6398    
041ACE 019C0000            A  6399    	LD	BC,156
041AD2 C5                  A  6400    	PUSH	BC
041AD3 CD 98 3E 04         A  6401    	CALL	_vdp_spriteAddFrameSelected
041AD7 C1                  A  6402    	POP	BC
                           A  6403    ;  531	    vdp_spriteAddFrameSelected(157); //
                           A  6404    .LINE 531
                           A  6405    
041AD8 019D0000            A  6406    	LD	BC,157
041ADC C5                  A  6407    	PUSH	BC
041ADD CD 98 3E 04         A  6408    	CALL	_vdp_spriteAddFrameSelected
041AE1 C1                  A  6409    	POP	BC
                           A  6410    ;  532	    vdp_spriteHideSelected();
                           A  6411    .LINE 532
                           A  6412    
041AE2 CD 2D 40 04         A  6413    	CALL	_vdp_spriteHideSelected
                           A  6414    ;  533		
                           A  6415    ;  534	    vdp_spriteClearFrames(SPRITE_SCORE2
                           A  6416    .LINE 534
                           A  6417    
041AE6 01020000            A  6418    	LD	BC,2
041AEA C5                  A  6419    	PUSH	BC
041AEB CD 7B 3E 04         A  6420    	CALL	_vdp_spriteClearFrames
041AEF C1                  A  6421    	POP	BC
                           A  6422    ;  535	    vdp_spriteAddFrameSelected(148); //
                           A  6423    .LINE 535
                           A  6424    
041AF0 01940000            A  6425    	LD	BC,148
041AF4 C5                  A  6426    	PUSH	BC
041AF5 CD 98 3E 04         A  6427    	CALL	_vdp_spriteAddFrameSelected
041AF9 C1                  A  6428    	POP	BC
                           A  6429    ;  536	    vdp_spriteAddFrameSelected(149); //
                           A  6430    .LINE 536
                           A  6431    
041AFA 01950000            A  6432    	LD	BC,149
041AFE C5                  A  6433    	PUSH	BC
041AFF CD 98 3E 04         A  6434    	CALL	_vdp_spriteAddFrameSelected
041B03 C1                  A  6435    	POP	BC
                           A  6436    ;  537	    vdp_spriteAddFrameSelected(150); //
                           A  6437    .LINE 537
                           A  6438    
041B04 01960000            A  6439    	LD	BC,150
041B08 C5                  A  6440    	PUSH	BC
041B09 CD 98 3E 04         A  6441    	CALL	_vdp_spriteAddFrameSelected
041B0D C1                  A  6442    	POP	BC
                           A  6443    ;  538	    vdp_spriteAddFrameSelected(151); //
                           A  6444    .LINE 538
                           A  6445    
041B0E 01970000            A  6446    	LD	BC,151
041B12 C5                  A  6447    	PUSH	BC
041B13 CD 98 3E 04         A  6448    	CALL	_vdp_spriteAddFrameSelected
041B17 C1                  A  6449    	POP	BC
                           A  6450    ;  539	    vdp_spriteAddFrameSelected(152); //
                           A  6451    .LINE 539
                           A  6452    
041B18 01980000            A  6453    	LD	BC,152
041B1C C5                  A  6454    	PUSH	BC
041B1D CD 98 3E 04         A  6455    	CALL	_vdp_spriteAddFrameSelected
041B21 C1                  A  6456    	POP	BC
                           A  6457    ;  540	    vdp_spriteAddFrameSelected(153); //
                           A  6458    .LINE 540
                           A  6459    
041B22 01990000            A  6460    	LD	BC,153
041B26 C5                  A  6461    	PUSH	BC
041B27 CD 98 3E 04         A  6462    	CALL	_vdp_spriteAddFrameSelected
041B2B C1                  A  6463    	POP	BC
                           A  6464    ;  541	    vdp_spriteAddFrameSelected(154); //
                           A  6465    .LINE 541
                           A  6466    
041B2C 019A0000            A  6467    	LD	BC,154
041B30 C5                  A  6468    	PUSH	BC
041B31 CD 98 3E 04         A  6469    	CALL	_vdp_spriteAddFrameSelected
041B35 C1                  A  6470    	POP	BC
                           A  6471    ;  542	    vdp_spriteAddFrameSelected(155); //
                           A  6472    .LINE 542
                           A  6473    
041B36 019B0000            A  6474    	LD	BC,155
041B3A C5                  A  6475    	PUSH	BC
041B3B CD 98 3E 04         A  6476    	CALL	_vdp_spriteAddFrameSelected
041B3F C1                  A  6477    	POP	BC
                           A  6478    ;  543	    vdp_spriteAddFrameSelected(156); //
                           A  6479    .LINE 543
                           A  6480    
041B40 019C0000            A  6481    	LD	BC,156
041B44 C5                  A  6482    	PUSH	BC
041B45 CD 98 3E 04         A  6483    	CALL	_vdp_spriteAddFrameSelected
041B49 C1                  A  6484    	POP	BC
                           A  6485    ;  544	    vdp_spriteAddFrameSelected(157); //
                           A  6486    .LINE 544
                           A  6487    
041B4A 019D0000            A  6488    	LD	BC,157
041B4E C5                  A  6489    	PUSH	BC
041B4F CD 98 3E 04         A  6490    	CALL	_vdp_spriteAddFrameSelected
041B53 C1                  A  6491    	POP	BC
                           A  6492    ;  545	    vdp_spriteHideSelected();	
                           A  6493    .LINE 545
                           A  6494    
041B54 CD 2D 40 04         A  6495    	CALL	_vdp_spriteHideSelected
                           A  6496    ;  546	
                           A  6497    ;  547	}
                           A  6498    .LINE 547
                           A  6499    
041B58 DDF9                A  6500    	LD	SP,IX
041B5A DDE1                A  6501    	POP	IX
041B5C C9                  A  6502    	RET	
                           A  6503    
                           A  6504    
                           A  6505    ;**************************** _setup_text_sprit
                           A  6506    ;Name                         Addr/Register   S
                           A  6507    ;_vdp_spriteHideSelected             IMPORT  --
                           A  6508    ;_vdp_spriteAddFrameSelected         IMPORT  --
                           A  6509    ;_vdp_spriteClearFrames              IMPORT  --
                           A  6510    
                           A  6511    
                           A  6512    ; Stack Frame Size: 6 (bytes)
                           A  6513    ;       Spill Code: -3 (instruction)
                           A  6514    
                           A  6515    
                           A  6516    .ENDFUNC "setup_text_sprites",547,"_setup_text_
                           A  6517    ;  548	
                           A  6518    ;  549	void draw_bottom_frame() {
041B5D                     A  6519    _draw_bottom_frame:
                           A  6520    .DEFINE "_draw_bottom_frame"
                           A  6521    
                           A  6522    .VALUE _draw_bottom_frame
                           A  6523    
                           A  6524    .CLASS 2
                           A  6525    
                           A  6526    .TYPE 65
                           A  6527    
                           A  6528    .ENDEF
                           A  6529    
                           A  6530    .BEGFUNC "draw_bottom_frame",549,"_draw_bottom_
                           A  6531    
                           A  6532    .LINE 549
                           A  6533    
                           A  6534    .DEFINE "i"
                           A  6535    
                           A  6536    .CLASS 65
                           A  6537    
                           A  6538    .VALUE -1
                           A  6539    
                           A  6540    .TYPE 12
                           A  6541    
                           A  6542    .ENDEF
                           A  6543    
041B5D DDE5                A  6544    	PUSH	IX
041B5F DD210000 00         A  6545    	LD	IX,0
041B64 DD39                A  6546    	ADD	IX,SP
041B66 3B                  A  6547    	DEC	SP
                           A  6548    ;  550	
                           A  6549    ;  551	    uint8_t i;
                           A  6550    ;  552	    vdp_bitmapDraw(FRAME_NW, 0, game.sc
                           A  6551    .LINE 552
                           A  6552    
041B67 FD2A 7F 5E 04       A  6553    	LD	IY,(_game+2)
041B6C ED03F0              A  6554    	LEA	BC,IY+%FFFFFFF0
041B6F C5                  A  6555    	PUSH	BC
041B70 01000000            A  6556    	LD	BC,0
041B74 C5                  A  6557    	PUSH	BC
041B75 01780000            A  6558    	LD	BC,120
041B79 C5                  A  6559    	PUSH	BC
041B7A CD 6E 3D 04         A  6560    	CALL	_vdp_bitmapDraw
041B7E C1                  A  6561    	POP	BC
041B7F C1                  A  6562    	POP	BC
041B80 C1                  A  6563    	POP	BC
                           A  6564    ;  553	    vdp_bitmapDraw(FRAME_NE, game.scree
                           A  6565    .LINE 553
                           A  6566    
041B81 FD2A 7F 5E 04       A  6567    	LD	IY,(_game+2)
041B86 ED03F0              A  6568    	LEA	BC,IY+%FFFFFFF0
041B89 C5                  A  6569    	PUSH	BC
041B8A FD2A 7D 5E 04       A  6570    	LD	IY,(_game)
041B8F ED03F8              A  6571    	LEA	BC,IY+%FFFFFFF8
041B92 C5                  A  6572    	PUSH	BC
041B93 017A0000            A  6573    	LD	BC,122
041B97 C5                  A  6574    	PUSH	BC
041B98 CD 6E 3D 04         A  6575    	CALL	_vdp_bitmapDraw
041B9C C1                  A  6576    	POP	BC
041B9D C1                  A  6577    	POP	BC
041B9E C1                  A  6578    	POP	BC
                           A  6579    ;  554	    vdp_bitmapDraw(FRAME_SW, 0, game.sc
                           A  6580    .LINE 554
                           A  6581    
041B9F FD2A 7F 5E 04       A  6582    	LD	IY,(_game+2)
041BA4 ED03F8              A  6583    	LEA	BC,IY+%FFFFFFF8
041BA7 C5                  A  6584    	PUSH	BC
041BA8 01000000            A  6585    	LD	BC,0
041BAC C5                  A  6586    	PUSH	BC
041BAD 017E0000            A  6587    	LD	BC,126
041BB1 C5                  A  6588    	PUSH	BC
041BB2 CD 6E 3D 04         A  6589    	CALL	_vdp_bitmapDraw
041BB6 C1                  A  6590    	POP	BC
041BB7 C1                  A  6591    	POP	BC
041BB8 C1                  A  6592    	POP	BC
                           A  6593    ;  555	    vdp_bitmapDraw(FRAME_SE, game.scree
                           A  6594    .LINE 555
                           A  6595    
041BB9 FD2A 7F 5E 04       A  6596    	LD	IY,(_game+2)
041BBE ED03F8              A  6597    	LEA	BC,IY+%FFFFFFF8
041BC1 C5                  A  6598    	PUSH	BC
041BC2 FD2A 7D 5E 04       A  6599    	LD	IY,(_game)
041BC7 ED03F8              A  6600    	LEA	BC,IY+%FFFFFFF8
041BCA C5                  A  6601    	PUSH	BC
041BCB 017C0000            A  6602    	LD	BC,124
041BCF C5                  A  6603    	PUSH	BC
041BD0 CD 6E 3D 04         A  6604    	CALL	_vdp_bitmapDraw
041BD4 C1                  A  6605    	POP	BC
041BD5 C1                  A  6606    	POP	BC
041BD6 C1                  A  6607    	POP	BC
                           A  6608    ;  556	
                           A  6609    ;  557	    for (i = 1; i < ((game.screen_width
                           A  6610    .LINE 557
                           A  6611    
041BD7 DD36FF01            A  6612    	LD	(IX+%FFFFFFFF),%1
041BDB 18 43               A  6613    	JR	L_181
041BDD                     A  6614    L_179:
                           A  6615    ;  558	
                           A  6616    ;  559	        vdp_bitmapDraw(FRAME_N, 8 * i, 
                           A  6617    .LINE 559
                           A  6618    
041BDD FD2A 7F 5E 04       A  6619    	LD	IY,(_game+2)
041BE2 ED03F0              A  6620    	LEA	BC,IY+%FFFFFFF0
041BE5 C5                  A  6621    	PUSH	BC
041BE6 DD4EFF              A  6622    	LD	C,(IX+%FFFFFFFF)
041BE9 0600                A  6623    	LD	B,%0
041BEB C5E1                A  6624    	LD	HL,BC
041BED 29                  A  6625    	ADD	HL,HL
041BEE 29                  A  6626    	ADD	HL,HL
041BEF 29                  A  6627    	ADD	HL,HL
041BF0 E5                  A  6628    	PUSH	HL
041BF1 01790000            A  6629    	LD	BC,121
041BF5 C5                  A  6630    	PUSH	BC
041BF6 CD 6E 3D 04         A  6631    	CALL	_vdp_bitmapDraw
041BFA C1                  A  6632    	POP	BC
041BFB C1                  A  6633    	POP	BC
041BFC C1                  A  6634    	POP	BC
                           A  6635    ;  560	        vdp_bitmapDraw(FRAME_S, 8 * i, 
                           A  6636    .LINE 560
                           A  6637    
041BFD FD2A 7F 5E 04       A  6638    	LD	IY,(_game+2)
041C02 ED03F8              A  6639    	LEA	BC,IY+%FFFFFFF8
041C05 C5                  A  6640    	PUSH	BC
041C06 DD4EFF              A  6641    	LD	C,(IX+%FFFFFFFF)
041C09 0600                A  6642    	LD	B,%0
041C0B C5E1                A  6643    	LD	HL,BC
041C0D 29                  A  6644    	ADD	HL,HL
041C0E 29                  A  6645    	ADD	HL,HL
041C0F 29                  A  6646    	ADD	HL,HL
041C10 E5                  A  6647    	PUSH	HL
041C11 017D0000            A  6648    	LD	BC,125
041C15 C5                  A  6649    	PUSH	BC
041C16 CD 6E 3D 04         A  6650    	CALL	_vdp_bitmapDraw
041C1A C1                  A  6651    	POP	BC
041C1B C1                  A  6652    	POP	BC
041C1C C1                  A  6653    	POP	BC
041C1D DD34FF              A  6654    	INC	(IX+%FFFFFFFF)
                           A  6655    ;  561	
                           A  6656    ;  562	    }
041C20                     A  6657    L_181:
                           A  6658    .LINE 562
                           A  6659    
041C20 ED4B 7D 5E 04       A  6660    	LD	BC,(_game)
041C25 CD 9B 4D 04         A  6661    	CALL	__stoiu
041C29 E5FDE1              A  6662    	LD	IY,HL
041C2C ED23F0              A  6663    	LEA	HL,IY+%FFFFFFF0
041C2F 01080000            A  6664    	LD	BC,8
041C33 CD 2B 50 04         A  6665    	CALL	__idivs
041C37 E5C1                A  6666    	LD	BC,HL
041C39 03                  A  6667    	INC	BC
041C3A DD7EFF              A  6668    	LD	A,(IX+%FFFFFFFF)
041C3D B7ED62              A  6669    	UEXT	HL
041C40 6F                  A  6670    	LD	L,A
041C41 B7                  A  6671    	OR	A,A
041C42 ED42                A  6672    	SBC	HL,BC
041C44 FA 4E 1C 04         A  6673    	JP	M,L__165
041C48 EA DD 1B 04         A  6674    	JP	PE,L_179
041C4C 18 04               A  6675    	JR	L__166
041C4E                     A  6676    L__165:
041C4E E2 DD 1B 04         A  6677    	JP	PO,L_179
041C52                     A  6678    L__166:
                           A  6679    ;  563	
                           A  6680    ;  564	}
                           A  6681    .LINE 564
                           A  6682    
041C52 DDF9                A  6683    	LD	SP,IX
041C54 DDE1                A  6684    	POP	IX
041C56 C9                  A  6685    	RET	
                           A  6686    
                           A  6687    
                           A  6688    ;**************************** _draw_bottom_fram
                           A  6689    ;Name                         Addr/Register   S
                           A  6690    ;_game                               STATIC   1
                           A  6691    ;_vdp_bitmapDraw                     IMPORT  --
                           A  6692    ;i                                     IX-1    
                           A  6693    
                           A  6694    
                           A  6695    ; Stack Frame Size: 7 (bytes)
                           A  6696    ;       Spill Code: -3 (instruction)
                           A  6697    
                           A  6698    
                           A  6699    .ENDFUNC "draw_bottom_frame",564,"_draw_bottom_
                           A  6700    ;  565	
                           A  6701    ;  566	void draw_top_frame() {
041C57                     A  6702    _draw_top_frame:
                           A  6703    .DEFINE "_draw_top_frame"
                           A  6704    
                           A  6705    .VALUE _draw_top_frame
                           A  6706    
                           A  6707    .CLASS 2
                           A  6708    
                           A  6709    .TYPE 65
                           A  6710    
                           A  6711    .ENDEF
                           A  6712    
                           A  6713    .BEGFUNC "draw_top_frame",566,"_draw_top_frame"
                           A  6714    
                           A  6715    .LINE 566
                           A  6716    
                           A  6717    .DEFINE "i"
                           A  6718    
                           A  6719    .CLASS 65
                           A  6720    
                           A  6721    .VALUE -1
                           A  6722    
                           A  6723    .TYPE 12
                           A  6724    
                           A  6725    .ENDEF
                           A  6726    
041C57 DDE5                A  6727    	PUSH	IX
041C59 DD210000 00         A  6728    	LD	IX,0
041C5E DD39                A  6729    	ADD	IX,SP
041C60 3B                  A  6730    	DEC	SP
                           A  6731    ;  567	
                           A  6732    ;  568	    uint8_t i;
                           A  6733    ;  569	    vdp_bitmapDraw(FRAME_NW, 0, 0);
                           A  6734    .LINE 569
                           A  6735    
041C61 01000000            A  6736    	LD	BC,0
041C65 C5                  A  6737    	PUSH	BC
041C66 C5                  A  6738    	PUSH	BC
041C67 01780000            A  6739    	LD	BC,120
041C6B C5                  A  6740    	PUSH	BC
041C6C CD 6E 3D 04         A  6741    	CALL	_vdp_bitmapDraw
041C70 C1                  A  6742    	POP	BC
041C71 C1                  A  6743    	POP	BC
041C72 C1                  A  6744    	POP	BC
                           A  6745    ;  570	    vdp_bitmapDraw(FRAME_NE, game.scree
                           A  6746    .LINE 570
                           A  6747    
041C73 01000000            A  6748    	LD	BC,0
041C77 C5                  A  6749    	PUSH	BC
041C78 FD2A 7D 5E 04       A  6750    	LD	IY,(_game)
041C7D ED03F8              A  6751    	LEA	BC,IY+%FFFFFFF8
041C80 C5                  A  6752    	PUSH	BC
041C81 017A0000            A  6753    	LD	BC,122
041C85 C5                  A  6754    	PUSH	BC
041C86 CD 6E 3D 04         A  6755    	CALL	_vdp_bitmapDraw
041C8A C1                  A  6756    	POP	BC
041C8B C1                  A  6757    	POP	BC
041C8C C1                  A  6758    	POP	BC
                           A  6759    ;  571	    vdp_bitmapDraw(FRAME_SW, 0, 8);
                           A  6760    .LINE 571
                           A  6761    
041C8D 01080000            A  6762    	LD	BC,8
041C91 C5                  A  6763    	PUSH	BC
041C92 01000000            A  6764    	LD	BC,0
041C96 C5                  A  6765    	PUSH	BC
041C97 017E0000            A  6766    	LD	BC,126
041C9B C5                  A  6767    	PUSH	BC
041C9C CD 6E 3D 04         A  6768    	CALL	_vdp_bitmapDraw
041CA0 C1                  A  6769    	POP	BC
041CA1 C1                  A  6770    	POP	BC
041CA2 C1                  A  6771    	POP	BC
                           A  6772    ;  572	    vdp_bitmapDraw(FRAME_SE, game.scree
                           A  6773    .LINE 572
                           A  6774    
041CA3 01080000            A  6775    	LD	BC,8
041CA7 C5                  A  6776    	PUSH	BC
041CA8 FD2A 7D 5E 04       A  6777    	LD	IY,(_game)
041CAD ED03F8              A  6778    	LEA	BC,IY+%FFFFFFF8
041CB0 C5                  A  6779    	PUSH	BC
041CB1 017C0000            A  6780    	LD	BC,124
041CB5 C5                  A  6781    	PUSH	BC
041CB6 CD 6E 3D 04         A  6782    	CALL	_vdp_bitmapDraw
041CBA C1                  A  6783    	POP	BC
041CBB C1                  A  6784    	POP	BC
041CBC C1                  A  6785    	POP	BC
                           A  6786    ;  573	
                           A  6787    ;  574	    for (i = 1; i < ((game.screen_width
                           A  6788    .LINE 574
                           A  6789    
041CBD DD36FF01            A  6790    	LD	(IX+%FFFFFFFF),%1
041CC1 18 3B               A  6791    	JR	L_186
041CC3                     A  6792    L_184:
                           A  6793    ;  575	
                           A  6794    ;  576	        vdp_bitmapDraw(FRAME_N, 8 * i, 
                           A  6795    .LINE 576
                           A  6796    
041CC3 01000000            A  6797    	LD	BC,0
041CC7 C5                  A  6798    	PUSH	BC
041CC8 DD4EFF              A  6799    	LD	C,(IX+%FFFFFFFF)
041CCB 0600                A  6800    	LD	B,%0
041CCD C5E1                A  6801    	LD	HL,BC
041CCF 29                  A  6802    	ADD	HL,HL
041CD0 29                  A  6803    	ADD	HL,HL
041CD1 29                  A  6804    	ADD	HL,HL
041CD2 E5                  A  6805    	PUSH	HL
041CD3 01790000            A  6806    	LD	BC,121
041CD7 C5                  A  6807    	PUSH	BC
041CD8 CD 6E 3D 04         A  6808    	CALL	_vdp_bitmapDraw
041CDC C1                  A  6809    	POP	BC
041CDD C1                  A  6810    	POP	BC
041CDE C1                  A  6811    	POP	BC
                           A  6812    ;  577	        vdp_bitmapDraw(FRAME_S, 8 * i, 
                           A  6813    .LINE 577
                           A  6814    
041CDF 01080000            A  6815    	LD	BC,8
041CE3 C5                  A  6816    	PUSH	BC
041CE4 DD4EFF              A  6817    	LD	C,(IX+%FFFFFFFF)
041CE7 0600                A  6818    	LD	B,%0
041CE9 C5E1                A  6819    	LD	HL,BC
041CEB 29                  A  6820    	ADD	HL,HL
041CEC 29                  A  6821    	ADD	HL,HL
041CED 29                  A  6822    	ADD	HL,HL
041CEE E5                  A  6823    	PUSH	HL
041CEF 017D0000            A  6824    	LD	BC,125
041CF3 C5                  A  6825    	PUSH	BC
041CF4 CD 6E 3D 04         A  6826    	CALL	_vdp_bitmapDraw
041CF8 C1                  A  6827    	POP	BC
041CF9 C1                  A  6828    	POP	BC
041CFA C1                  A  6829    	POP	BC
041CFB DD34FF              A  6830    	INC	(IX+%FFFFFFFF)
                           A  6831    ;  578	
                           A  6832    ;  579	    }
041CFE                     A  6833    L_186:
                           A  6834    .LINE 579
                           A  6835    
041CFE ED4B 7D 5E 04       A  6836    	LD	BC,(_game)
041D03 CD 9B 4D 04         A  6837    	CALL	__stoiu
041D07 E5FDE1              A  6838    	LD	IY,HL
041D0A ED23F0              A  6839    	LEA	HL,IY+%FFFFFFF0
041D0D 01080000            A  6840    	LD	BC,8
041D11 CD 2B 50 04         A  6841    	CALL	__idivs
041D15 E5C1                A  6842    	LD	BC,HL
041D17 03                  A  6843    	INC	BC
041D18 DD7EFF              A  6844    	LD	A,(IX+%FFFFFFFF)
041D1B B7ED62              A  6845    	UEXT	HL
041D1E 6F                  A  6846    	LD	L,A
041D1F B7                  A  6847    	OR	A,A
041D20 ED42                A  6848    	SBC	HL,BC
041D22 FA 2C 1D 04         A  6849    	JP	M,L__169
041D26 EA C3 1C 04         A  6850    	JP	PE,L_184
041D2A 18 04               A  6851    	JR	L__170
041D2C                     A  6852    L__169:
041D2C E2 C3 1C 04         A  6853    	JP	PO,L_184
041D30                     A  6854    L__170:
                           A  6855    ;  580	
                           A  6856    ;  581	}
                           A  6857    .LINE 581
                           A  6858    
041D30 DDF9                A  6859    	LD	SP,IX
041D32 DDE1                A  6860    	POP	IX
041D34 C9                  A  6861    	RET	
                           A  6862    
                           A  6863    
                           A  6864    ;**************************** _draw_top_frame *
                           A  6865    ;Name                         Addr/Register   S
                           A  6866    ;_game                               STATIC   1
                           A  6867    ;_vdp_bitmapDraw                     IMPORT  --
                           A  6868    ;i                                     IX-1    
                           A  6869    
                           A  6870    
                           A  6871    ; Stack Frame Size: 7 (bytes)
                           A  6872    ;       Spill Code: -3 (instruction)
                           A  6873    
                           A  6874    
                           A  6875    .ENDFUNC "draw_top_frame",581,"_draw_top_frame"
                           A  6876    ;  582	
                           A  6877    ;  583	void show_score() {
041D35                     A  6878    _show_score:
                           A  6879    .DEFINE "_show_score"
                           A  6880    
                           A  6881    .VALUE _show_score
                           A  6882    
                           A  6883    .CLASS 2
                           A  6884    
                           A  6885    .TYPE 65
                           A  6886    
                           A  6887    .ENDEF
                           A  6888    
                           A  6889    .BEGFUNC "show_score",583,"_show_score"
                           A  6890    
041D35 DDE5                A  6891    	PUSH	IX
041D37 DD210000 00         A  6892    	LD	IX,0
041D3C DD39                A  6893    	ADD	IX,SP
                           A  6894    ;  584	
                           A  6895    ;  585	    vdp_spriteSetFrame(SPRITE_SCORE0, g
                           A  6896    .LINE 585
                           A  6897    
041D3E 3A 89 5E 04         A  6898    	LD	A,(_game+12)
041D42 B7ED62              A  6899    	UEXT	HL
041D45 6F                  A  6900    	LD	L,A
041D46 01640000            A  6901    	LD	BC,100
041D4A CD 2B 50 04         A  6902    	CALL	__idivs
041D4E 4D                  A  6903    	LD	C,L
041D4F 0600                A  6904    	LD	B,%0
041D51 C5                  A  6905    	PUSH	BC
041D52 01000000            A  6906    	LD	BC,0
041D56 C5                  A  6907    	PUSH	BC
041D57 CD C0 3F 04         A  6908    	CALL	_vdp_spriteSetFrame
041D5B C1                  A  6909    	POP	BC
041D5C C1                  A  6910    	POP	BC
                           A  6911    ;  586	    vdp_spriteSetFrame(SPRITE_SCORE1, (
                           A  6912    .LINE 586
                           A  6913    
041D5D 3A 89 5E 04         A  6914    	LD	A,(_game+12)
041D61 B7ED62              A  6915    	UEXT	HL
041D64 6F                  A  6916    	LD	L,A
041D65 01640000            A  6917    	LD	BC,100
041D69 CD B9 4B 04         A  6918    	CALL	__irems
041D6D 010A0000            A  6919    	LD	BC,10
041D71 CD 2B 50 04         A  6920    	CALL	__idivs
041D75 4D                  A  6921    	LD	C,L
041D76 0600                A  6922    	LD	B,%0
041D78 C5                  A  6923    	PUSH	BC
041D79 01010000            A  6924    	LD	BC,1
041D7D C5                  A  6925    	PUSH	BC
041D7E CD C0 3F 04         A  6926    	CALL	_vdp_spriteSetFrame
041D82 C1                  A  6927    	POP	BC
041D83 C1                  A  6928    	POP	BC
                           A  6929    ;  587		vdp_spriteSetFrame(SPRITE_SCORE2, g
                           A  6930    .LINE 587
                           A  6931    
041D84 3A 89 5E 04         A  6932    	LD	A,(_game+12)
041D88 B7ED62              A  6933    	UEXT	HL
041D8B 6F                  A  6934    	LD	L,A
041D8C 010A0000            A  6935    	LD	BC,10
041D90 CD B9 4B 04         A  6936    	CALL	__irems
041D94 4D                  A  6937    	LD	C,L
041D95 0600                A  6938    	LD	B,%0
041D97 C5                  A  6939    	PUSH	BC
041D98 01020000            A  6940    	LD	BC,2
041D9C C5                  A  6941    	PUSH	BC
041D9D CD C0 3F 04         A  6942    	CALL	_vdp_spriteSetFrame
041DA1 C1                  A  6943    	POP	BC
041DA2 C1                  A  6944    	POP	BC
                           A  6945    ;  588	
                           A  6946    ;  589	}
                           A  6947    .LINE 589
                           A  6948    
041DA3 DDF9                A  6949    	LD	SP,IX
041DA5 DDE1                A  6950    	POP	IX
041DA7 C9                  A  6951    	RET	
                           A  6952    
                           A  6953    
                           A  6954    ;**************************** _show_score *****
                           A  6955    ;Name                         Addr/Register   S
                           A  6956    ;_game                               STATIC   1
                           A  6957    ;_vdp_spriteSetFrame                 IMPORT  --
                           A  6958    
                           A  6959    
                           A  6960    ; Stack Frame Size: 6 (bytes)
                           A  6961    ;       Spill Code: -3 (instruction)
                           A  6962    
                           A  6963    
                           A  6964    .ENDFUNC "show_score",589,"_show_score"
                           A  6965    ;  590	
                           A  6966    ;  591	void change_score() {
041DA8                     A  6967    _change_score:
                           A  6968    .DEFINE "_change_score"
                           A  6969    
                           A  6970    .VALUE _change_score
                           A  6971    
                           A  6972    .CLASS 2
                           A  6973    
                           A  6974    .TYPE 65
                           A  6975    
                           A  6976    .ENDEF
                           A  6977    
                           A  6978    .BEGFUNC "change_score",591,"_change_score"
                           A  6979    
041DA8 DDE5                A  6980    	PUSH	IX
041DAA DD210000 00         A  6981    	LD	IX,0
041DAF DD39                A  6982    	ADD	IX,SP
                           A  6983    ;  592	
                           A  6984    ;  593	    if (game.score + 1 > 100) game.scor
                           A  6985    .LINE 593
                           A  6986    
041DB1 3A 89 5E 04         A  6987    	LD	A,(_game+12)
041DB5 B7ED62              A  6988    	UEXT	HL
041DB8 6F                  A  6989    	LD	L,A
041DB9 E5C1                A  6990    	LD	BC,HL
041DBB 03                  A  6991    	INC	BC
041DBC 21640000            A  6992    	LD	HL,100
041DC0 B7                  A  6993    	OR	A,A
041DC1 ED42                A  6994    	SBC	HL,BC
041DC3 F2 CD 1D 04         A  6995    	JP	P,L__174
041DC7 EA D9 1D 04         A  6996    	JP	PE,L_191
041DCB 18 04               A  6997    	JR	L__175
041DCD                     A  6998    L__174:
041DCD E2 D9 1D 04         A  6999    	JP	PO,L_191
041DD1                     A  7000    L__175:
041DD1 3E64                A  7001    	LD	A,%64
041DD3 32 89 5E 04         A  7002    	LD	(_game+12),A
                           A  7003    ;  594	    else game.score++;
                           A  7004    .LINE 594
                           A  7005    
041DD7 18 09               A  7006    	JR	L_192
041DD9                     A  7007    L_191:
041DD9 3A 89 5E 04         A  7008    	LD	A,(_game+12)
041DDD 3C                  A  7009    	INC	A
041DDE 32 89 5E 04         A  7010    	LD	(_game+12),A
041DE2                     A  7011    L_192:
                           A  7012    ;  595	    vdp_spriteSetFrame(SPRITE_SCORE0, g
                           A  7013    .LINE 595
                           A  7014    
041DE2 3A 89 5E 04         A  7015    	LD	A,(_game+12)
041DE6 B7ED62              A  7016    	UEXT	HL
041DE9 6F                  A  7017    	LD	L,A
041DEA 01640000            A  7018    	LD	BC,100
041DEE CD 2B 50 04         A  7019    	CALL	__idivs
041DF2 4D                  A  7020    	LD	C,L
041DF3 0600                A  7021    	LD	B,%0
041DF5 C5                  A  7022    	PUSH	BC
041DF6 01000000            A  7023    	LD	BC,0
041DFA C5                  A  7024    	PUSH	BC
041DFB CD C0 3F 04         A  7025    	CALL	_vdp_spriteSetFrame
041DFF C1                  A  7026    	POP	BC
041E00 C1                  A  7027    	POP	BC
                           A  7028    ;  596	    vdp_spriteSetFrame(SPRITE_SCORE1, (
                           A  7029    .LINE 596
                           A  7030    
041E01 3A 89 5E 04         A  7031    	LD	A,(_game+12)
041E05 B7ED62              A  7032    	UEXT	HL
041E08 6F                  A  7033    	LD	L,A
041E09 01640000            A  7034    	LD	BC,100
041E0D CD B9 4B 04         A  7035    	CALL	__irems
041E11 010A0000            A  7036    	LD	BC,10
041E15 CD 2B 50 04         A  7037    	CALL	__idivs
041E19 4D                  A  7038    	LD	C,L
041E1A 0600                A  7039    	LD	B,%0
041E1C C5                  A  7040    	PUSH	BC
041E1D 01010000            A  7041    	LD	BC,1
041E21 C5                  A  7042    	PUSH	BC
041E22 CD C0 3F 04         A  7043    	CALL	_vdp_spriteSetFrame
041E26 C1                  A  7044    	POP	BC
041E27 C1                  A  7045    	POP	BC
                           A  7046    ;  597		vdp_spriteSetFrame(SPRITE_SCORE2, g
                           A  7047    .LINE 597
                           A  7048    
041E28 3A 89 5E 04         A  7049    	LD	A,(_game+12)
041E2C B7ED62              A  7050    	UEXT	HL
041E2F 6F                  A  7051    	LD	L,A
041E30 010A0000            A  7052    	LD	BC,10
041E34 CD B9 4B 04         A  7053    	CALL	__irems
041E38 4D                  A  7054    	LD	C,L
041E39 0600                A  7055    	LD	B,%0
041E3B C5                  A  7056    	PUSH	BC
041E3C 01020000            A  7057    	LD	BC,2
041E40 C5                  A  7058    	PUSH	BC
041E41 CD C0 3F 04         A  7059    	CALL	_vdp_spriteSetFrame
041E45 C1                  A  7060    	POP	BC
041E46 C1                  A  7061    	POP	BC
                           A  7062    ;  598	
                           A  7063    ;  599	}
                           A  7064    .LINE 599
                           A  7065    
041E47 DDF9                A  7066    	LD	SP,IX
041E49 DDE1                A  7067    	POP	IX
041E4B C9                  A  7068    	RET	
                           A  7069    
                           A  7070    
                           A  7071    ;**************************** _change_score ***
                           A  7072    ;Name                         Addr/Register   S
                           A  7073    ;_vdp_spriteSetFrame                 IMPORT  --
                           A  7074    ;_game                               STATIC   1
                           A  7075    
                           A  7076    
                           A  7077    ; Stack Frame Size: 6 (bytes)
                           A  7078    ;       Spill Code: -3 (instruction)
                           A  7079    
                           A  7080    
                           A  7081    .ENDFUNC "change_score",599,"_change_score"
                           A  7082    ;  600	
                           A  7083    ;  601	bool check_collision(Rect rect1, Rect r
041E4C                     A  7084    _check_collision:
                           A  7085    .DEFINE "_check_collision"
                           A  7086    
                           A  7087    .VALUE _check_collision
                           A  7088    
                           A  7089    .CLASS 2
                           A  7090    
                           A  7091    .TYPE 76
                           A  7092    
                           A  7093    .ENDEF
                           A  7094    
                           A  7095    .BEGFUNC "check_collision",601,"_check_collisio
                           A  7096    
                           A  7097    .LINE 601
                           A  7098    
                           A  7099    .DEFINE "rect1"
                           A  7100    
                           A  7101    .CLASS 65
                           A  7102    
                           A  7103    .VALUE 6
                           A  7104    
                           A  7105    .TAG "NONAME6"
                           A  7106    
                           A  7107    .TYPE 8
                           A  7108    
                           A  7109    .ENDEF
                           A  7110    
                           A  7111    .DEFINE "rect2"
                           A  7112    
                           A  7113    .CLASS 65
                           A  7114    
                           A  7115    .VALUE 15
                           A  7116    
                           A  7117    .TAG "NONAME6"
                           A  7118    
                           A  7119    .TYPE 8
                           A  7120    
                           A  7121    .ENDEF
                           A  7122    
                           A  7123    .DEFINE "rect1Left"
                           A  7124    
                           A  7125    .CLASS 65
                           A  7126    
                           A  7127    .VALUE -3
                           A  7128    
                           A  7129    .TYPE 4
                           A  7130    
                           A  7131    .ENDEF
                           A  7132    
                           A  7133    .DEFINE "rect1Right"
                           A  7134    
                           A  7135    .CLASS 65
                           A  7136    
                           A  7137    .VALUE -6
                           A  7138    
                           A  7139    .TYPE 4
                           A  7140    
                           A  7141    .ENDEF
                           A  7142    
                           A  7143    .DEFINE "rect1Top"
                           A  7144    
                           A  7145    .CLASS 65
                           A  7146    
                           A  7147    .VALUE -9
                           A  7148    
                           A  7149    .TYPE 4
                           A  7150    
                           A  7151    .ENDEF
                           A  7152    
                           A  7153    .DEFINE "rect1Bottom"
                           A  7154    
                           A  7155    .CLASS 65
                           A  7156    
                           A  7157    .VALUE -12
                           A  7158    
                           A  7159    .TYPE 4
                           A  7160    
                           A  7161    .ENDEF
                           A  7162    
                           A  7163    .DEFINE "rect2Left"
                           A  7164    
                           A  7165    .CLASS 65
                           A  7166    
                           A  7167    .VALUE -15
                           A  7168    
                           A  7169    .TYPE 4
                           A  7170    
                           A  7171    .ENDEF
                           A  7172    
                           A  7173    .DEFINE "rect2Right"
                           A  7174    
                           A  7175    .CLASS 65
                           A  7176    
                           A  7177    .VALUE -18
                           A  7178    
                           A  7179    .TYPE 4
                           A  7180    
                           A  7181    .ENDEF
                           A  7182    
                           A  7183    .DEFINE "rect2Top"
                           A  7184    
                           A  7185    .CLASS 65
                           A  7186    
                           A  7187    .VALUE -21
                           A  7188    
                           A  7189    .TYPE 4
                           A  7190    
                           A  7191    .ENDEF
                           A  7192    
                           A  7193    .DEFINE "rect2Bottom"
                           A  7194    
                           A  7195    .CLASS 65
                           A  7196    
                           A  7197    .VALUE -24
                           A  7198    
                           A  7199    .TYPE 4
                           A  7200    
                           A  7201    .ENDEF
                           A  7202    
041E4C DDE5                A  7203    	PUSH	IX
041E4E DD210000 00         A  7204    	LD	IX,0
041E53 DD39                A  7205    	ADD	IX,SP
041E55 ED22E8              A  7206    	LEA	HL,IX+%FFFFFFE8
041E58 F9                  A  7207    	LD	SP,HL
                           A  7208    ;  602	    // Calculate the coordinates of the
                           A  7209    ;  603	    int rect1Left = rect1.x;
                           A  7210    .LINE 603
                           A  7211    
041E59 DD0706              A  7212    	LD	BC,(IX+%6)
041E5C CD 9B 4D 04         A  7213    	CALL	__stoiu
041E60 DD2FFD              A  7214    	LD	(IX+%FFFFFFFD),HL
                           A  7215    ;  604	    int rect1Right = rect1.x + rect1.wi
                           A  7216    .LINE 604
                           A  7217    
041E63 DD0706              A  7218    	LD	BC,(IX+%6)
041E66 CD 9B 4D 04         A  7219    	CALL	__stoiu
041E6A E5D1                A  7220    	LD	DE,HL
041E6C DD070A              A  7221    	LD	BC,(IX+%A)
041E6F CD 9B 4D 04         A  7222    	CALL	__stoiu
041E73 19                  A  7223    	ADD	HL,DE
041E74 DD2FFA              A  7224    	LD	(IX+%FFFFFFFA),HL
                           A  7225    ;  605	    int rect1Top = rect1.y;
                           A  7226    .LINE 605
                           A  7227    
041E77 DD0708              A  7228    	LD	BC,(IX+%8)
041E7A CD 9B 4D 04         A  7229    	CALL	__stoiu
041E7E DD2FF7              A  7230    	LD	(IX+%FFFFFFF7),HL
                           A  7231    ;  606	    int rect1Bottom = rect1.y + rect1.h
                           A  7232    .LINE 606
                           A  7233    
041E81 DD0708              A  7234    	LD	BC,(IX+%8)
041E84 CD 9B 4D 04         A  7235    	CALL	__stoiu
041E88 E5D1                A  7236    	LD	DE,HL
041E8A DD070C              A  7237    	LD	BC,(IX+%C)
041E8D CD 9B 4D 04         A  7238    	CALL	__stoiu
041E91 19                  A  7239    	ADD	HL,DE
041E92 DD2FF4              A  7240    	LD	(IX+%FFFFFFF4),HL
                           A  7241    ;  607	    
                           A  7242    ;  608	    int rect2Left = rect2.x;
                           A  7243    .LINE 608
                           A  7244    
041E95 DD070F              A  7245    	LD	BC,(IX+%F)
041E98 CD 9B 4D 04         A  7246    	CALL	__stoiu
041E9C DD2FF1              A  7247    	LD	(IX+%FFFFFFF1),HL
                           A  7248    ;  609	    int rect2Right = rect2.x + rect2.wi
                           A  7249    .LINE 609
                           A  7250    
041E9F DD070F              A  7251    	LD	BC,(IX+%F)
041EA2 CD 9B 4D 04         A  7252    	CALL	__stoiu
041EA6 E5D1                A  7253    	LD	DE,HL
041EA8 DD0713              A  7254    	LD	BC,(IX+%13)
041EAB CD 9B 4D 04         A  7255    	CALL	__stoiu
041EAF 19                  A  7256    	ADD	HL,DE
041EB0 DD2FEE              A  7257    	LD	(IX+%FFFFFFEE),HL
                           A  7258    ;  610	    int rect2Top = rect2.y;
                           A  7259    .LINE 610
                           A  7260    
041EB3 DD0711              A  7261    	LD	BC,(IX+%11)
041EB6 CD 9B 4D 04         A  7262    	CALL	__stoiu
041EBA DD2FEB              A  7263    	LD	(IX+%FFFFFFEB),HL
                           A  7264    ;  611	    int rect2Bottom = rect2.y + rect2.h
                           A  7265    .LINE 611
                           A  7266    
041EBD DD0711              A  7267    	LD	BC,(IX+%11)
041EC0 CD 9B 4D 04         A  7268    	CALL	__stoiu
041EC4 E5D1                A  7269    	LD	DE,HL
041EC6 DD0715              A  7270    	LD	BC,(IX+%15)
041EC9 CD 9B 4D 04         A  7271    	CALL	__stoiu
041ECD 19                  A  7272    	ADD	HL,DE
041ECE DD2FE8              A  7273    	LD	(IX+%FFFFFFE8),HL
                           A  7274    ;  612	    
                           A  7275    ;  613	    // Check for collision by comparing
                           A  7276    ;  614	    if (rect1Right <= rect2Left || rect
                           A  7277    .LINE 614
                           A  7278    
041ED1 DD07FA              A  7279    	LD	BC,(IX+%FFFFFFFA)
041ED4 DD27F1              A  7280    	LD	HL,(IX+%FFFFFFF1)
041ED7 B7                  A  7281    	OR	A,A
041ED8 ED42                A  7282    	SBC	HL,BC
041EDA F2 E4 1E 04         A  7283    	JP	P,L__181
041EDE EA 2D 1F 04         A  7284    	JP	PE,L_197
041EE2 18 04               A  7285    	JR	L__182
041EE4                     A  7286    L__181:
041EE4 E2 2D 1F 04         A  7287    	JP	PO,L_197
041EE8                     A  7288    L__182:
041EE8 DD07EE              A  7289    	LD	BC,(IX+%FFFFFFEE)
041EEB DD27FD              A  7290    	LD	HL,(IX+%FFFFFFFD)
041EEE B7                  A  7291    	OR	A,A
041EEF ED42                A  7292    	SBC	HL,BC
041EF1 F2 FB 1E 04         A  7293    	JP	P,L__183
041EF5 EA 2D 1F 04         A  7294    	JP	PE,L_197
041EF9 18 04               A  7295    	JR	L__184
041EFB                     A  7296    L__183:
041EFB E2 2D 1F 04         A  7297    	JP	PO,L_197
041EFF                     A  7298    L__184:
                           A  7299    ;  615	        rect1Bottom <= rect2Top || rect
                           A  7300    .LINE 615
                           A  7301    
041EFF DD07F4              A  7302    	LD	BC,(IX+%FFFFFFF4)
041F02 DD27EB              A  7303    	LD	HL,(IX+%FFFFFFEB)
041F05 B7                  A  7304    	OR	A,A
041F06 ED42                A  7305    	SBC	HL,BC
041F08 F2 12 1F 04         A  7306    	JP	P,L__185
041F0C EA 2D 1F 04         A  7307    	JP	PE,L_197
041F10 18 04               A  7308    	JR	L__186
041F12                     A  7309    L__185:
041F12 E2 2D 1F 04         A  7310    	JP	PO,L_197
041F16                     A  7311    L__186:
041F16 DD07E8              A  7312    	LD	BC,(IX+%FFFFFFE8)
041F19 DD27F7              A  7313    	LD	HL,(IX+%FFFFFFF7)
041F1C B7                  A  7314    	OR	A,A
041F1D ED42                A  7315    	SBC	HL,BC
041F1F FA 29 1F 04         A  7316    	JP	M,L__187
041F23 EA 30 1F 04         A  7317    	JP	PE,L_198
041F27 18 04               A  7318    	JR	L__188
041F29                     A  7319    L__187:
041F29 E2 30 1F 04         A  7320    	JP	PO,L_198
041F2D                     A  7321    L__188:
041F2D                     A  7322    L_197:
                           A  7323    ;  616	        return false;  // No collision
                           A  7324    .LINE 616
                           A  7325    
041F2D AF                  A  7326    	XOR	A,A
041F2E 18 02               A  7327    	JR	L_199
                           A  7328    ;  617	    }
041F30                     A  7329    L_198:
                           A  7330    .LINE 617
                           A  7331    
                           A  7332    ;  618	    
                           A  7333    ;  619	    return true;  // Collision detected
                           A  7334    .LINE 619
                           A  7335    
041F30 3E01                A  7336    	LD	A,%1
                           A  7337    ;  620	}
041F32                     A  7338    L_199:
                           A  7339    .LINE 620
                           A  7340    
041F32 DDF9                A  7341    	LD	SP,IX
041F34 DDE1                A  7342    	POP	IX
041F36 C9                  A  7343    	RET	
                           A  7344    
                           A  7345    
                           A  7346    ;**************************** _check_collision 
                           A  7347    ;Name                         Addr/Register   S
                           A  7348    ;rect2Bottom                          IX-24    
                           A  7349    ;rect2Top                             IX-21    
                           A  7350    ;rect2Right                           IX-18    
                           A  7351    ;rect2Left                            IX-15    
                           A  7352    ;rect1Bottom                          IX-12    
                           A  7353    ;rect1Top                              IX-9    
                           A  7354    ;rect1Right                            IX-6    
                           A  7355    ;rect1Left                             IX-3    
                           A  7356    ;rect2                                IX+15    
                           A  7357    ;rect1                                 IX+6    
                           A  7358    
                           A  7359    
                           A  7360    ; Stack Frame Size: 48 (bytes)
                           A  7361    ;       Spill Code: -3 (instruction)
                           A  7362    
                           A  7363    
                           A  7364    .ENDFUNC "check_collision",620,"_check_collisio
                           A  7365    ;  621	
                           A  7366    ;  622	uint24_t xorshift24(uint24_t *state) {
041F37                     A  7367    _xorshift24:
                           A  7368    .DEFINE "_xorshift24"
                           A  7369    
                           A  7370    .VALUE _xorshift24
                           A  7371    
                           A  7372    .CLASS 2
                           A  7373    
                           A  7374    .TYPE 78
                           A  7375    
                           A  7376    .ENDEF
                           A  7377    
                           A  7378    .BEGFUNC "xorshift24",622,"_xorshift24"
                           A  7379    
                           A  7380    .LINE 622
                           A  7381    
                           A  7382    .DEFINE "state"
                           A  7383    
                           A  7384    .CLASS 65
                           A  7385    
                           A  7386    .VALUE 6
                           A  7387    
                           A  7388    .TYPE 46
                           A  7389    
                           A  7390    .ENDEF
                           A  7391    
                           A  7392    .DEFINE "x"
                           A  7393    
                           A  7394    .CLASS 65
                           A  7395    
                           A  7396    .VALUE -3
                           A  7397    
                           A  7398    .TYPE 14
                           A  7399    
                           A  7400    .ENDEF
                           A  7401    
041F37 DDE5                A  7402    	PUSH	IX
041F39 DD210000 00         A  7403    	LD	IX,0
041F3E DD39                A  7404    	ADD	IX,SP
041F40 C5                  A  7405    	PUSH	BC
                           A  7406    ;  623	    uint24_t x = *state;
                           A  7407    .LINE 623
                           A  7408    
041F41 DD2706              A  7409    	LD	HL,(IX+%6)
041F44 ED07                A  7410    	LD	BC,(HL)
041F46 DD0FFD              A  7411    	LD	(IX+%FFFFFFFD),BC
                           A  7412    ;  624	    x ^= x << 13;
                           A  7413    .LINE 624
                           A  7414    
041F49 C5E1                A  7415    	LD	HL,BC
041F4B 3E0D                A  7416    	LD	A,%D
041F4D CD 8A 50 04         A  7417    	CALL	__ishl_b
041F51 CD 5F 4F 04         A  7418    	CALL	__ixor
041F55 E5C1                A  7419    	LD	BC,HL
041F57 DD0FFD              A  7420    	LD	(IX+%FFFFFFFD),BC
                           A  7421    ;  625	    x ^= x >> 17;
                           A  7422    .LINE 625
                           A  7423    
041F5A C5E1                A  7424    	LD	HL,BC
041F5C 3E11                A  7425    	LD	A,%11
041F5E CD F4 4F 04         A  7426    	CALL	__ishru_b
041F62 CD 5F 4F 04         A  7427    	CALL	__ixor
041F66 E5C1                A  7428    	LD	BC,HL
041F68 DD0FFD              A  7429    	LD	(IX+%FFFFFFFD),BC
                           A  7430    ;  626	    x ^= x << 5;
                           A  7431    .LINE 626
                           A  7432    
041F6B C5E1                A  7433    	LD	HL,BC
041F6D 29                  A  7434    	ADD	HL,HL
041F6E 29                  A  7435    	ADD	HL,HL
041F6F 29                  A  7436    	ADD	HL,HL
041F70 29                  A  7437    	ADD	HL,HL
041F71 29                  A  7438    	ADD	HL,HL
041F72 CD 5F 4F 04         A  7439    	CALL	__ixor
041F76 DD2FFD              A  7440    	LD	(IX+%FFFFFFFD),HL
                           A  7441    ;  627	    *state = x;
                           A  7442    .LINE 627
                           A  7443    
041F79 DD2706              A  7444    	LD	HL,(IX+%6)
041F7C DD07FD              A  7445    	LD	BC,(IX+%FFFFFFFD)
041F7F ED0F                A  7446    	LD	(HL),BC
                           A  7447    ;  628	    return x;
                           A  7448    .LINE 628
                           A  7449    
041F81 DD27FD              A  7450    	LD	HL,(IX+%FFFFFFFD)
                           A  7451    ;  629	}
                           A  7452    .LINE 629
                           A  7453    
041F84 DDF9                A  7454    	LD	SP,IX
041F86 DDE1                A  7455    	POP	IX
041F88 C9                  A  7456    	RET	
                           A  7457    
                           A  7458    
                           A  7459    ;**************************** _xorshift24 *****
                           A  7460    ;Name                         Addr/Register   S
                           A  7461    ;x                                     IX-3    
                           A  7462    ;state                                 IX+6    
                           A  7463    
                           A  7464    
                           A  7465    ; Stack Frame Size: 12 (bytes)
                           A  7466    ;       Spill Code: -3 (instruction)
                           A  7467    
                           A  7468    
                           A  7469    .ENDFUNC "xorshift24",629,"_xorshift24"
                           A  7470    ;  630	
                           A  7471    ;  631	int prand(int min, int max) {
041F89                     A  7472    _prand:
                           A  7473    .DEFINE "_prand"
                           A  7474    
                           A  7475    .VALUE _prand
                           A  7476    
                           A  7477    .CLASS 2
                           A  7478    
                           A  7479    .TYPE 68
                           A  7480    
                           A  7481    .ENDEF
                           A  7482    
                           A  7483    .BEGFUNC "prand",631,"_prand"
                           A  7484    
                           A  7485    .LINE 631
                           A  7486    
                           A  7487    .DEFINE "min"
                           A  7488    
                           A  7489    .CLASS 65
                           A  7490    
                           A  7491    .VALUE 6
                           A  7492    
                           A  7493    .TYPE 4
                           A  7494    
                           A  7495    .ENDEF
                           A  7496    
                           A  7497    .DEFINE "max"
                           A  7498    
                           A  7499    .CLASS 65
                           A  7500    
                           A  7501    .VALUE 9
                           A  7502    
                           A  7503    .TYPE 4
                           A  7504    
                           A  7505    .ENDEF
                           A  7506    
                           A  7507    .DEFINE "state"
                           A  7508    
                           A  7509    .CLASS 65
                           A  7510    
                           A  7511    .VALUE -3
                           A  7512    
                           A  7513    .TYPE 14
                           A  7514    
                           A  7515    .ENDEF
                           A  7516    
                           A  7517    .DEFINE "range"
                           A  7518    
                           A  7519    .CLASS 65
                           A  7520    
                           A  7521    .VALUE -6
                           A  7522    
                           A  7523    .TYPE 14
                           A  7524    
                           A  7525    .ENDEF
                           A  7526    
                           A  7527    .DEFINE "randomValue"
                           A  7528    
                           A  7529    .CLASS 65
                           A  7530    
                           A  7531    .VALUE -9
                           A  7532    
                           A  7533    .TYPE 14
                           A  7534    
                           A  7535    .ENDEF
                           A  7536    
041F89 DDE5                A  7537    	PUSH	IX
041F8B DD210000 00         A  7538    	LD	IX,0
041F90 DD39                A  7539    	ADD	IX,SP
041F92 C5                  A  7540    	PUSH	BC
041F93 C5                  A  7541    	PUSH	BC
041F94 C5                  A  7542    	PUSH	BC
                           A  7543    ;  632	    uint24_t state = timer1;
                           A  7544    .LINE 632
                           A  7545    
041F95 ED4B 3F 56 04       A  7546    	LD	BC,(_timer1)
041F9A DD0FFD              A  7547    	LD	(IX+%FFFFFFFD),BC
                           A  7548    ;  633	    uint24_t range = max - min + 1;
                           A  7549    .LINE 633
                           A  7550    
041F9D DD0706              A  7551    	LD	BC,(IX+%6)
041FA0 DD2709              A  7552    	LD	HL,(IX+%9)
041FA3 B7                  A  7553    	OR	A,A
041FA4 ED42                A  7554    	SBC	HL,BC
041FA6 23                  A  7555    	INC	HL
041FA7 DD2FFA              A  7556    	LD	(IX+%FFFFFFFA),HL
                           A  7557    ;  634	    uint24_t randomValue = xorshift24(&
                           A  7558    .LINE 634
                           A  7559    
041FAA ED65FD              A  7560    	PEA	IX+%FFFFFFFD
041FAD CD 37 1F 04         A  7561    	CALL	_xorshift24
041FB1 C1                  A  7562    	POP	BC
041FB2 DD07FA              A  7563    	LD	BC,(IX+%FFFFFFFA)
041FB5 CD FD 4B 04         A  7564    	CALL	__iremu
041FB9 DD2FF7              A  7565    	LD	(IX+%FFFFFFF7),HL
                           A  7566    ;  635	    return randomValue + min;
                           A  7567    .LINE 635
                           A  7568    
041FBC DD0706              A  7569    	LD	BC,(IX+%6)
041FBF DD27F7              A  7570    	LD	HL,(IX+%FFFFFFF7)
041FC2 09                  A  7571    	ADD	HL,BC
                           A  7572    ;  636	}
                           A  7573    .LINE 636
                           A  7574    
041FC3 DDF9                A  7575    	LD	SP,IX
041FC5 DDE1                A  7576    	POP	IX
041FC7 C9                  A  7577    	RET	
                           A  7578    
                           A  7579    
                           A  7580    ;**************************** _prand **********
                           A  7581    ;Name                         Addr/Register   S
                           A  7582    ;_timer1                             IMPORT    
                           A  7583    ;randomValue                           IX-9    
                           A  7584    ;range                                 IX-6    
                           A  7585    ;state                                 IX-3    
                           A  7586    ;max                                   IX+9    
                           A  7587    ;min                                   IX+6    
                           A  7588    
                           A  7589    
                           A  7590    ; Stack Frame Size: 21 (bytes)
                           A  7591    ;       Spill Code: -3 (instruction)
                           A  7592    
                           A  7593    
                           A  7594    .ENDFUNC "prand",636,"_prand"
                           A  7595    ;  637	
                           A  7596    ;  638	void move_snake() {
041FC8                     A  7597    _move_snake:
                           A  7598    .DEFINE "_move_snake"
                           A  7599    
                           A  7600    .VALUE _move_snake
                           A  7601    
                           A  7602    .CLASS 2
                           A  7603    
                           A  7604    .TYPE 65
                           A  7605    
                           A  7606    .ENDEF
                           A  7607    
                           A  7608    .BEGFUNC "move_snake",638,"_move_snake"
                           A  7609    
                           A  7610    .LINE 638
                           A  7611    
                           A  7612    .DEFINE "currentRect"
                           A  7613    
                           A  7614    .CLASS 65
                           A  7615    
                           A  7616    .VALUE -11
                           A  7617    
                           A  7618    .TAG "NONAME6"
                           A  7619    
                           A  7620    .TYPE 8
                           A  7621    
                           A  7622    .ENDEF
                           A  7623    
                           A  7624    .DEFINE "i"
                           A  7625    
                           A  7626    .CLASS 65
                           A  7627    
                           A  7628    .VALUE -15
                           A  7629    
                           A  7630    .TYPE 12
                           A  7631    
                           A  7632    .ENDEF
                           A  7633    
                           A  7634    .DEFINE "nextRect"
                           A  7635    
                           A  7636    .CLASS 65
                           A  7637    
                           A  7638    .VALUE -23
                           A  7639    
                           A  7640    .TAG "NONAME6"
                           A  7641    
                           A  7642    .TYPE 8
                           A  7643    
                           A  7644    .ENDEF
                           A  7645    
                           A  7646    .DEFINE "prevRect"
                           A  7647    
                           A  7648    .CLASS 65
                           A  7649    
                           A  7650    .VALUE -31
                           A  7651    
                           A  7652    .TAG "NONAME6"
                           A  7653    
                           A  7654    .TYPE 8
                           A  7655    
                           A  7656    .ENDEF
                           A  7657    
                           A  7658    .DEFINE "j"
                           A  7659    
                           A  7660    .CLASS 65
                           A  7661    
                           A  7662    .VALUE -44
                           A  7663    
                           A  7664    .TYPE 12
                           A  7665    
                           A  7666    .ENDEF
                           A  7667    
041FC8 DDE5                A  7668    	PUSH	IX
041FCA DD210000 00         A  7669    	LD	IX,0
041FCF DD39                A  7670    	ADD	IX,SP
041FD1 215FFFFF            A  7671    	LD	HL,-161
041FD5 39                  A  7672    	ADD	HL,SP
041FD6 F9                  A  7673    	LD	SP,HL
                           A  7674    ;  639	    uint8_t i = 0, j = 0;
                           A  7675    ;  640	
                           A  7676    ;  641		//Reconstruct the snake in its next
                           A  7677    ;  642		
                           A  7678    ;  643		//Body
                           A  7679    ;  644		
                           A  7680    ;  645	    for (i = game.snake_length; i > 0; 
                           A  7681    .LINE 645
                           A  7682    
041FD7 3A 8B 5E 04         A  7683    	LD	A,(_game+14)
041FDB DD77F1              A  7684    	LD	(IX+%FFFFFFF1),A
041FDE 18 73               A  7685    	JR	L_205
041FE0                     A  7686    L_203:
                           A  7687    ;  646	        game.snake[i].x = game.snake[i 
                           A  7688    .LINE 646
                           A  7689    
041FE0 01 8C 5E 04         A  7690    	LD	BC,_game+15
041FE4 DD0FB0              A  7691    	LD	(IX+%FFFFFFB0),BC
041FE7 DD7EF1              A  7692    	LD	A,(IX+%FFFFFFF1)
041FEA B7ED62              A  7693    	UEXT	HL
041FED 6F                  A  7694    	LD	L,A
041FEE 2B                  A  7695    	DEC	HL
041FEF 29                  A  7696    	ADD	HL,HL
041FF0 29                  A  7697    	ADD	HL,HL
041FF1 29                  A  7698    	ADD	HL,HL
041FF2 DD07B0              A  7699    	LD	BC,(IX+%FFFFFFB0)
041FF5 09                  A  7700    	ADD	HL,BC
041FF6 DD2FB3              A  7701    	LD	(IX+%FFFFFFB3),HL
041FF9 DD7EF1              A  7702    	LD	A,(IX+%FFFFFFF1)
041FFC B7ED62              A  7703    	UEXT	HL
041FFF 6F                  A  7704    	LD	L,A
042000 29                  A  7705    	ADD	HL,HL
042001 29                  A  7706    	ADD	HL,HL
042002 29                  A  7707    	ADD	HL,HL
042003 E5D1                A  7708    	LD	DE,HL
042005 DD31B3              A  7709    	LD	IY,(IX+%FFFFFFB3)
042008 D5C1                A  7710    	LD	BC,DE
04200A DD27B0              A  7711    	LD	HL,(IX+%FFFFFFB0)
04200D 09                  A  7712    	ADD	HL,BC
04200E FD0700              A  7713    	LD	BC,(IY+%0)
042011 E5FDE1              A  7714    	LD	IY,HL
042014 FD7100              A  7715    	LD	(IY+%0),C
042017 FD7001              A  7716    	LD	(IY+%1),B
                           A  7717    ;  647	        game.snake[i].y = game.snake[i 
                           A  7718    .LINE 647
                           A  7719    
04201A D5C1                A  7720    	LD	BC,DE
04201C DD27B0              A  7721    	LD	HL,(IX+%FFFFFFB0)
04201F 09                  A  7722    	ADD	HL,BC
042020 DD2FB6              A  7723    	LD	(IX+%FFFFFFB6),HL
042023 DD2FB9              A  7724    	LD	(IX+%FFFFFFB9),HL
042026 DD31B3              A  7725    	LD	IY,(IX+%FFFFFFB3)
042029 FD0702              A  7726    	LD	BC,(IY+%2)
04202C DD31B6              A  7727    	LD	IY,(IX+%FFFFFFB6)
04202F FD7102              A  7728    	LD	(IY+%2),C
042032 FD7003              A  7729    	LD	(IY+%3),B
                           A  7730    ;  648	        vdp_spriteMoveTo(SPRITE_START +
                           A  7731    .LINE 648
                           A  7732    
042035 DD31B9              A  7733    	LD	IY,(IX+%FFFFFFB9)
042038 FD0702              A  7734    	LD	BC,(IY+%2)
04203B C5                  A  7735    	PUSH	BC
04203C FD0700              A  7736    	LD	BC,(IY+%0)
04203F C5                  A  7737    	PUSH	BC
042040 DD7EF1              A  7738    	LD	A,(IX+%FFFFFFF1)
042043 C614                A  7739    	ADD	A,%14
042045 4F                  A  7740    	LD	C,A
042046 0600                A  7741    	LD	B,%0
042048 C5                  A  7742    	PUSH	BC
042049 CD B4 40 04         A  7743    	CALL	_vdp_spriteMoveTo
04204D C1                  A  7744    	POP	BC
04204E C1                  A  7745    	POP	BC
04204F C1                  A  7746    	POP	BC
042050 DD35F1              A  7747    	DEC	(IX+%FFFFFFF1)
                           A  7748    ;  649			
                           A  7749    ;  650	    }
042053                     A  7750    L_205:
                           A  7751    .LINE 650
                           A  7752    
042053 AF                  A  7753    	XOR	A,A
042054 DDBEF1              A  7754    	CP	A,(IX+%FFFFFFF1)
042057 38 87               A  7755    	JR	C,L_203
                           A  7756    ;  651		
                           A  7757    ;  652		//Head
                           A  7758    ;  653	
                           A  7759    ;  654	    if (game.vel_x < 0) {
                           A  7760    .LINE 654
                           A  7761    
042059 3A 3C 63 04         A  7762    	LD	A,(_game+1215)
04205D B7                  A  7763    	OR	A,A
04205E F2 FE 20 04         A  7764    	JP	P,L_220
                           A  7765    ;  655	        if (game.snake[0].x - game.snak
                           A  7766    .LINE 655
                           A  7767    
042062 01 8C 5E 04         A  7768    	LD	BC,_game+15
042066 DD0FC8              A  7769    	LD	(IX+%FFFFFFC8),BC
042069 DD0FAD              A  7770    	LD	(IX+%FFFFFFAD),BC
04206C DD31AD              A  7771    	LD	IY,(IX+%FFFFFFAD)
04206F FD0700              A  7772    	LD	BC,(IY+%0)
042072 CD 9B 4D 04         A  7773    	CALL	__stoiu
042076 E5D1                A  7774    	LD	DE,HL
042078 FD0704              A  7775    	LD	BC,(IY+%4)
04207B CD 9B 4D 04         A  7776    	CALL	__stoiu
04207F E5C1                A  7777    	LD	BC,HL
042081 D5E1                A  7778    	LD	HL,DE
042083 B7                  A  7779    	OR	A,A
042084 ED42                A  7780    	SBC	HL,BC
042086 01000000            A  7781    	LD	BC,0
04208A B7                  A  7782    	OR	A,A
04208B ED42                A  7783    	SBC	HL,BC
04208D FA 97 20 04         A  7784    	JP	M,L__250
042091 EA D8 20 04         A  7785    	JP	PE,L_207
042095 18 04               A  7786    	JR	L__251
042097                     A  7787    L__250:
042097 E2 D8 20 04         A  7788    	JP	PO,L_207
04209B                     A  7789    L__251:
                           A  7790    ;  656	            game.snake[0].x -= game.sna
                           A  7791    .LINE 656
                           A  7792    
04209B DD07C8              A  7793    	LD	BC,(IX+%FFFFFFC8)
04209E DD0FAA              A  7794    	LD	(IX+%FFFFFFAA),BC
0420A1 DD31AA              A  7795    	LD	IY,(IX+%FFFFFFAA)
0420A4 FD0704              A  7796    	LD	BC,(IY+%4)
0420A7 FD2700              A  7797    	LD	HL,(IY+%0)
0420AA B7                  A  7798    	OR	A,A
0420AB 40ED42              A  7799    	SBC.SIS	HL,BC
0420AE E5C1                A  7800    	LD	BC,HL
0420B0 FD7100              A  7801    	LD	(IY+%0),C
0420B3 FD7001              A  7802    	LD	(IY+%1),B
                           A  7803    ;  657	            vdp_spriteMoveTo(SPRITE_STA
                           A  7804    .LINE 657
                           A  7805    
0420B6 FD0702              A  7806    	LD	BC,(IY+%2)
0420B9 C5                  A  7807    	PUSH	BC
0420BA FD0700              A  7808    	LD	BC,(IY+%0)
0420BD C5                  A  7809    	PUSH	BC
0420BE 01140000            A  7810    	LD	BC,20
0420C2 C5                  A  7811    	PUSH	BC
0420C3 CD B4 40 04         A  7812    	CALL	_vdp_spriteMoveTo
0420C7 C1                  A  7813    	POP	BC
0420C8 C1                  A  7814    	POP	BC
0420C9 C1                  A  7815    	POP	BC
                           A  7816    ;  658				vdp_spriteSetFrameSelected(
                           A  7817    .LINE 658
                           A  7818    
0420CA 01030000            A  7819    	LD	BC,3
0420CE C5                  A  7820    	PUSH	BC
0420CF CD 87 3F 04         A  7821    	CALL	_vdp_spriteSetFrameSelected
0420D3 C1                  A  7822    	POP	BC
                           A  7823    ;  659	        } else {
                           A  7824    .LINE 659
                           A  7825    
0420D4 C3 97 23 04         A  7826    	JR	L_271
0420D8                     A  7827    L_207:
                           A  7828    ;  660	            play_sound(0, 120, 200, 440
                           A  7829    .LINE 660
                           A  7830    
0420D8 01B80100            A  7831    	LD	BC,440
0420DC C5                  A  7832    	PUSH	BC
0420DD 01C80000            A  7833    	LD	BC,200
0420E1 C5                  A  7834    	PUSH	BC
0420E2 01780000            A  7835    	LD	BC,120
0420E6 C5                  A  7836    	PUSH	BC
0420E7 01000000            A  7837    	LD	BC,0
0420EB C5                  A  7838    	PUSH	BC
0420EC CD F9 02 04         A  7839    	CALL	_play_sound
0420F0 C1                  A  7840    	POP	BC
0420F1 C1                  A  7841    	POP	BC
0420F2 C1                  A  7842    	POP	BC
0420F3 C1                  A  7843    	POP	BC
                           A  7844    ;  661				game.game_over = true;
                           A  7845    .LINE 661
                           A  7846    
0420F4 3E01                A  7847    	LD	A,%1
0420F6 32 3E 63 04         A  7848    	LD	(_game+1217),A
                           A  7849    ;  662	            return;
                           A  7850    .LINE 662
                           A  7851    
0420FA C3 96 2C 04         A  7852    	JR	L_295
                           A  7853    ;  663	        }
                           A  7854    ;  664	    } else if (game.vel_x > 0) {
0420FE                     A  7855    L_220:
                           A  7856    .LINE 664
                           A  7857    
0420FE AF                  A  7858    	XOR	A,A
0420FF 21 3C 63 04         A  7859    	LD	HL,_game+1215
042103 BE                  A  7860    	CP	A,(HL)
042104 F2 0E 21 04         A  7861    	JP	P,L__252
042108 EA F9 21 04         A  7862    	JP	PE,L_218
04210C 18 04               A  7863    	JR	L__253
04210E                     A  7864    L__252:
04210E E2 F9 21 04         A  7865    	JP	PO,L_218
042112                     A  7866    L__253:
                           A  7867    ;  665	        if (game.snake[0].x + game.snak
                           A  7868    .LINE 665
                           A  7869    
042112 01 8C 5E 04         A  7870    	LD	BC,_game+15
042116 DD0FD1              A  7871    	LD	(IX+%FFFFFFD1),BC
042119 DD31D1              A  7872    	LD	IY,(IX+%FFFFFFD1)
04211C FD1704              A  7873    	LD	DE,(IY+%4)
04211F ED4B 7D 5E 04       A  7874    	LD	BC,(_game)
042124 CD 9B 4D 04         A  7875    	CALL	__stoiu
042128 E5C1                A  7876    	LD	BC,HL
04212A C5E1                A  7877    	LD	HL,BC
04212C 0168FFFF            A  7878    	LD	BC,-152	; spill
042130 CD F1 4B 04         A  7879    	CALL	__istix
042134 FD0700              A  7880    	LD	BC,(IY+%0)
042137 CD 9B 4D 04         A  7881    	CALL	__stoiu
04213B E5C1                A  7882    	LD	BC,HL
04213D C5E1                A  7883    	LD	HL,BC
04213F 0165FFFF            A  7884    	LD	BC,-155	; spill
042143 CD F1 4B 04         A  7885    	CALL	__istix
042147 D5C1                A  7886    	LD	BC,DE
042149 CD 9B 4D 04         A  7887    	CALL	__stoiu
04214D 0165FFFF            A  7888    	LD	BC,-155	; unspill
042151 E5                  A  7889    	PUSH	HL
042152 CD BB 55 04         A  7890    	CALL	__ildix
042156 E5C1                A  7891    	LD	BC,HL
042158 E1                  A  7892    	POP	HL
042159 09                  A  7893    	ADD	HL,BC
04215A E5C1                A  7894    	LD	BC,HL
04215C C5E1                A  7895    	LD	HL,BC
04215E 0162FFFF            A  7896    	LD	BC,-158	; spill
042162 CD F1 4B 04         A  7897    	CALL	__istix
042166 D5C1                A  7898    	LD	BC,DE
042168 CD 9B 4D 04         A  7899    	CALL	__stoiu
04216C 0162FFFF            A  7900    	LD	BC,-158	; unspill
042170 E5                  A  7901    	PUSH	HL
042171 CD BB 55 04         A  7902    	CALL	__ildix
042175 E5C1                A  7903    	LD	BC,HL
042177 E1                  A  7904    	POP	HL
042178 09                  A  7905    	ADD	HL,BC
042179 E5D1                A  7906    	LD	DE,HL
04217B 0168FFFF            A  7907    	LD	BC,-152	; unspill
04217F CD BB 55 04         A  7908    	CALL	__ildix
042183 E5C1                A  7909    	LD	BC,HL
042185 C5E1                A  7910    	LD	HL,BC
042187 B7                  A  7911    	OR	A,A
042188 ED52                A  7912    	SBC	HL,DE
04218A FA 94 21 04         A  7913    	JP	M,L__254
04218E EA D3 21 04         A  7914    	JP	PE,L_209
042192 18 04               A  7915    	JR	L__255
042194                     A  7916    L__254:
042194 E2 D3 21 04         A  7917    	JP	PO,L_209
042198                     A  7918    L__255:
                           A  7919    ;  666	            game.snake[0].x += game.sna
                           A  7920    .LINE 666
                           A  7921    
042198 DD07D1              A  7922    	LD	BC,(IX+%FFFFFFD1)
04219B DD0FA7              A  7923    	LD	(IX+%FFFFFFA7),BC
04219E DD31A7              A  7924    	LD	IY,(IX+%FFFFFFA7)
0421A1 FD0704              A  7925    	LD	BC,(IY+%4)
0421A4 FD2700              A  7926    	LD	HL,(IY+%0)
0421A7 4009                A  7927    	ADD.SIS	HL,BC
0421A9 E5C1                A  7928    	LD	BC,HL
0421AB FD7100              A  7929    	LD	(IY+%0),C
0421AE FD7001              A  7930    	LD	(IY+%1),B
                           A  7931    ;  667	            vdp_spriteMoveTo(SPRITE_STA
                           A  7932    .LINE 667
                           A  7933    
0421B1 FD0702              A  7934    	LD	BC,(IY+%2)
0421B4 C5                  A  7935    	PUSH	BC
0421B5 FD0700              A  7936    	LD	BC,(IY+%0)
0421B8 C5                  A  7937    	PUSH	BC
0421B9 01140000            A  7938    	LD	BC,20
0421BD C5                  A  7939    	PUSH	BC
0421BE CD B4 40 04         A  7940    	CALL	_vdp_spriteMoveTo
0421C2 C1                  A  7941    	POP	BC
0421C3 C1                  A  7942    	POP	BC
0421C4 C1                  A  7943    	POP	BC
                           A  7944    ;  668				vdp_spriteSetFrameSelected(
                           A  7945    .LINE 668
                           A  7946    
0421C5 01010000            A  7947    	LD	BC,1
0421C9 C5                  A  7948    	PUSH	BC
0421CA CD 87 3F 04         A  7949    	CALL	_vdp_spriteSetFrameSelected
0421CE C1                  A  7950    	POP	BC
                           A  7951    ;  669	        } else {
                           A  7952    .LINE 669
                           A  7953    
0421CF C3 97 23 04         A  7954    	JR	L_271
0421D3                     A  7955    L_209:
                           A  7956    ;  670	            play_sound(0, 120, 200, 440
                           A  7957    .LINE 670
                           A  7958    
0421D3 01B80100            A  7959    	LD	BC,440
0421D7 C5                  A  7960    	PUSH	BC
0421D8 01C80000            A  7961    	LD	BC,200
0421DC C5                  A  7962    	PUSH	BC
0421DD 01780000            A  7963    	LD	BC,120
0421E1 C5                  A  7964    	PUSH	BC
0421E2 01000000            A  7965    	LD	BC,0
0421E6 C5                  A  7966    	PUSH	BC
0421E7 CD F9 02 04         A  7967    	CALL	_play_sound
0421EB C1                  A  7968    	POP	BC
0421EC C1                  A  7969    	POP	BC
0421ED C1                  A  7970    	POP	BC
0421EE C1                  A  7971    	POP	BC
                           A  7972    ;  671				game.game_over = true;
                           A  7973    .LINE 671
                           A  7974    
0421EF 3E01                A  7975    	LD	A,%1
0421F1 32 3E 63 04         A  7976    	LD	(_game+1217),A
                           A  7977    ;  672	            return;
                           A  7978    .LINE 672
                           A  7979    
0421F5 C3 96 2C 04         A  7980    	JR	L_295
                           A  7981    ;  673	        }
                           A  7982    ;  674	    } else if (game.vel_y < 0) {
0421F9                     A  7983    L_218:
                           A  7984    .LINE 674
                           A  7985    
0421F9 3A 3D 63 04         A  7986    	LD	A,(_game+1216)
0421FD B7                  A  7987    	OR	A,A
0421FE F2 9E 22 04         A  7988    	JP	P,L_216
                           A  7989    ;  675	        if (game.snake[0].y - game.snak
                           A  7990    .LINE 675
                           A  7991    
042202 01 8C 5E 04         A  7992    	LD	BC,_game+15
042206 DD0FC5              A  7993    	LD	(IX+%FFFFFFC5),BC
042209 DD0FA4              A  7994    	LD	(IX+%FFFFFFA4),BC
04220C DD31A4              A  7995    	LD	IY,(IX+%FFFFFFA4)
04220F FD0702              A  7996    	LD	BC,(IY+%2)
042212 CD 9B 4D 04         A  7997    	CALL	__stoiu
042216 E5D1                A  7998    	LD	DE,HL
042218 FD0706              A  7999    	LD	BC,(IY+%6)
04221B CD 9B 4D 04         A  8000    	CALL	__stoiu
04221F E5C1                A  8001    	LD	BC,HL
042221 D5E1                A  8002    	LD	HL,DE
042223 B7                  A  8003    	OR	A,A
042224 ED42                A  8004    	SBC	HL,BC
042226 01000000            A  8005    	LD	BC,0
04222A B7                  A  8006    	OR	A,A
04222B ED42                A  8007    	SBC	HL,BC
04222D FA 37 22 04         A  8008    	JP	M,L__256
042231 EA 78 22 04         A  8009    	JP	PE,L_211
042235 18 04               A  8010    	JR	L__257
042237                     A  8011    L__256:
042237 E2 78 22 04         A  8012    	JP	PO,L_211
04223B                     A  8013    L__257:
                           A  8014    ;  676	            game.snake[0].y -= game.sna
                           A  8015    .LINE 676
                           A  8016    
04223B DD07C5              A  8017    	LD	BC,(IX+%FFFFFFC5)
04223E DD0FA1              A  8018    	LD	(IX+%FFFFFFA1),BC
042241 DD31A1              A  8019    	LD	IY,(IX+%FFFFFFA1)
042244 FD0706              A  8020    	LD	BC,(IY+%6)
042247 FD2702              A  8021    	LD	HL,(IY+%2)
04224A B7                  A  8022    	OR	A,A
04224B 40ED42              A  8023    	SBC.SIS	HL,BC
04224E E5C1                A  8024    	LD	BC,HL
042250 FD7102              A  8025    	LD	(IY+%2),C
042253 FD7003              A  8026    	LD	(IY+%3),B
                           A  8027    ;  677	            vdp_spriteMoveTo(SPRITE_STA
                           A  8028    .LINE 677
                           A  8029    
042256 FD0702              A  8030    	LD	BC,(IY+%2)
042259 C5                  A  8031    	PUSH	BC
04225A FD0700              A  8032    	LD	BC,(IY+%0)
04225D C5                  A  8033    	PUSH	BC
04225E 01140000            A  8034    	LD	BC,20
042262 C5                  A  8035    	PUSH	BC
042263 CD B4 40 04         A  8036    	CALL	_vdp_spriteMoveTo
042267 C1                  A  8037    	POP	BC
042268 C1                  A  8038    	POP	BC
042269 C1                  A  8039    	POP	BC
                           A  8040    ;  678				vdp_spriteSetFrameSelected(
                           A  8041    .LINE 678
                           A  8042    
04226A 01000000            A  8043    	LD	BC,0
04226E C5                  A  8044    	PUSH	BC
04226F CD 87 3F 04         A  8045    	CALL	_vdp_spriteSetFrameSelected
042273 C1                  A  8046    	POP	BC
                           A  8047    ;  679	        } else {
                           A  8048    .LINE 679
                           A  8049    
042274 C3 97 23 04         A  8050    	JR	L_271
042278                     A  8051    L_211:
                           A  8052    ;  680	            play_sound(0, 120, 200, 440
                           A  8053    .LINE 680
                           A  8054    
042278 01B80100            A  8055    	LD	BC,440
04227C C5                  A  8056    	PUSH	BC
04227D 01C80000            A  8057    	LD	BC,200
042281 C5                  A  8058    	PUSH	BC
042282 01780000            A  8059    	LD	BC,120
042286 C5                  A  8060    	PUSH	BC
042287 01000000            A  8061    	LD	BC,0
04228B C5                  A  8062    	PUSH	BC
04228C CD F9 02 04         A  8063    	CALL	_play_sound
042290 C1                  A  8064    	POP	BC
042291 C1                  A  8065    	POP	BC
042292 C1                  A  8066    	POP	BC
042293 C1                  A  8067    	POP	BC
                           A  8068    ;  681				game.game_over = true;
                           A  8069    .LINE 681
                           A  8070    
042294 3E01                A  8071    	LD	A,%1
042296 32 3E 63 04         A  8072    	LD	(_game+1217),A
                           A  8073    ;  682	            return;
                           A  8074    .LINE 682
                           A  8075    
04229A C3 96 2C 04         A  8076    	JR	L_295
                           A  8077    ;  683	        }
                           A  8078    ;  684	    } else if (game.vel_y > 0) {
04229E                     A  8079    L_216:
                           A  8080    .LINE 684
                           A  8081    
04229E AF                  A  8082    	XOR	A,A
04229F 21 3D 63 04         A  8083    	LD	HL,_game+1216
0422A3 BE                  A  8084    	CP	A,(HL)
0422A4 F2 AE 22 04         A  8085    	JP	P,L__258
0422A8 EA 97 23 04         A  8086    	JP	PE,L_271
0422AC 18 04               A  8087    	JR	L__259
0422AE                     A  8088    L__258:
0422AE E2 97 23 04         A  8089    	JP	PO,L_271
0422B2                     A  8090    L__259:
                           A  8091    ;  685	        if (game.snake[0].y + game.snak
                           A  8092    .LINE 685
                           A  8093    
0422B2 01 8C 5E 04         A  8094    	LD	BC,_game+15
0422B6 DD0FCE              A  8095    	LD	(IX+%FFFFFFCE),BC
0422B9 DD31CE              A  8096    	LD	IY,(IX+%FFFFFFCE)
0422BC FD1706              A  8097    	LD	DE,(IY+%6)
0422BF ED4B 7F 5E 04       A  8098    	LD	BC,(_game+2)
0422C4 CD 9B 4D 04         A  8099    	CALL	__stoiu
0422C8 E5C1                A  8100    	LD	BC,HL
0422CA C5E1                A  8101    	LD	HL,BC
0422CC 0171FFFF            A  8102    	LD	BC,-143	; spill
0422D0 CD F1 4B 04         A  8103    	CALL	__istix
0422D4 FD0702              A  8104    	LD	BC,(IY+%2)
0422D7 CD 9B 4D 04         A  8105    	CALL	__stoiu
0422DB E5C1                A  8106    	LD	BC,HL
0422DD C5E1                A  8107    	LD	HL,BC
0422DF 016EFFFF            A  8108    	LD	BC,-146	; spill
0422E3 CD F1 4B 04         A  8109    	CALL	__istix
0422E7 D5C1                A  8110    	LD	BC,DE
0422E9 CD 9B 4D 04         A  8111    	CALL	__stoiu
0422ED 016EFFFF            A  8112    	LD	BC,-146	; unspill
0422F1 E5                  A  8113    	PUSH	HL
0422F2 CD BB 55 04         A  8114    	CALL	__ildix
0422F6 E5C1                A  8115    	LD	BC,HL
0422F8 E1                  A  8116    	POP	HL
0422F9 09                  A  8117    	ADD	HL,BC
0422FA E5C1                A  8118    	LD	BC,HL
0422FC C5E1                A  8119    	LD	HL,BC
0422FE 016BFFFF            A  8120    	LD	BC,-149	; spill
042302 CD F1 4B 04         A  8121    	CALL	__istix
042306 D5C1                A  8122    	LD	BC,DE
042308 CD 9B 4D 04         A  8123    	CALL	__stoiu
04230C 016BFFFF            A  8124    	LD	BC,-149	; unspill
042310 E5                  A  8125    	PUSH	HL
042311 CD BB 55 04         A  8126    	CALL	__ildix
042315 E5C1                A  8127    	LD	BC,HL
042317 E1                  A  8128    	POP	HL
042318 09                  A  8129    	ADD	HL,BC
042319 E5D1                A  8130    	LD	DE,HL
04231B 0171FFFF            A  8131    	LD	BC,-143	; unspill
04231F CD BB 55 04         A  8132    	CALL	__ildix
042323 E5C1                A  8133    	LD	BC,HL
042325 C5E1                A  8134    	LD	HL,BC
042327 B7                  A  8135    	OR	A,A
042328 ED52                A  8136    	SBC	HL,DE
04232A FA 34 23 04         A  8137    	JP	M,L__260
04232E EA 71 23 04         A  8138    	JP	PE,L_213
042332 18 04               A  8139    	JR	L__261
042334                     A  8140    L__260:
042334 E2 71 23 04         A  8141    	JP	PO,L_213
042338                     A  8142    L__261:
                           A  8143    ;  686	            game.snake[0].y += game.sna
                           A  8144    .LINE 686
                           A  8145    
042338 DD07CE              A  8146    	LD	BC,(IX+%FFFFFFCE)
04233B DD0F9E              A  8147    	LD	(IX+%FFFFFF9E),BC
04233E DD319E              A  8148    	LD	IY,(IX+%FFFFFF9E)
042341 FD0706              A  8149    	LD	BC,(IY+%6)
042344 FD2702              A  8150    	LD	HL,(IY+%2)
042347 4009                A  8151    	ADD.SIS	HL,BC
042349 E5C1                A  8152    	LD	BC,HL
04234B FD7102              A  8153    	LD	(IY+%2),C
04234E FD7003              A  8154    	LD	(IY+%3),B
                           A  8155    ;  687	            vdp_spriteMoveTo(SPRITE_STA
                           A  8156    .LINE 687
                           A  8157    
042351 FD0702              A  8158    	LD	BC,(IY+%2)
042354 C5                  A  8159    	PUSH	BC
042355 FD0700              A  8160    	LD	BC,(IY+%0)
042358 C5                  A  8161    	PUSH	BC
042359 01140000            A  8162    	LD	BC,20
04235D C5                  A  8163    	PUSH	BC
04235E CD B4 40 04         A  8164    	CALL	_vdp_spriteMoveTo
042362 C1                  A  8165    	POP	BC
042363 C1                  A  8166    	POP	BC
042364 C1                  A  8167    	POP	BC
                           A  8168    ;  688				vdp_spriteSetFrameSelected(
                           A  8169    .LINE 688
                           A  8170    
042365 01020000            A  8171    	LD	BC,2
042369 C5                  A  8172    	PUSH	BC
04236A CD 87 3F 04         A  8173    	CALL	_vdp_spriteSetFrameSelected
04236E C1                  A  8174    	POP	BC
                           A  8175    ;  689	        } else {
                           A  8176    .LINE 689
                           A  8177    
04236F 18 26               A  8178    	JR	L_271
042371                     A  8179    L_213:
                           A  8180    ;  690	            play_sound(0, 120, 200, 440
                           A  8181    .LINE 690
                           A  8182    
042371 01B80100            A  8183    	LD	BC,440
042375 C5                  A  8184    	PUSH	BC
042376 01C80000            A  8185    	LD	BC,200
04237A C5                  A  8186    	PUSH	BC
04237B 01780000            A  8187    	LD	BC,120
04237F C5                  A  8188    	PUSH	BC
042380 01000000            A  8189    	LD	BC,0
042384 C5                  A  8190    	PUSH	BC
042385 CD F9 02 04         A  8191    	CALL	_play_sound
042389 C1                  A  8192    	POP	BC
04238A C1                  A  8193    	POP	BC
04238B C1                  A  8194    	POP	BC
04238C C1                  A  8195    	POP	BC
                           A  8196    ;  691				game.game_over = true;
                           A  8197    .LINE 691
                           A  8198    
04238D 3E01                A  8199    	LD	A,%1
04238F 32 3E 63 04         A  8200    	LD	(_game+1217),A
                           A  8201    ;  692	            return;
                           A  8202    .LINE 692
                           A  8203    
042393 C3 96 2C 04         A  8204    	JR	L_295
                           A  8205    ;  693	        }
                           A  8206    ;  694	    }
042397                     A  8207    L_271:
                           A  8208    .LINE 694
                           A  8209    
                           A  8210    ;  695		
                           A  8211    ;  696		//Iterate over the body to determin
                           A  8212    ;  697		
                           A  8213    ;  698		for (i = 1; i < game.snake_length; 
                           A  8214    .LINE 698
                           A  8215    
042397 DD36F101            A  8216    	LD	(IX+%FFFFFFF1),%1
04239B C3 EB 27 04         A  8217    	JR	L_270
04239F                     A  8218    L_268:
                           A  8219    ;  699			Rect currentRect = game.snake[i
                           A  8220    .LINE 699
                           A  8221    
04239F 01 8C 5E 04         A  8222    	LD	BC,_game+15
0423A3 DD0FFD              A  8223    	LD	(IX+%FFFFFFFD),BC
0423A6 DD7EF1              A  8224    	LD	A,(IX+%FFFFFFF1)
0423A9 B7ED62              A  8225    	UEXT	HL
0423AC 6F                  A  8226    	LD	L,A
0423AD 29                  A  8227    	ADD	HL,HL
0423AE 29                  A  8228    	ADD	HL,HL
0423AF 29                  A  8229    	ADD	HL,HL
0423B0 DD2FF2              A  8230    	LD	(IX+%FFFFFFF2),HL
0423B3 DD07FD              A  8231    	LD	BC,(IX+%FFFFFFFD)
0423B6 09                  A  8232    	ADD	HL,BC
0423B7 ED12F5              A  8233    	LEA	DE,IX+%FFFFFFF5
0423BA 01080000            A  8234    	LD	BC,8
0423BE EDB0                A  8235    	LDIR	
                           A  8236    ;  700			Rect nextRect = game.snake[i - 
                           A  8237    .LINE 700
                           A  8238    
0423C0 DD7EF1              A  8239    	LD	A,(IX+%FFFFFFF1)
0423C3 B7ED62              A  8240    	UEXT	HL
0423C6 6F                  A  8241    	LD	L,A
0423C7 2B                  A  8242    	DEC	HL
0423C8 29                  A  8243    	ADD	HL,HL
0423C9 29                  A  8244    	ADD	HL,HL
0423CA 29                  A  8245    	ADD	HL,HL
0423CB DD07FD              A  8246    	LD	BC,(IX+%FFFFFFFD)
0423CE 09                  A  8247    	ADD	HL,BC
0423CF ED12E9              A  8248    	LEA	DE,IX+%FFFFFFE9
0423D2 01080000            A  8249    	LD	BC,8
0423D6 EDB0                A  8250    	LDIR	
                           A  8251    ;  701			Rect prevRect = game.snake[i + 
                           A  8252    .LINE 701
                           A  8253    
0423D8 DD7EF1              A  8254    	LD	A,(IX+%FFFFFFF1)
0423DB B7ED62              A  8255    	UEXT	HL
0423DE 6F                  A  8256    	LD	L,A
0423DF 23                  A  8257    	INC	HL
0423E0 29                  A  8258    	ADD	HL,HL
0423E1 29                  A  8259    	ADD	HL,HL
0423E2 29                  A  8260    	ADD	HL,HL
0423E3 DD07FD              A  8261    	LD	BC,(IX+%FFFFFFFD)
0423E6 09                  A  8262    	ADD	HL,BC
0423E7 ED12E1              A  8263    	LEA	DE,IX+%FFFFFFE1
0423EA 01080000            A  8264    	LD	BC,8
0423EE EDB0                A  8265    	LDIR	
                           A  8266    ;  702	
                           A  8267    ;  703			if (currentRect.y == prevRect.y
                           A  8268    .LINE 703
                           A  8269    
0423F0 DD07E3              A  8270    	LD	BC,(IX+%FFFFFFE3)
0423F3 DD27F7              A  8271    	LD	HL,(IX+%FFFFFFF7)
0423F6 B7                  A  8272    	OR	A,A
0423F7 40ED42              A  8273    	SBC.SIS	HL,BC
0423FA 20 47               A  8274    	JR	NZ,L_267
0423FC DD07EB              A  8275    	LD	BC,(IX+%FFFFFFEB)
0423FF DD27F7              A  8276    	LD	HL,(IX+%FFFFFFF7)
042402 B7                  A  8277    	OR	A,A
042403 40ED42              A  8278    	SBC.SIS	HL,BC
042406 20 3B               A  8279    	JR	NZ,L_267
                           A  8280    ;  704				vdp_spriteSetFrame(SPRITE_S
                           A  8281    .LINE 704
                           A  8282    
042408 01000000            A  8283    	LD	BC,0
04240C C5                  A  8284    	PUSH	BC
04240D DD7EF1              A  8285    	LD	A,(IX+%FFFFFFF1)
042410 C614                A  8286    	ADD	A,%14
042412 4F                  A  8287    	LD	C,A
042413 0600                A  8288    	LD	B,%0
042415 C5                  A  8289    	PUSH	BC
042416 CD C0 3F 04         A  8290    	CALL	_vdp_spriteSetFrame
04241A C1                  A  8291    	POP	BC
04241B C1                  A  8292    	POP	BC
                           A  8293    ;  705				game.snake[i].width = game.
                           A  8294    .LINE 705
                           A  8295    
04241C DD07F2              A  8296    	LD	BC,(IX+%FFFFFFF2)
04241F DD27FD              A  8297    	LD	HL,(IX+%FFFFFFFD)
042422 09                  A  8298    	ADD	HL,BC
042423 DD2F9B              A  8299    	LD	(IX+%FFFFFF9B),HL
042426 3A 3F 63 04         A  8300    	LD	A,(_game+1218)
04242A 0600                A  8301    	LD	B,%0
04242C DD319B              A  8302    	LD	IY,(IX+%FFFFFF9B)
04242F FD7704              A  8303    	LD	(IY+%4),A
042432 FD7005              A  8304    	LD	(IY+%5),B
                           A  8305    ;  706				game.snake[i].height = game
                           A  8306    .LINE 706
                           A  8307    
042435 3A 40 63 04         A  8308    	LD	A,(_game+1219)
042439 FD7706              A  8309    	LD	(IY+%6),A
04243C FD7007              A  8310    	LD	(IY+%7),B
                           A  8311    ;  707				continue;
                           A  8312    .LINE 707
                           A  8313    
04243F C3 E8 27 04         A  8314    	JR	L_269
                           A  8315    ;  708				
                           A  8316    ;  709			} else if (currentRect.x == pre
042443                     A  8317    L_267:
                           A  8318    .LINE 709
                           A  8319    
042443 DD07E1              A  8320    	LD	BC,(IX+%FFFFFFE1)
042446 DD27F5              A  8321    	LD	HL,(IX+%FFFFFFF5)
042449 B7                  A  8322    	OR	A,A
04244A 40ED42              A  8323    	SBC.SIS	HL,BC
04244D 20 47               A  8324    	JR	NZ,L_265
04244F DD07E9              A  8325    	LD	BC,(IX+%FFFFFFE9)
042452 DD27F5              A  8326    	LD	HL,(IX+%FFFFFFF5)
042455 B7                  A  8327    	OR	A,A
042456 40ED42              A  8328    	SBC.SIS	HL,BC
042459 20 3B               A  8329    	JR	NZ,L_265
                           A  8330    ;  710				vdp_spriteSetFrame(SPRITE_S
                           A  8331    .LINE 710
                           A  8332    
04245B 01010000            A  8333    	LD	BC,1
04245F C5                  A  8334    	PUSH	BC
042460 DD7EF1              A  8335    	LD	A,(IX+%FFFFFFF1)
042463 C614                A  8336    	ADD	A,%14
042465 4F                  A  8337    	LD	C,A
042466 0600                A  8338    	LD	B,%0
042468 C5                  A  8339    	PUSH	BC
042469 CD C0 3F 04         A  8340    	CALL	_vdp_spriteSetFrame
04246D C1                  A  8341    	POP	BC
04246E C1                  A  8342    	POP	BC
                           A  8343    ;  711				game.snake[i].width = game.
                           A  8344    .LINE 711
                           A  8345    
04246F DD07F2              A  8346    	LD	BC,(IX+%FFFFFFF2)
042472 DD27FD              A  8347    	LD	HL,(IX+%FFFFFFFD)
042475 09                  A  8348    	ADD	HL,BC
042476 DD2F98              A  8349    	LD	(IX+%FFFFFF98),HL
042479 3A 41 63 04         A  8350    	LD	A,(_game+1220)
04247D 0600                A  8351    	LD	B,%0
04247F DD3198              A  8352    	LD	IY,(IX+%FFFFFF98)
042482 FD7704              A  8353    	LD	(IY+%4),A
042485 FD7005              A  8354    	LD	(IY+%5),B
                           A  8355    ;  712				game.snake[i].height = game
                           A  8356    .LINE 712
                           A  8357    
042488 3A 42 63 04         A  8358    	LD	A,(_game+1221)
04248C FD7706              A  8359    	LD	(IY+%6),A
04248F FD7007              A  8360    	LD	(IY+%7),B
                           A  8361    ;  713				continue;
                           A  8362    .LINE 713
                           A  8363    
042492 C3 E8 27 04         A  8364    	JR	L_269
                           A  8365    ;  714			}
                           A  8366    ;  715			
                           A  8367    ;  716			else if (nextRect.x > currentRe
042496                     A  8368    L_265:
                           A  8369    .LINE 716
                           A  8370    
042496 DD07E9              A  8371    	LD	BC,(IX+%FFFFFFE9)
042499 DD27F5              A  8372    	LD	HL,(IX+%FFFFFFF5)
04249C B7                  A  8373    	OR	A,A
04249D 40ED42              A  8374    	SBC.SIS	HL,BC
0424A0 30 5F               A  8375    	JR	NC,L_263
0424A2 DD07F7              A  8376    	LD	BC,(IX+%FFFFFFF7)
0424A5 DD27EB              A  8377    	LD	HL,(IX+%FFFFFFEB)
0424A8 B7                  A  8378    	OR	A,A
0424A9 40ED42              A  8379    	SBC.SIS	HL,BC
0424AC 20 53               A  8380    	JR	NZ,L_263
0424AE DD07E3              A  8381    	LD	BC,(IX+%FFFFFFE3)
0424B1 DD27F7              A  8382    	LD	HL,(IX+%FFFFFFF7)
0424B4 B7                  A  8383    	OR	A,A
0424B5 40ED42              A  8384    	SBC.SIS	HL,BC
0424B8 30 47               A  8385    	JR	NC,L_263
0424BA DD07F5              A  8386    	LD	BC,(IX+%FFFFFFF5)
0424BD DD27E1              A  8387    	LD	HL,(IX+%FFFFFFE1)
0424C0 B7                  A  8388    	OR	A,A
0424C1 40ED42              A  8389    	SBC.SIS	HL,BC
0424C4 20 3B               A  8390    	JR	NZ,L_263
                           A  8391    ;  717				vdp_spriteSetFrame(SPRITE_S
                           A  8392    .LINE 717
                           A  8393    
0424C6 01050000            A  8394    	LD	BC,5
0424CA C5                  A  8395    	PUSH	BC
0424CB DD7EF1              A  8396    	LD	A,(IX+%FFFFFFF1)
0424CE C614                A  8397    	ADD	A,%14
0424D0 4F                  A  8398    	LD	C,A
0424D1 0600                A  8399    	LD	B,%0
0424D3 C5                  A  8400    	PUSH	BC
0424D4 CD C0 3F 04         A  8401    	CALL	_vdp_spriteSetFrame
0424D8 C1                  A  8402    	POP	BC
0424D9 C1                  A  8403    	POP	BC
                           A  8404    ;  718				game.snake[i].width = game.
                           A  8405    .LINE 718
                           A  8406    
0424DA DD07F2              A  8407    	LD	BC,(IX+%FFFFFFF2)
0424DD DD27FD              A  8408    	LD	HL,(IX+%FFFFFFFD)
0424E0 09                  A  8409    	ADD	HL,BC
0424E1 DD2F95              A  8410    	LD	(IX+%FFFFFF95),HL
0424E4 3A 43 63 04         A  8411    	LD	A,(_game+1222)
0424E8 0600                A  8412    	LD	B,%0
0424EA DD3195              A  8413    	LD	IY,(IX+%FFFFFF95)
0424ED FD7704              A  8414    	LD	(IY+%4),A
0424F0 FD7005              A  8415    	LD	(IY+%5),B
                           A  8416    ;  719				game.snake[i].width = game.
                           A  8417    .LINE 719
                           A  8418    
0424F3 3A 44 63 04         A  8419    	LD	A,(_game+1223)
0424F7 FD7704              A  8420    	LD	(IY+%4),A
0424FA FD7005              A  8421    	LD	(IY+%5),B
                           A  8422    ;  720				continue;
                           A  8423    .LINE 720
                           A  8424    
0424FD C3 E8 27 04         A  8425    	JR	L_269
                           A  8426    ;  721			}
                           A  8427    ;  722			else if (nextRect.x == currentR
042501                     A  8428    L_263:
                           A  8429    .LINE 722
                           A  8430    
042501 DD07F5              A  8431    	LD	BC,(IX+%FFFFFFF5)
042504 DD27E9              A  8432    	LD	HL,(IX+%FFFFFFE9)
042507 B7                  A  8433    	OR	A,A
042508 40ED42              A  8434    	SBC.SIS	HL,BC
04250B 20 5F               A  8435    	JR	NZ,L_261
04250D DD07EB              A  8436    	LD	BC,(IX+%FFFFFFEB)
042510 DD27F7              A  8437    	LD	HL,(IX+%FFFFFFF7)
042513 B7                  A  8438    	OR	A,A
042514 40ED42              A  8439    	SBC.SIS	HL,BC
042517 30 53               A  8440    	JR	NC,L_261
042519 DD07F7              A  8441    	LD	BC,(IX+%FFFFFFF7)
04251C DD27E3              A  8442    	LD	HL,(IX+%FFFFFFE3)
04251F B7                  A  8443    	OR	A,A
042520 40ED42              A  8444    	SBC.SIS	HL,BC
042523 20 47               A  8445    	JR	NZ,L_261
042525 DD07E1              A  8446    	LD	BC,(IX+%FFFFFFE1)
042528 DD27F5              A  8447    	LD	HL,(IX+%FFFFFFF5)
04252B B7                  A  8448    	OR	A,A
04252C 40ED42              A  8449    	SBC.SIS	HL,BC
04252F 30 3B               A  8450    	JR	NC,L_261
                           A  8451    ;  723				vdp_spriteSetFrame(SPRITE_S
                           A  8452    .LINE 723
                           A  8453    
042531 01050000            A  8454    	LD	BC,5
042535 C5                  A  8455    	PUSH	BC
042536 DD7EF1              A  8456    	LD	A,(IX+%FFFFFFF1)
042539 C614                A  8457    	ADD	A,%14
04253B 4F                  A  8458    	LD	C,A
04253C 0600                A  8459    	LD	B,%0
04253E C5                  A  8460    	PUSH	BC
04253F CD C0 3F 04         A  8461    	CALL	_vdp_spriteSetFrame
042543 C1                  A  8462    	POP	BC
042544 C1                  A  8463    	POP	BC
                           A  8464    ;  724				game.snake[i].width = game.
                           A  8465    .LINE 724
                           A  8466    
042545 DD07F2              A  8467    	LD	BC,(IX+%FFFFFFF2)
042548 DD27FD              A  8468    	LD	HL,(IX+%FFFFFFFD)
04254B 09                  A  8469    	ADD	HL,BC
04254C DD2F92              A  8470    	LD	(IX+%FFFFFF92),HL
04254F 3A 43 63 04         A  8471    	LD	A,(_game+1222)
042553 0600                A  8472    	LD	B,%0
042555 DD3192              A  8473    	LD	IY,(IX+%FFFFFF92)
042558 FD7704              A  8474    	LD	(IY+%4),A
04255B FD7005              A  8475    	LD	(IY+%5),B
                           A  8476    ;  725				game.snake[i].width = game.
                           A  8477    .LINE 725
                           A  8478    
04255E 3A 44 63 04         A  8479    	LD	A,(_game+1223)
042562 FD7704              A  8480    	LD	(IY+%4),A
042565 FD7005              A  8481    	LD	(IY+%5),B
                           A  8482    ;  726				continue;
                           A  8483    .LINE 726
                           A  8484    
042568 C3 E8 27 04         A  8485    	JR	L_269
                           A  8486    ;  727			}
                           A  8487    ;  728			
                           A  8488    ;  729			else if (nextRect.x == currentR
04256C                     A  8489    L_261:
                           A  8490    .LINE 729
                           A  8491    
04256C DD07F5              A  8492    	LD	BC,(IX+%FFFFFFF5)
04256F DD27E9              A  8493    	LD	HL,(IX+%FFFFFFE9)
042572 B7                  A  8494    	OR	A,A
042573 40ED42              A  8495    	SBC.SIS	HL,BC
042576 20 5F               A  8496    	JR	NZ,L_259
042578 DD07EB              A  8497    	LD	BC,(IX+%FFFFFFEB)
04257B DD27F7              A  8498    	LD	HL,(IX+%FFFFFFF7)
04257E B7                  A  8499    	OR	A,A
04257F 40ED42              A  8500    	SBC.SIS	HL,BC
042582 30 53               A  8501    	JR	NC,L_259
042584 DD07F5              A  8502    	LD	BC,(IX+%FFFFFFF5)
042587 DD27E1              A  8503    	LD	HL,(IX+%FFFFFFE1)
04258A B7                  A  8504    	OR	A,A
04258B 40ED42              A  8505    	SBC.SIS	HL,BC
04258E 30 47               A  8506    	JR	NC,L_259
042590 DD07F7              A  8507    	LD	BC,(IX+%FFFFFFF7)
042593 DD27E3              A  8508    	LD	HL,(IX+%FFFFFFE3)
042596 B7                  A  8509    	OR	A,A
042597 40ED42              A  8510    	SBC.SIS	HL,BC
04259A 20 3B               A  8511    	JR	NZ,L_259
                           A  8512    ;  730				vdp_spriteSetFrame(SPRITE_S
                           A  8513    .LINE 730
                           A  8514    
04259C 01020000            A  8515    	LD	BC,2
0425A0 C5                  A  8516    	PUSH	BC
0425A1 DD7EF1              A  8517    	LD	A,(IX+%FFFFFFF1)
0425A4 C614                A  8518    	ADD	A,%14
0425A6 4F                  A  8519    	LD	C,A
0425A7 0600                A  8520    	LD	B,%0
0425A9 C5                  A  8521    	PUSH	BC
0425AA CD C0 3F 04         A  8522    	CALL	_vdp_spriteSetFrame
0425AE C1                  A  8523    	POP	BC
0425AF C1                  A  8524    	POP	BC
                           A  8525    ;  731				game.snake[i].width = game.
                           A  8526    .LINE 731
                           A  8527    
0425B0 DD07F2              A  8528    	LD	BC,(IX+%FFFFFFF2)
0425B3 DD27FD              A  8529    	LD	HL,(IX+%FFFFFFFD)
0425B6 09                  A  8530    	ADD	HL,BC
0425B7 DD2F8F              A  8531    	LD	(IX+%FFFFFF8F),HL
0425BA 3A 43 63 04         A  8532    	LD	A,(_game+1222)
0425BE 0600                A  8533    	LD	B,%0
0425C0 DD318F              A  8534    	LD	IY,(IX+%FFFFFF8F)
0425C3 FD7704              A  8535    	LD	(IY+%4),A
0425C6 FD7005              A  8536    	LD	(IY+%5),B
                           A  8537    ;  732				game.snake[i].width = game.
                           A  8538    .LINE 732
                           A  8539    
0425C9 3A 44 63 04         A  8540    	LD	A,(_game+1223)
0425CD FD7704              A  8541    	LD	(IY+%4),A
0425D0 FD7005              A  8542    	LD	(IY+%5),B
                           A  8543    ;  733				continue;
                           A  8544    .LINE 733
                           A  8545    
0425D3 C3 E8 27 04         A  8546    	JR	L_269
                           A  8547    ;  734			}
                           A  8548    ;  735			else if (nextRect.x < currentRe
0425D7                     A  8549    L_259:
                           A  8550    .LINE 735
                           A  8551    
0425D7 DD07F5              A  8552    	LD	BC,(IX+%FFFFFFF5)
0425DA DD27E9              A  8553    	LD	HL,(IX+%FFFFFFE9)
0425DD B7                  A  8554    	OR	A,A
0425DE 40ED42              A  8555    	SBC.SIS	HL,BC
0425E1 30 5F               A  8556    	JR	NC,L_257
0425E3 DD07F7              A  8557    	LD	BC,(IX+%FFFFFFF7)
0425E6 DD27EB              A  8558    	LD	HL,(IX+%FFFFFFEB)
0425E9 B7                  A  8559    	OR	A,A
0425EA 40ED42              A  8560    	SBC.SIS	HL,BC
0425ED 20 53               A  8561    	JR	NZ,L_257
0425EF DD07F5              A  8562    	LD	BC,(IX+%FFFFFFF5)
0425F2 DD27E1              A  8563    	LD	HL,(IX+%FFFFFFE1)
0425F5 B7                  A  8564    	OR	A,A
0425F6 40ED42              A  8565    	SBC.SIS	HL,BC
0425F9 20 47               A  8566    	JR	NZ,L_257
0425FB DD07E3              A  8567    	LD	BC,(IX+%FFFFFFE3)
0425FE DD27F7              A  8568    	LD	HL,(IX+%FFFFFFF7)
042601 B7                  A  8569    	OR	A,A
042602 40ED42              A  8570    	SBC.SIS	HL,BC
042605 30 3B               A  8571    	JR	NC,L_257
                           A  8572    ;  736				vdp_spriteSetFrame(SPRITE_S
                           A  8573    .LINE 736
                           A  8574    
042607 01020000            A  8575    	LD	BC,2
04260B C5                  A  8576    	PUSH	BC
04260C DD7EF1              A  8577    	LD	A,(IX+%FFFFFFF1)
04260F C614                A  8578    	ADD	A,%14
042611 4F                  A  8579    	LD	C,A
042612 0600                A  8580    	LD	B,%0
042614 C5                  A  8581    	PUSH	BC
042615 CD C0 3F 04         A  8582    	CALL	_vdp_spriteSetFrame
042619 C1                  A  8583    	POP	BC
04261A C1                  A  8584    	POP	BC
                           A  8585    ;  737				game.snake[i].width = game.
                           A  8586    .LINE 737
                           A  8587    
04261B DD07F2              A  8588    	LD	BC,(IX+%FFFFFFF2)
04261E DD27FD              A  8589    	LD	HL,(IX+%FFFFFFFD)
042621 09                  A  8590    	ADD	HL,BC
042622 DD2F8C              A  8591    	LD	(IX+%FFFFFF8C),HL
042625 3A 43 63 04         A  8592    	LD	A,(_game+1222)
042629 0600                A  8593    	LD	B,%0
04262B DD318C              A  8594    	LD	IY,(IX+%FFFFFF8C)
04262E FD7704              A  8595    	LD	(IY+%4),A
042631 FD7005              A  8596    	LD	(IY+%5),B
                           A  8597    ;  738				game.snake[i].width = game.
                           A  8598    .LINE 738
                           A  8599    
042634 3A 44 63 04         A  8600    	LD	A,(_game+1223)
042638 FD7704              A  8601    	LD	(IY+%4),A
04263B FD7005              A  8602    	LD	(IY+%5),B
                           A  8603    ;  739				continue;
                           A  8604    .LINE 739
                           A  8605    
04263E C3 E8 27 04         A  8606    	JR	L_269
                           A  8607    ;  740			}
                           A  8608    ;  741	
                           A  8609    ;  742			else if (nextRect.x < currentRe
042642                     A  8610    L_257:
                           A  8611    .LINE 742
                           A  8612    
042642 DD07F5              A  8613    	LD	BC,(IX+%FFFFFFF5)
042645 DD27E9              A  8614    	LD	HL,(IX+%FFFFFFE9)
042648 B7                  A  8615    	OR	A,A
042649 40ED42              A  8616    	SBC.SIS	HL,BC
04264C 30 5F               A  8617    	JR	NC,L_255
04264E DD07F7              A  8618    	LD	BC,(IX+%FFFFFFF7)
042651 DD27EB              A  8619    	LD	HL,(IX+%FFFFFFEB)
042654 B7                  A  8620    	OR	A,A
042655 40ED42              A  8621    	SBC.SIS	HL,BC
042658 20 53               A  8622    	JR	NZ,L_255
04265A DD07F5              A  8623    	LD	BC,(IX+%FFFFFFF5)
04265D DD27E1              A  8624    	LD	HL,(IX+%FFFFFFE1)
042660 B7                  A  8625    	OR	A,A
042661 40ED42              A  8626    	SBC.SIS	HL,BC
042664 20 47               A  8627    	JR	NZ,L_255
042666 DD07F7              A  8628    	LD	BC,(IX+%FFFFFFF7)
042669 DD27E3              A  8629    	LD	HL,(IX+%FFFFFFE3)
04266C B7                  A  8630    	OR	A,A
04266D 40ED42              A  8631    	SBC.SIS	HL,BC
042670 30 3B               A  8632    	JR	NC,L_255
                           A  8633    ;  743				vdp_spriteSetFrame(SPRITE_S
                           A  8634    .LINE 743
                           A  8635    
042672 01030000            A  8636    	LD	BC,3
042676 C5                  A  8637    	PUSH	BC
042677 DD7EF1              A  8638    	LD	A,(IX+%FFFFFFF1)
04267A C614                A  8639    	ADD	A,%14
04267C 4F                  A  8640    	LD	C,A
04267D 0600                A  8641    	LD	B,%0
04267F C5                  A  8642    	PUSH	BC
042680 CD C0 3F 04         A  8643    	CALL	_vdp_spriteSetFrame
042684 C1                  A  8644    	POP	BC
042685 C1                  A  8645    	POP	BC
                           A  8646    ;  744				game.snake[i].width = game.
                           A  8647    .LINE 744
                           A  8648    
042686 DD07F2              A  8649    	LD	BC,(IX+%FFFFFFF2)
042689 DD27FD              A  8650    	LD	HL,(IX+%FFFFFFFD)
04268C 09                  A  8651    	ADD	HL,BC
04268D DD2F89              A  8652    	LD	(IX+%FFFFFF89),HL
042690 3A 43 63 04         A  8653    	LD	A,(_game+1222)
042694 0600                A  8654    	LD	B,%0
042696 DD3189              A  8655    	LD	IY,(IX+%FFFFFF89)
042699 FD7704              A  8656    	LD	(IY+%4),A
04269C FD7005              A  8657    	LD	(IY+%5),B
                           A  8658    ;  745				game.snake[i].width = game.
                           A  8659    .LINE 745
                           A  8660    
04269F 3A 44 63 04         A  8661    	LD	A,(_game+1223)
0426A3 FD7704              A  8662    	LD	(IY+%4),A
0426A6 FD7005              A  8663    	LD	(IY+%5),B
                           A  8664    ;  746				continue;
                           A  8665    .LINE 746
                           A  8666    
0426A9 C3 E8 27 04         A  8667    	JR	L_269
                           A  8668    ;  747			}
                           A  8669    ;  748			else if (nextRect.x == currentR
0426AD                     A  8670    L_255:
                           A  8671    .LINE 748
                           A  8672    
0426AD DD07F5              A  8673    	LD	BC,(IX+%FFFFFFF5)
0426B0 DD27E9              A  8674    	LD	HL,(IX+%FFFFFFE9)
0426B3 B7                  A  8675    	OR	A,A
0426B4 40ED42              A  8676    	SBC.SIS	HL,BC
0426B7 20 5F               A  8677    	JR	NZ,L_253
0426B9 DD07F7              A  8678    	LD	BC,(IX+%FFFFFFF7)
0426BC DD27EB              A  8679    	LD	HL,(IX+%FFFFFFEB)
0426BF B7                  A  8680    	OR	A,A
0426C0 40ED42              A  8681    	SBC.SIS	HL,BC
0426C3 30 53               A  8682    	JR	NC,L_253
0426C5 DD07F5              A  8683    	LD	BC,(IX+%FFFFFFF5)
0426C8 DD27E1              A  8684    	LD	HL,(IX+%FFFFFFE1)
0426CB B7                  A  8685    	OR	A,A
0426CC 40ED42              A  8686    	SBC.SIS	HL,BC
0426CF 30 47               A  8687    	JR	NC,L_253
0426D1 DD07F7              A  8688    	LD	BC,(IX+%FFFFFFF7)
0426D4 DD27E3              A  8689    	LD	HL,(IX+%FFFFFFE3)
0426D7 B7                  A  8690    	OR	A,A
0426D8 40ED42              A  8691    	SBC.SIS	HL,BC
0426DB 20 3B               A  8692    	JR	NZ,L_253
                           A  8693    ;  749				vdp_spriteSetFrame(SPRITE_S
                           A  8694    .LINE 749
                           A  8695    
0426DD 01030000            A  8696    	LD	BC,3
0426E1 C5                  A  8697    	PUSH	BC
0426E2 DD7EF1              A  8698    	LD	A,(IX+%FFFFFFF1)
0426E5 C614                A  8699    	ADD	A,%14
0426E7 4F                  A  8700    	LD	C,A
0426E8 0600                A  8701    	LD	B,%0
0426EA C5                  A  8702    	PUSH	BC
0426EB CD C0 3F 04         A  8703    	CALL	_vdp_spriteSetFrame
0426EF C1                  A  8704    	POP	BC
0426F0 C1                  A  8705    	POP	BC
                           A  8706    ;  750				game.snake[i].width = game.
                           A  8707    .LINE 750
                           A  8708    
0426F1 DD07F2              A  8709    	LD	BC,(IX+%FFFFFFF2)
0426F4 DD27FD              A  8710    	LD	HL,(IX+%FFFFFFFD)
0426F7 09                  A  8711    	ADD	HL,BC
0426F8 DD2F86              A  8712    	LD	(IX+%FFFFFF86),HL
0426FB 3A 43 63 04         A  8713    	LD	A,(_game+1222)
0426FF 0600                A  8714    	LD	B,%0
042701 DD3186              A  8715    	LD	IY,(IX+%FFFFFF86)
042704 FD7704              A  8716    	LD	(IY+%4),A
042707 FD7005              A  8717    	LD	(IY+%5),B
                           A  8718    ;  751				game.snake[i].width = game.
                           A  8719    .LINE 751
                           A  8720    
04270A 3A 44 63 04         A  8721    	LD	A,(_game+1223)
04270E FD7704              A  8722    	LD	(IY+%4),A
042711 FD7005              A  8723    	LD	(IY+%5),B
                           A  8724    ;  752				continue;
                           A  8725    .LINE 752
                           A  8726    
042714 C3 E8 27 04         A  8727    	JR	L_269
                           A  8728    ;  753			}				
                           A  8729    ;  754			
                           A  8730    ;  755			else if (nextRect.x == currentR
042718                     A  8731    L_253:
                           A  8732    .LINE 755
                           A  8733    
042718 DD07F5              A  8734    	LD	BC,(IX+%FFFFFFF5)
04271B DD27E9              A  8735    	LD	HL,(IX+%FFFFFFE9)
04271E B7                  A  8736    	OR	A,A
04271F 40ED42              A  8737    	SBC.SIS	HL,BC
042722 20 5D               A  8738    	JR	NZ,L_251
042724 DD07F7              A  8739    	LD	BC,(IX+%FFFFFFF7)
042727 DD27EB              A  8740    	LD	HL,(IX+%FFFFFFEB)
04272A B7                  A  8741    	OR	A,A
04272B 40ED42              A  8742    	SBC.SIS	HL,BC
04272E 30 51               A  8743    	JR	NC,L_251
042730 DD07E1              A  8744    	LD	BC,(IX+%FFFFFFE1)
042733 DD27F5              A  8745    	LD	HL,(IX+%FFFFFFF5)
042736 B7                  A  8746    	OR	A,A
042737 40ED42              A  8747    	SBC.SIS	HL,BC
04273A 30 45               A  8748    	JR	NC,L_251
04273C DD07F7              A  8749    	LD	BC,(IX+%FFFFFFF7)
04273F DD27E3              A  8750    	LD	HL,(IX+%FFFFFFE3)
042742 B7                  A  8751    	OR	A,A
042743 40ED42              A  8752    	SBC.SIS	HL,BC
042746 20 39               A  8753    	JR	NZ,L_251
                           A  8754    ;  756				vdp_spriteSetFrame(SPRITE_S
                           A  8755    .LINE 756
                           A  8756    
042748 01040000            A  8757    	LD	BC,4
04274C C5                  A  8758    	PUSH	BC
04274D DD7EF1              A  8759    	LD	A,(IX+%FFFFFFF1)
042750 C614                A  8760    	ADD	A,%14
042752 4F                  A  8761    	LD	C,A
042753 0600                A  8762    	LD	B,%0
042755 C5                  A  8763    	PUSH	BC
042756 CD C0 3F 04         A  8764    	CALL	_vdp_spriteSetFrame
04275A C1                  A  8765    	POP	BC
04275B C1                  A  8766    	POP	BC
                           A  8767    ;  757				game.snake[i].width = game.
                           A  8768    .LINE 757
                           A  8769    
04275C DD07F2              A  8770    	LD	BC,(IX+%FFFFFFF2)
04275F DD27FD              A  8771    	LD	HL,(IX+%FFFFFFFD)
042762 09                  A  8772    	ADD	HL,BC
042763 DD2F83              A  8773    	LD	(IX+%FFFFFF83),HL
042766 3A 43 63 04         A  8774    	LD	A,(_game+1222)
04276A 0600                A  8775    	LD	B,%0
04276C DD3183              A  8776    	LD	IY,(IX+%FFFFFF83)
04276F FD7704              A  8777    	LD	(IY+%4),A
042772 FD7005              A  8778    	LD	(IY+%5),B
                           A  8779    ;  758				game.snake[i].width = game.
                           A  8780    .LINE 758
                           A  8781    
042775 3A 44 63 04         A  8782    	LD	A,(_game+1223)
042779 FD7704              A  8783    	LD	(IY+%4),A
04277C FD7005              A  8784    	LD	(IY+%5),B
                           A  8785    ;  759				continue;
                           A  8786    .LINE 759
                           A  8787    
04277F 18 67               A  8788    	JR	L_269
                           A  8789    ;  760			}
                           A  8790    ;  761			else if (nextRect.x > currentRe
042781                     A  8791    L_251:
                           A  8792    .LINE 761
                           A  8793    
042781 DD07E9              A  8794    	LD	BC,(IX+%FFFFFFE9)
042784 DD27F5              A  8795    	LD	HL,(IX+%FFFFFFF5)
042787 B7                  A  8796    	OR	A,A
042788 40ED42              A  8797    	SBC.SIS	HL,BC
04278B 30 5B               A  8798    	JR	NC,L_269
04278D DD07F7              A  8799    	LD	BC,(IX+%FFFFFFF7)
042790 DD27EB              A  8800    	LD	HL,(IX+%FFFFFFEB)
042793 B7                  A  8801    	OR	A,A
042794 40ED42              A  8802    	SBC.SIS	HL,BC
042797 20 4F               A  8803    	JR	NZ,L_269
042799 DD07F5              A  8804    	LD	BC,(IX+%FFFFFFF5)
04279C DD27E1              A  8805    	LD	HL,(IX+%FFFFFFE1)
04279F B7                  A  8806    	OR	A,A
0427A0 40ED42              A  8807    	SBC.SIS	HL,BC
0427A3 20 43               A  8808    	JR	NZ,L_269
0427A5 DD07F7              A  8809    	LD	BC,(IX+%FFFFFFF7)
0427A8 DD27E3              A  8810    	LD	HL,(IX+%FFFFFFE3)
0427AB B7                  A  8811    	OR	A,A
0427AC 40ED42              A  8812    	SBC.SIS	HL,BC
0427AF 30 37               A  8813    	JR	NC,L_269
                           A  8814    ;  762				vdp_spriteSetFrame(SPRITE_S
                           A  8815    .LINE 762
                           A  8816    
0427B1 01040000            A  8817    	LD	BC,4
0427B5 C5                  A  8818    	PUSH	BC
0427B6 DD7EF1              A  8819    	LD	A,(IX+%FFFFFFF1)
0427B9 C614                A  8820    	ADD	A,%14
0427BB 4F                  A  8821    	LD	C,A
0427BC 0600                A  8822    	LD	B,%0
0427BE C5                  A  8823    	PUSH	BC
0427BF CD C0 3F 04         A  8824    	CALL	_vdp_spriteSetFrame
0427C3 C1                  A  8825    	POP	BC
0427C4 C1                  A  8826    	POP	BC
                           A  8827    ;  763				game.snake[i].width = game.
                           A  8828    .LINE 763
                           A  8829    
0427C5 DD07F2              A  8830    	LD	BC,(IX+%FFFFFFF2)
0427C8 DD27FD              A  8831    	LD	HL,(IX+%FFFFFFFD)
0427CB 09                  A  8832    	ADD	HL,BC
0427CC DD2F80              A  8833    	LD	(IX+%FFFFFF80),HL
0427CF 3A 43 63 04         A  8834    	LD	A,(_game+1222)
0427D3 0600                A  8835    	LD	B,%0
0427D5 DD3180              A  8836    	LD	IY,(IX+%FFFFFF80)
0427D8 FD7704              A  8837    	LD	(IY+%4),A
0427DB FD7005              A  8838    	LD	(IY+%5),B
                           A  8839    ;  764				game.snake[i].width = game.
                           A  8840    .LINE 764
                           A  8841    
0427DE 3A 44 63 04         A  8842    	LD	A,(_game+1223)
0427E2 FD7704              A  8843    	LD	(IY+%4),A
0427E5 FD7005              A  8844    	LD	(IY+%5),B
                           A  8845    ;  765				continue;
                           A  8846    ;  766			}				
                           A  8847    ;  767	
                           A  8848    ;  768		}
0427E8                     A  8849    L_269:
                           A  8850    .LINE 768
                           A  8851    
0427E8 DD34F1              A  8852    	INC	(IX+%FFFFFFF1)
0427EB                     A  8853    L_270:
0427EB DD7EF1              A  8854    	LD	A,(IX+%FFFFFFF1)
0427EE 21 8B 5E 04         A  8855    	LD	HL,_game+14
0427F2 BE                  A  8856    	CP	A,(HL)
0427F3 DA 9F 23 04         A  8857    	JR	C,L_268
                           A  8858    ;  769		
                           A  8859    ;  770		//Tail
                           A  8860    ;  771		
                           A  8861    ;  772		if (game.snake[game.snake_length].x
                           A  8862    .LINE 772
                           A  8863    
0427F7 01 8C 5E 04         A  8864    	LD	BC,_game+15
0427FB DD0FDE              A  8865    	LD	(IX+%FFFFFFDE),BC
0427FE DD0FBC              A  8866    	LD	(IX+%FFFFFFBC),BC
042801 3A 8B 5E 04         A  8867    	LD	A,(_game+14)
042805 B7ED62              A  8868    	UEXT	HL
042808 6F                  A  8869    	LD	L,A
042809 29                  A  8870    	ADD	HL,HL
04280A 29                  A  8871    	ADD	HL,HL
04280B 29                  A  8872    	ADD	HL,HL
04280C DD07DE              A  8873    	LD	BC,(IX+%FFFFFFDE)
04280F 09                  A  8874    	ADD	HL,BC
042810 E5D1                A  8875    	LD	DE,HL
042812 3A 8B 5E 04         A  8876    	LD	A,(_game+14)
042816 B7ED62              A  8877    	UEXT	HL
042819 6F                  A  8878    	LD	L,A
04281A E5C1                A  8879    	LD	BC,HL
04281C 0B                  A  8880    	DEC	BC
04281D C5E1                A  8881    	LD	HL,BC
04281F 29                  A  8882    	ADD	HL,HL
042820 29                  A  8883    	ADD	HL,HL
042821 29                  A  8884    	ADD	HL,HL
042822 DD07DE              A  8885    	LD	BC,(IX+%FFFFFFDE)
042825 09                  A  8886    	ADD	HL,BC
042826 E5FDE1              A  8887    	LD	IY,HL
042829 FD0700              A  8888    	LD	BC,(IY+%0)
04282C D5FDE1              A  8889    	LD	IY,DE
04282F FD2700              A  8890    	LD	HL,(IY+%0)
042832 B7                  A  8891    	OR	A,A
042833 40ED42              A  8892    	SBC.SIS	HL,BC
042836 30 5C               A  8893    	JR	NC,L_282
042838 DD07DE              A  8894    	LD	BC,(IX+%FFFFFFDE)
04283B DD0FBC              A  8895    	LD	(IX+%FFFFFFBC),BC
04283E DD07DE              A  8896    	LD	BC,(IX+%FFFFFFDE)
042841 DD0FCB              A  8897    	LD	(IX+%FFFFFFCB),BC
042844 3A 8B 5E 04         A  8898    	LD	A,(_game+14)
042848 B7ED62              A  8899    	UEXT	HL
04284B 6F                  A  8900    	LD	L,A
04284C 29                  A  8901    	ADD	HL,HL
04284D 29                  A  8902    	ADD	HL,HL
04284E 29                  A  8903    	ADD	HL,HL
04284F DD07DE              A  8904    	LD	BC,(IX+%FFFFFFDE)
042852 09                  A  8905    	ADD	HL,BC
042853 E5D1                A  8906    	LD	DE,HL
042855 3A 8B 5E 04         A  8907    	LD	A,(_game+14)
042859 B7ED62              A  8908    	UEXT	HL
04285C 6F                  A  8909    	LD	L,A
04285D E5C1                A  8910    	LD	BC,HL
04285F 0B                  A  8911    	DEC	BC
042860 C5E1                A  8912    	LD	HL,BC
042862 29                  A  8913    	ADD	HL,HL
042863 29                  A  8914    	ADD	HL,HL
042864 29                  A  8915    	ADD	HL,HL
042865 DD07DE              A  8916    	LD	BC,(IX+%FFFFFFDE)
042868 09                  A  8917    	ADD	HL,BC
042869 E5FDE1              A  8918    	LD	IY,HL
04286C FD0702              A  8919    	LD	BC,(IY+%2)
04286F D5FDE1              A  8920    	LD	IY,DE
042872 FD2702              A  8921    	LD	HL,(IY+%2)
042875 B7                  A  8922    	OR	A,A
042876 40ED42              A  8923    	SBC.SIS	HL,BC
042879 20 19               A  8924    	JR	NZ,L_282
                           A  8925    ;  773			vdp_spriteSetFrame(SPRITE_START
                           A  8926    .LINE 773
                           A  8927    
04287B 01090000            A  8928    	LD	BC,9
04287F C5                  A  8929    	PUSH	BC
042880 3A 8B 5E 04         A  8930    	LD	A,(_game+14)
042884 C614                A  8931    	ADD	A,%14
042886 4F                  A  8932    	LD	C,A
042887 0600                A  8933    	LD	B,%0
042889 C5                  A  8934    	PUSH	BC
04288A CD C0 3F 04         A  8935    	CALL	_vdp_spriteSetFrame
04288E C1                  A  8936    	POP	BC
04288F C1                  A  8937    	POP	BC
                           A  8938    ;  774		else if (game.snake[game.snake_leng
                           A  8939    .LINE 774
                           A  8940    
042890 C3 52 2A 04         A  8941    	JR	L_284
042894                     A  8942    L_282:
042894 DD07BC              A  8943    	LD	BC,(IX+%FFFFFFBC)
042897 DD0FDB              A  8944    	LD	(IX+%FFFFFFDB),BC
04289A DD0FBF              A  8945    	LD	(IX+%FFFFFFBF),BC
04289D 3A 8B 5E 04         A  8946    	LD	A,(_game+14)
0428A1 B7ED62              A  8947    	UEXT	HL
0428A4 6F                  A  8948    	LD	L,A
0428A5 29                  A  8949    	ADD	HL,HL
0428A6 29                  A  8950    	ADD	HL,HL
0428A7 29                  A  8951    	ADD	HL,HL
0428A8 DD07DB              A  8952    	LD	BC,(IX+%FFFFFFDB)
0428AB 09                  A  8953    	ADD	HL,BC
0428AC E5FDE1              A  8954    	LD	IY,HL
0428AF 3A 8B 5E 04         A  8955    	LD	A,(_game+14)
0428B3 B7ED62              A  8956    	UEXT	HL
0428B6 6F                  A  8957    	LD	L,A
0428B7 2B                  A  8958    	DEC	HL
0428B8 29                  A  8959    	ADD	HL,HL
0428B9 29                  A  8960    	ADD	HL,HL
0428BA 29                  A  8961    	ADD	HL,HL
0428BB DD07DB              A  8962    	LD	BC,(IX+%FFFFFFDB)
0428BE 09                  A  8963    	ADD	HL,BC
0428BF FD0700              A  8964    	LD	BC,(IY+%0)
0428C2 E5FDE1              A  8965    	LD	IY,HL
0428C5 FD2700              A  8966    	LD	HL,(IY+%0)
0428C8 B7                  A  8967    	OR	A,A
0428C9 40ED42              A  8968    	SBC.SIS	HL,BC
0428CC 30 5C               A  8969    	JR	NC,L_280
0428CE DD07DB              A  8970    	LD	BC,(IX+%FFFFFFDB)
0428D1 DD0FBF              A  8971    	LD	(IX+%FFFFFFBF),BC
0428D4 DD07DB              A  8972    	LD	BC,(IX+%FFFFFFDB)
0428D7 DD0FCB              A  8973    	LD	(IX+%FFFFFFCB),BC
0428DA 3A 8B 5E 04         A  8974    	LD	A,(_game+14)
0428DE B7ED62              A  8975    	UEXT	HL
0428E1 6F                  A  8976    	LD	L,A
0428E2 29                  A  8977    	ADD	HL,HL
0428E3 29                  A  8978    	ADD	HL,HL
0428E4 29                  A  8979    	ADD	HL,HL
0428E5 DD07DB              A  8980    	LD	BC,(IX+%FFFFFFDB)
0428E8 09                  A  8981    	ADD	HL,BC
0428E9 E5D1                A  8982    	LD	DE,HL
0428EB 3A 8B 5E 04         A  8983    	LD	A,(_game+14)
0428EF B7ED62              A  8984    	UEXT	HL
0428F2 6F                  A  8985    	LD	L,A
0428F3 E5C1                A  8986    	LD	BC,HL
0428F5 0B                  A  8987    	DEC	BC
0428F6 C5E1                A  8988    	LD	HL,BC
0428F8 29                  A  8989    	ADD	HL,HL
0428F9 29                  A  8990    	ADD	HL,HL
0428FA 29                  A  8991    	ADD	HL,HL
0428FB DD07DB              A  8992    	LD	BC,(IX+%FFFFFFDB)
0428FE 09                  A  8993    	ADD	HL,BC
0428FF E5FDE1              A  8994    	LD	IY,HL
042902 FD0702              A  8995    	LD	BC,(IY+%2)
042905 D5FDE1              A  8996    	LD	IY,DE
042908 FD2702              A  8997    	LD	HL,(IY+%2)
04290B B7                  A  8998    	OR	A,A
04290C 40ED42              A  8999    	SBC.SIS	HL,BC
04290F 20 19               A  9000    	JR	NZ,L_280
                           A  9001    ;  775			vdp_spriteSetFrame(SPRITE_START
                           A  9002    .LINE 775
                           A  9003    
042911 01070000            A  9004    	LD	BC,7
042915 C5                  A  9005    	PUSH	BC
042916 3A 8B 5E 04         A  9006    	LD	A,(_game+14)
04291A C614                A  9007    	ADD	A,%14
04291C 4F                  A  9008    	LD	C,A
04291D 0600                A  9009    	LD	B,%0
04291F C5                  A  9010    	PUSH	BC
042920 CD C0 3F 04         A  9011    	CALL	_vdp_spriteSetFrame
042924 C1                  A  9012    	POP	BC
042925 C1                  A  9013    	POP	BC
                           A  9014    ;  776		else if (game.snake[game.snake_leng
                           A  9015    .LINE 776
                           A  9016    
042926 C3 52 2A 04         A  9017    	JR	L_284
04292A                     A  9018    L_280:
04292A DD07BF              A  9019    	LD	BC,(IX+%FFFFFFBF)
04292D DD0FD8              A  9020    	LD	(IX+%FFFFFFD8),BC
042930 DD0FC2              A  9021    	LD	(IX+%FFFFFFC2),BC
042933 3A 8B 5E 04         A  9022    	LD	A,(_game+14)
042937 B7ED62              A  9023    	UEXT	HL
04293A 6F                  A  9024    	LD	L,A
04293B 29                  A  9025    	ADD	HL,HL
04293C 29                  A  9026    	ADD	HL,HL
04293D 29                  A  9027    	ADD	HL,HL
04293E DD07D8              A  9028    	LD	BC,(IX+%FFFFFFD8)
042941 09                  A  9029    	ADD	HL,BC
042942 E5D1                A  9030    	LD	DE,HL
042944 3A 8B 5E 04         A  9031    	LD	A,(_game+14)
042948 B7ED62              A  9032    	UEXT	HL
04294B 6F                  A  9033    	LD	L,A
04294C E5C1                A  9034    	LD	BC,HL
04294E 0B                  A  9035    	DEC	BC
04294F C5E1                A  9036    	LD	HL,BC
042951 29                  A  9037    	ADD	HL,HL
042952 29                  A  9038    	ADD	HL,HL
042953 29                  A  9039    	ADD	HL,HL
042954 DD07D8              A  9040    	LD	BC,(IX+%FFFFFFD8)
042957 09                  A  9041    	ADD	HL,BC
042958 E5FDE1              A  9042    	LD	IY,HL
04295B FD0700              A  9043    	LD	BC,(IY+%0)
04295E D5FDE1              A  9044    	LD	IY,DE
042961 FD2700              A  9045    	LD	HL,(IY+%0)
042964 B7                  A  9046    	OR	A,A
042965 40ED42              A  9047    	SBC.SIS	HL,BC
042968 20 5C               A  9048    	JR	NZ,L_278
04296A DD07D8              A  9049    	LD	BC,(IX+%FFFFFFD8)
04296D DD0FC2              A  9050    	LD	(IX+%FFFFFFC2),BC
042970 DD07D8              A  9051    	LD	BC,(IX+%FFFFFFD8)
042973 DD0FCB              A  9052    	LD	(IX+%FFFFFFCB),BC
042976 3A 8B 5E 04         A  9053    	LD	A,(_game+14)
04297A B7ED62              A  9054    	UEXT	HL
04297D 6F                  A  9055    	LD	L,A
04297E 29                  A  9056    	ADD	HL,HL
04297F 29                  A  9057    	ADD	HL,HL
042980 29                  A  9058    	ADD	HL,HL
042981 DD07D8              A  9059    	LD	BC,(IX+%FFFFFFD8)
042984 09                  A  9060    	ADD	HL,BC
042985 E5D1                A  9061    	LD	DE,HL
042987 3A 8B 5E 04         A  9062    	LD	A,(_game+14)
04298B B7ED62              A  9063    	UEXT	HL
04298E 6F                  A  9064    	LD	L,A
04298F E5C1                A  9065    	LD	BC,HL
042991 0B                  A  9066    	DEC	BC
042992 C5E1                A  9067    	LD	HL,BC
042994 29                  A  9068    	ADD	HL,HL
042995 29                  A  9069    	ADD	HL,HL
042996 29                  A  9070    	ADD	HL,HL
042997 DD07D8              A  9071    	LD	BC,(IX+%FFFFFFD8)
04299A 09                  A  9072    	ADD	HL,BC
04299B E5FDE1              A  9073    	LD	IY,HL
04299E FD0702              A  9074    	LD	BC,(IY+%2)
0429A1 D5FDE1              A  9075    	LD	IY,DE
0429A4 FD2702              A  9076    	LD	HL,(IY+%2)
0429A7 B7                  A  9077    	OR	A,A
0429A8 40ED42              A  9078    	SBC.SIS	HL,BC
0429AB 30 19               A  9079    	JR	NC,L_278
                           A  9080    ;  777			vdp_spriteSetFrame(SPRITE_START
                           A  9081    .LINE 777
                           A  9082    
0429AD 01060000            A  9083    	LD	BC,6
0429B1 C5                  A  9084    	PUSH	BC
0429B2 3A 8B 5E 04         A  9085    	LD	A,(_game+14)
0429B6 C614                A  9086    	ADD	A,%14
0429B8 4F                  A  9087    	LD	C,A
0429B9 0600                A  9088    	LD	B,%0
0429BB C5                  A  9089    	PUSH	BC
0429BC CD C0 3F 04         A  9090    	CALL	_vdp_spriteSetFrame
0429C0 C1                  A  9091    	POP	BC
0429C1 C1                  A  9092    	POP	BC
                           A  9093    ;  778		else if (game.snake[game.snake_leng
                           A  9094    .LINE 778
                           A  9095    
0429C2 C3 52 2A 04         A  9096    	JR	L_284
0429C6                     A  9097    L_278:
0429C6 DD07C2              A  9098    	LD	BC,(IX+%FFFFFFC2)
0429C9 DD0FD5              A  9099    	LD	(IX+%FFFFFFD5),BC
0429CC DD0FCB              A  9100    	LD	(IX+%FFFFFFCB),BC
0429CF 3A 8B 5E 04         A  9101    	LD	A,(_game+14)
0429D3 B7ED62              A  9102    	UEXT	HL
0429D6 6F                  A  9103    	LD	L,A
0429D7 29                  A  9104    	ADD	HL,HL
0429D8 29                  A  9105    	ADD	HL,HL
0429D9 29                  A  9106    	ADD	HL,HL
0429DA DD07D5              A  9107    	LD	BC,(IX+%FFFFFFD5)
0429DD 09                  A  9108    	ADD	HL,BC
0429DE E5D1                A  9109    	LD	DE,HL
0429E0 3A 8B 5E 04         A  9110    	LD	A,(_game+14)
0429E4 B7ED62              A  9111    	UEXT	HL
0429E7 6F                  A  9112    	LD	L,A
0429E8 E5C1                A  9113    	LD	BC,HL
0429EA 0B                  A  9114    	DEC	BC
0429EB C5E1                A  9115    	LD	HL,BC
0429ED 29                  A  9116    	ADD	HL,HL
0429EE 29                  A  9117    	ADD	HL,HL
0429EF 29                  A  9118    	ADD	HL,HL
0429F0 DD07D5              A  9119    	LD	BC,(IX+%FFFFFFD5)
0429F3 09                  A  9120    	ADD	HL,BC
0429F4 E5FDE1              A  9121    	LD	IY,HL
0429F7 FD0700              A  9122    	LD	BC,(IY+%0)
0429FA D5FDE1              A  9123    	LD	IY,DE
0429FD FD2700              A  9124    	LD	HL,(IY+%0)
042A00 B7                  A  9125    	OR	A,A
042A01 40ED42              A  9126    	SBC.SIS	HL,BC
042A04 20 4C               A  9127    	JR	NZ,L_284
042A06 DD07D5              A  9128    	LD	BC,(IX+%FFFFFFD5)
042A09 DD0FCB              A  9129    	LD	(IX+%FFFFFFCB),BC
042A0C 3A 8B 5E 04         A  9130    	LD	A,(_game+14)
042A10 B7ED62              A  9131    	UEXT	HL
042A13 6F                  A  9132    	LD	L,A
042A14 29                  A  9133    	ADD	HL,HL
042A15 29                  A  9134    	ADD	HL,HL
042A16 29                  A  9135    	ADD	HL,HL
042A17 DD07D5              A  9136    	LD	BC,(IX+%FFFFFFD5)
042A1A 09                  A  9137    	ADD	HL,BC
042A1B E5FDE1              A  9138    	LD	IY,HL
042A1E 3A 8B 5E 04         A  9139    	LD	A,(_game+14)
042A22 B7ED62              A  9140    	UEXT	HL
042A25 6F                  A  9141    	LD	L,A
042A26 2B                  A  9142    	DEC	HL
042A27 29                  A  9143    	ADD	HL,HL
042A28 29                  A  9144    	ADD	HL,HL
042A29 29                  A  9145    	ADD	HL,HL
042A2A DD07D5              A  9146    	LD	BC,(IX+%FFFFFFD5)
042A2D 09                  A  9147    	ADD	HL,BC
042A2E FD0702              A  9148    	LD	BC,(IY+%2)
042A31 E5FDE1              A  9149    	LD	IY,HL
042A34 FD2702              A  9150    	LD	HL,(IY+%2)
042A37 B7                  A  9151    	OR	A,A
042A38 40ED42              A  9152    	SBC.SIS	HL,BC
042A3B 30 15               A  9153    	JR	NC,L_284
                           A  9154    ;  779			vdp_spriteSetFrame(SPRITE_START
                           A  9155    .LINE 779
                           A  9156    
042A3D 01080000            A  9157    	LD	BC,8
042A41 C5                  A  9158    	PUSH	BC
042A42 3A 8B 5E 04         A  9159    	LD	A,(_game+14)
042A46 C614                A  9160    	ADD	A,%14
042A48 4F                  A  9161    	LD	C,A
042A49 0600                A  9162    	LD	B,%0
042A4B C5                  A  9163    	PUSH	BC
042A4C CD C0 3F 04         A  9164    	CALL	_vdp_spriteSetFrame
042A50 C1                  A  9165    	POP	BC
042A51 C1                  A  9166    	POP	BC
042A52                     A  9167    L_284:
                           A  9168    ;  780		vdp_spriteShow(SPRITE_START + game.
                           A  9169    .LINE 780
                           A  9170    
042A52 3A 8B 5E 04         A  9171    	LD	A,(_game+14)
042A56 C614                A  9172    	ADD	A,%14
042A58 4F                  A  9173    	LD	C,A
042A59 0600                A  9174    	LD	B,%0
042A5B C5                  A  9175    	PUSH	BC
042A5C C5                  A  9176    	PUSH	BC
042A5D E5                  A  9177    	PUSH	HL
042A5E C5E1                A  9178    	LD	HL,BC
042A60 015FFFFF            A  9179    	LD	BC,-161
042A64 CD F1 4B 04         A  9180    	CALL	__istix
042A68 E1                  A  9181    	POP	HL
042A69 C1                  A  9182    	POP	BC
042A6A CD 10 40 04         A  9183    	CALL	_vdp_spriteShow
042A6E 015FFFFF            A  9184    	LD	BC,-161
042A72 E5                  A  9185    	PUSH	HL
042A73 CD BB 55 04         A  9186    	CALL	__ildix
042A77 E5C1                A  9187    	LD	BC,HL
042A79 E1                  A  9188    	POP	HL
042A7A D1                  A  9189    	POP	DE
                           A  9190    ;  781	
                           A  9191    ;  782		//Check for collisions with yoursel
                           A  9192    ;  783		
                           A  9193    ;  784		for (j = 1; j < game.snake_length; 
                           A  9194    .LINE 784
                           A  9195    
042A7B DD36D401            A  9196    	LD	(IX+%FFFFFFD4),%1
042A7F C3 8C 2B 04         A  9197    	JR	L_289
042A83                     A  9198    L_287:
                           A  9199    ;  785			if (check_collision(game.snake[
                           A  9200    .LINE 785
                           A  9201    
042A83 DD17CB              A  9202    	LD	DE,(IX+%FFFFFFCB)
042A86 217DFFFF            A  9203    	LD	HL,-131
042A8A E5                  A  9204    	PUSH	HL
042A8B C5E1                A  9205    	LD	HL,BC
042A8D 0177FFFF            A  9206    	LD	BC,-137	; spill
042A91 CD F1 4B 04         A  9207    	CALL	__istix
042A95 E1                  A  9208    	POP	HL
042A96 DDE5C1              A  9209    	LD	BC,IX
042A99 E5                  A  9210    	PUSH	HL
042A9A C5E1                A  9211    	LD	HL,BC	; unspill
042A9C 0174FFFF            A  9212    	LD	BC,-140	; spill
042AA0 CD F1 4B 04         A  9213    	CALL	__istix
042AA4 E1                  A  9214    	POP	HL
042AA5 0177FFFF            A  9215    	LD	BC,-137	; unspill
042AA9 E5                  A  9216    	PUSH	HL
042AAA CD BB 55 04         A  9217    	CALL	__ildix
042AAE 0177FFFF            A  9218    	LD	BC,-137	; spill
042AB2 CD F1 4B 04         A  9219    	CALL	__istix
042AB6 E1                  A  9220    	POP	HL
042AB7 0174FFFF            A  9221    	LD	BC,-140	; unspill
042ABB E5                  A  9222    	PUSH	HL
042ABC CD BB 55 04         A  9223    	CALL	__ildix
042AC0 E5C1                A  9224    	LD	BC,HL
042AC2 E1                  A  9225    	POP	HL
042AC3 09                  A  9226    	ADD	HL,BC
042AC4 0177FFFF            A  9227    	LD	BC,-137	; unspill
042AC8 E5                  A  9228    	PUSH	HL
042AC9 CD BB 55 04         A  9229    	CALL	__ildix
042ACD E5C1                A  9230    	LD	BC,HL
042ACF E1                  A  9231    	POP	HL
042AD0 ED1F                A  9232    	LD	(HL),DE
042AD2 DD7ED4              A  9233    	LD	A,(IX+%FFFFFFD4)
042AD5 B7ED62              A  9234    	UEXT	HL
042AD8 6F                  A  9235    	LD	L,A
042AD9 29                  A  9236    	ADD	HL,HL
042ADA 29                  A  9237    	ADD	HL,HL
042ADB 29                  A  9238    	ADD	HL,HL
042ADC FD217DFF FF         A  9239    	LD	IY,-131
042AE1 DDE5D1              A  9240    	LD	DE,IX
042AE4 FD19                A  9241    	ADD	IY,DE
042AE6 FD1700              A  9242    	LD	DE,(IY)
042AE9 19                  A  9243    	ADD	HL,DE
042AEA C5                  A  9244    	PUSH	BC
042AEB C5                  A  9245    	PUSH	BC
042AEC C5                  A  9246    	PUSH	BC
042AED FD210000 00         A  9247    	LD	IY,0
042AF2 FD39                A  9248    	ADD	IY,SP
042AF4 FDE5D1              A  9249    	LD	DE,IY
042AF7 01080000            A  9250    	LD	BC,8
042AFB EDB0                A  9251    	LDIR	
042AFD 217DFFFF            A  9252    	LD	HL,-131
042B01 DDE5D1              A  9253    	LD	DE,IX
042B04 19                  A  9254    	ADD	HL,DE
042B05 ED27                A  9255    	LD	HL,(HL)
042B07 C5                  A  9256    	PUSH	BC
042B08 C5                  A  9257    	PUSH	BC
042B09 C5                  A  9258    	PUSH	BC
042B0A FD210000 00         A  9259    	LD	IY,0
042B0F FD39                A  9260    	ADD	IY,SP
042B11 FDE5D1              A  9261    	LD	DE,IY
042B14 01080000            A  9262    	LD	BC,8
042B18 EDB0                A  9263    	LDIR	
042B1A C5                  A  9264    	PUSH	BC
042B1B E5                  A  9265    	PUSH	HL
042B1C C5E1                A  9266    	LD	HL,BC
042B1E 015FFFFF            A  9267    	LD	BC,-161
042B22 CD F1 4B 04         A  9268    	CALL	__istix
042B26 E1                  A  9269    	POP	HL
042B27 C1                  A  9270    	POP	BC
042B28 CD 4C 1E 04         A  9271    	CALL	_check_collision
042B2C 015FFFFF            A  9272    	LD	BC,-161
042B30 E5                  A  9273    	PUSH	HL
042B31 CD BB 55 04         A  9274    	CALL	__ildix
042B35 E5C1                A  9275    	LD	BC,HL
042B37 E1                  A  9276    	POP	HL
042B38 D1                  A  9277    	POP	DE
042B39 D1                  A  9278    	POP	DE
042B3A D1                  A  9279    	POP	DE
042B3B D1                  A  9280    	POP	DE
042B3C D1                  A  9281    	POP	DE
042B3D D1                  A  9282    	POP	DE
042B3E B7ED62              A  9283    	UEXT	HL
042B41 6F                  A  9284    	LD	L,A
042B42 11010000            A  9285    	LD	DE,1
042B46 B7                  A  9286    	OR	A,A
042B47 ED52                A  9287    	SBC	HL,DE
042B49 20 3E               A  9288    	JR	NZ,L_288
                           A  9289    ;  786				play_sound(0, 120, 200, 440
                           A  9290    .LINE 786
                           A  9291    
042B4B 11B80100            A  9292    	LD	DE,440
042B4F D5                  A  9293    	PUSH	DE
042B50 11C80000            A  9294    	LD	DE,200
042B54 D5                  A  9295    	PUSH	DE
042B55 11780000            A  9296    	LD	DE,120
042B59 D5                  A  9297    	PUSH	DE
042B5A 11000000            A  9298    	LD	DE,0
042B5E D5                  A  9299    	PUSH	DE
042B5F C5                  A  9300    	PUSH	BC
042B60 E5                  A  9301    	PUSH	HL
042B61 C5E1                A  9302    	LD	HL,BC
042B63 015FFFFF            A  9303    	LD	BC,-161
042B67 CD F1 4B 04         A  9304    	CALL	__istix
042B6B E1                  A  9305    	POP	HL
042B6C C1                  A  9306    	POP	BC
042B6D CD F9 02 04         A  9307    	CALL	_play_sound
042B71 015FFFFF            A  9308    	LD	BC,-161
042B75 E5                  A  9309    	PUSH	HL
042B76 CD BB 55 04         A  9310    	CALL	__ildix
042B7A E5C1                A  9311    	LD	BC,HL
042B7C E1                  A  9312    	POP	HL
042B7D D1                  A  9313    	POP	DE
042B7E D1                  A  9314    	POP	DE
042B7F D1                  A  9315    	POP	DE
042B80 D1                  A  9316    	POP	DE
                           A  9317    ;  787				game.game_over = true;
                           A  9318    .LINE 787
                           A  9319    
042B81 3E01                A  9320    	LD	A,%1
042B83 32 3E 63 04         A  9321    	LD	(_game+1217),A
                           A  9322    ;  788				break;
                           A  9323    .LINE 788
                           A  9324    
042B87 18 0F               A  9325    	JR	L_293
                           A  9326    ;  789			}
                           A  9327    ;  790		}
042B89                     A  9328    L_288:
                           A  9329    .LINE 790
                           A  9330    
042B89 DD34D4              A  9331    	INC	(IX+%FFFFFFD4)
042B8C                     A  9332    L_289:
042B8C DD7ED4              A  9333    	LD	A,(IX+%FFFFFFD4)
042B8F 21 8B 5E 04         A  9334    	LD	HL,_game+14
042B93 BE                  A  9335    	CP	A,(HL)
042B94 DA 83 2A 04         A  9336    	JR	C,L_287
042B98                     A  9337    L_293:
                           A  9338    ;  791		
                           A  9339    ;  792		//Food eaten?
                           A  9340    ;  793		
                           A  9341    ;  794		if (check_collision(game.snake[0], 
                           A  9342    .LINE 794
                           A  9343    
042B98 C5                  A  9344    	PUSH	BC
042B99 C5                  A  9345    	PUSH	BC
042B9A C5                  A  9346    	PUSH	BC
042B9B B7                  A  9347    	OR	A,A
042B9C ED62                A  9348    	SBC	HL,HL
042B9E 39                  A  9349    	ADD	HL,SP
042B9F E5D1                A  9350    	LD	DE,HL
042BA1 21 81 5E 04         A  9351    	LD	HL,_game+4
042BA5 01080000            A  9352    	LD	BC,8
042BA9 EDB0                A  9353    	LDIR	
042BAB C5                  A  9354    	PUSH	BC
042BAC C5                  A  9355    	PUSH	BC
042BAD C5                  A  9356    	PUSH	BC
042BAE B7                  A  9357    	OR	A,A
042BAF ED62                A  9358    	SBC	HL,HL
042BB1 39                  A  9359    	ADD	HL,SP
042BB2 E5D1                A  9360    	LD	DE,HL
042BB4 21 8C 5E 04         A  9361    	LD	HL,_game+15
042BB8 01080000            A  9362    	LD	BC,8
042BBC EDB0                A  9363    	LDIR	
042BBE CD 4C 1E 04         A  9364    	CALL	_check_collision
042BC2 C1                  A  9365    	POP	BC
042BC3 C1                  A  9366    	POP	BC
042BC4 C1                  A  9367    	POP	BC
042BC5 C1                  A  9368    	POP	BC
042BC6 C1                  A  9369    	POP	BC
042BC7 C1                  A  9370    	POP	BC
042BC8 B7                  A  9371    	OR	A,A
042BC9 CA 79 2C 04         A  9372    	JR	Z,L_294
                           A  9373    ;  795		
                           A  9374    ;  796			grow_snake();
                           A  9375    .LINE 796
                           A  9376    
042BCD CD 9B 2C 04         A  9377    	CALL	_grow_snake
                           A  9378    ;  797			game.current_food.x = prand(32,
                           A  9379    .LINE 797
                           A  9380    
042BD1 01 81 5E 04         A  9381    	LD	BC,_game+4
042BD5 217AFFFF            A  9382    	LD	HL,-134
042BD9 DDE5D1              A  9383    	LD	DE,IX
042BDC 19                  A  9384    	ADD	HL,DE
042BDD ED0F                A  9385    	LD	(HL),BC
042BDF ED4B 7D 5E 04       A  9386    	LD	BC,(_game)
042BE4 CD 9B 4D 04         A  9387    	CALL	__stoiu
042BE8 E5FDE1              A  9388    	LD	IY,HL
042BEB ED03E0              A  9389    	LEA	BC,IY+%FFFFFFE0
042BEE C5                  A  9390    	PUSH	BC
042BEF 01200000            A  9391    	LD	BC,32
042BF3 C5                  A  9392    	PUSH	BC
042BF4 CD 89 1F 04         A  9393    	CALL	_prand
042BF8 C1                  A  9394    	POP	BC
042BF9 C1                  A  9395    	POP	BC
042BFA FD217AFF FF         A  9396    	LD	IY,-134
042BFF DDE5C1              A  9397    	LD	BC,IX
042C02 FD09                A  9398    	ADD	IY,BC
042C04 FD3700              A  9399    	LD	IY,(IY)
042C07 E5C1                A  9400    	LD	BC,HL
042C09 FD7100              A  9401    	LD	(IY+%0),C
042C0C FD7001              A  9402    	LD	(IY+%1),B
                           A  9403    ;  798			game.current_food.y = prand(32,
                           A  9404    .LINE 798
                           A  9405    
042C0F ED4B 7F 5E 04       A  9406    	LD	BC,(_game+2)
042C14 CD 9B 4D 04         A  9407    	CALL	__stoiu
042C18 E5FDE1              A  9408    	LD	IY,HL
042C1B ED03E0              A  9409    	LEA	BC,IY+%FFFFFFE0
042C1E C5                  A  9410    	PUSH	BC
042C1F 01200000            A  9411    	LD	BC,32
042C23 C5                  A  9412    	PUSH	BC
042C24 CD 89 1F 04         A  9413    	CALL	_prand
042C28 C1                  A  9414    	POP	BC
042C29 C1                  A  9415    	POP	BC
042C2A FD217AFF FF         A  9416    	LD	IY,-134
042C2F DDE5C1              A  9417    	LD	BC,IX
042C32 FD09                A  9418    	ADD	IY,BC
042C34 FD3700              A  9419    	LD	IY,(IY)
042C37 E5C1                A  9420    	LD	BC,HL
042C39 FD7102              A  9421    	LD	(IY+%2),C
042C3C FD7003              A  9422    	LD	(IY+%3),B
                           A  9423    ;  799			vdp_spriteMoveTo(SPRITE_FOOD, g
                           A  9424    .LINE 799
                           A  9425    
042C3F 217AFFFF            A  9426    	LD	HL,-134
042C43 DDE5C1              A  9427    	LD	BC,IX
042C46 09                  A  9428    	ADD	HL,BC
042C47 ED31                A  9429    	LD	IY,(HL)
042C49 FD0702              A  9430    	LD	BC,(IY+%2)
042C4C C5                  A  9431    	PUSH	BC
042C4D 217AFFFF            A  9432    	LD	HL,-134
042C51 DDE5C1              A  9433    	LD	BC,IX
042C54 09                  A  9434    	ADD	HL,BC
042C55 ED31                A  9435    	LD	IY,(HL)
042C57 FD0700              A  9436    	LD	BC,(IY+%0)
042C5A C5                  A  9437    	PUSH	BC
042C5B 01040000            A  9438    	LD	BC,4
042C5F C5                  A  9439    	PUSH	BC
042C60 CD B4 40 04         A  9440    	CALL	_vdp_spriteMoveTo
042C64 C1                  A  9441    	POP	BC
042C65 C1                  A  9442    	POP	BC
042C66 C1                  A  9443    	POP	BC
                           A  9444    ;  800			if (game.tick > 100) game.tick-
                           A  9445    .LINE 800
                           A  9446    
042C67 3E64                A  9447    	LD	A,%64
042C69 21 47 63 04         A  9448    	LD	HL,_game+1226
042C6D BE                  A  9449    	CP	A,(HL)
042C6E 30 09               A  9450    	JR	NC,L_294
042C70 3A 47 63 04         A  9451    	LD	A,(_game+1226)
042C74 3D                  A  9452    	DEC	A
042C75 32 47 63 04         A  9453    	LD	(_game+1226),A
                           A  9454    ;  801			
                           A  9455    ;  802		}
042C79                     A  9456    L_294:
                           A  9457    .LINE 802
                           A  9458    
                           A  9459    ;  803		
                           A  9460    ;  804		//Refresh the snake and other sprit
                           A  9461    ;  805		
                           A  9462    ;  806		vdp_spriteActivateTotal(SPRITE_STAR
                           A  9463    .LINE 806
                           A  9464    
042C79 3A 8B 5E 04         A  9465    	LD	A,(_game+14)
042C7D C615                A  9466    	ADD	A,%15
042C7F 4F                  A  9467    	LD	C,A
042C80 0600                A  9468    	LD	B,%0
042C82 C5                  A  9469    	PUSH	BC
042C83 CD 40 41 04         A  9470    	CALL	_vdp_spriteActivateTotal
042C87 C1                  A  9471    	POP	BC
                           A  9472    ;  807		vdp_spriteRefresh();
                           A  9473    .LINE 807
                           A  9474    
042C88 CD 79 41 04         A  9475    	CALL	_vdp_spriteRefresh
                           A  9476    ;  808		vdp_spriteActivateTotal(0);
                           A  9477    .LINE 808
                           A  9478    
042C8C 01000000            A  9479    	LD	BC,0
042C90 C5                  A  9480    	PUSH	BC
042C91 CD 40 41 04         A  9481    	CALL	_vdp_spriteActivateTotal
042C95 C1                  A  9482    	POP	BC
                           A  9483    ;  809	
                           A  9484    ;  810	
                           A  9485    ;  811	}
042C96                     A  9486    L_295:
                           A  9487    .LINE 811
                           A  9488    
042C96 DDF9                A  9489    	LD	SP,IX
042C98 DDE1                A  9490    	POP	IX
042C9A C9                  A  9491    	RET	
                           A  9492    
                           A  9493    
                           A  9494    ;**************************** _move_snake *****
                           A  9495    ;Name                         Addr/Register   S
                           A  9496    ;_vdp_spriteRefresh                  IMPORT  --
                           A  9497    ;_vdp_spriteActivateTotal            IMPORT  --
                           A  9498    ;_grow_snake                         IMPORT  --
                           A  9499    ;_vdp_spriteShow                     IMPORT  --
                           A  9500    ;_vdp_spriteSetFrame                 IMPORT  --
                           A  9501    ;_vdp_spriteSetFrameSelected         IMPORT  --
                           A  9502    ;_vdp_spriteMoveTo                   IMPORT  --
                           A  9503    ;_game                               STATIC   1
                           A  9504    ;G_27                                 IX-68    
                           A  9505    ;G_29                                 IX-65    
                           A  9506    ;G_31                                 IX-62    
                           A  9507    ;G_4                                  IX-59    
                           A  9508    ;G_2                                  IX-56    
                           A  9509    ;G_33                                 IX-53    
                           A  9510    ;G_5                                  IX-50    
                           A  9511    ;G_3                                  IX-47    
                           A  9512    ;j                                    IX-44    
                           A  9513    ;G_32                                 IX-43    
                           A  9514    ;G_30                                 IX-40    
                           A  9515    ;G_28                                 IX-37    
                           A  9516    ;G_26                                 IX-34    
                           A  9517    ;prevRect                             IX-31    
                           A  9518    ;nextRect                             IX-23    
                           A  9519    ;i                                    IX-15    
                           A  9520    ;G_7                                  IX-14    
                           A  9521    ;currentRect                          IX-11    
                           A  9522    ;G_6                                   IX-3    
                           A  9523    
                           A  9524    
                           A  9525    ; Stack Frame Size: 167 (bytes)
                           A  9526    ;       Spill Code: -3 (instruction)
                           A  9527    
                           A  9528    
                           A  9529    .ENDFUNC "move_snake",811,"_move_snake"
                           A  9530    ;  812	
                           A  9531    ;  813	void grow_snake() {
042C9B                     A  9532    _grow_snake:
                           A  9533    .DEFINE "_grow_snake"
                           A  9534    
                           A  9535    .VALUE _grow_snake
                           A  9536    
                           A  9537    .CLASS 2
                           A  9538    
                           A  9539    .TYPE 65
                           A  9540    
                           A  9541    .ENDEF
                           A  9542    
                           A  9543    .BEGFUNC "grow_snake",813,"_grow_snake"
                           A  9544    
042C9B DDE5                A  9545    	PUSH	IX
042C9D DD210000 00         A  9546    	LD	IX,0
042CA2 DD39                A  9547    	ADD	IX,SP
042CA4 C5                  A  9548    	PUSH	BC
                           A  9549    ;  814		
                           A  9550    ;  815		
                           A  9551    ;  816		if (game.snake_length == 100) { gam
                           A  9552    .LINE 816
                           A  9553    
042CA5 3A 8B 5E 04         A  9554    	LD	A,(_game+14)
042CA9 FE64                A  9555    	CP	A,%64
042CAB 20 0A               A  9556    	JR	NZ,L_298
042CAD 3E01                A  9557    	LD	A,%1
042CAF 32 3E 63 04         A  9558    	LD	(_game+1217),A
042CB3 C3 B2 2E 04         A  9559    	JR	L_300
                           A  9560    ;  817		else game.snake_length++;
042CB7                     A  9561    L_298:
                           A  9562    .LINE 817
                           A  9563    
042CB7 3A 8B 5E 04         A  9564    	LD	A,(_game+14)
042CBB 3C                  A  9565    	INC	A
042CBC 32 8B 5E 04         A  9566    	LD	(_game+14),A
                           A  9567    ;  818		
                           A  9568    ;  819		change_score();
                           A  9569    .LINE 819
                           A  9570    
042CC0 CD A8 1D 04         A  9571    	CALL	_change_score
                           A  9572    ;  820		play_sound(0, 120, 200, 880);
                           A  9573    .LINE 820
                           A  9574    
042CC4 01700300            A  9575    	LD	BC,880
042CC8 C5                  A  9576    	PUSH	BC
042CC9 01C80000            A  9577    	LD	BC,200
042CCD C5                  A  9578    	PUSH	BC
042CCE 01780000            A  9579    	LD	BC,120
042CD2 C5                  A  9580    	PUSH	BC
042CD3 01000000            A  9581    	LD	BC,0
042CD7 C5                  A  9582    	PUSH	BC
042CD8 CD F9 02 04         A  9583    	CALL	_play_sound
042CDC C1                  A  9584    	POP	BC
042CDD C1                  A  9585    	POP	BC
042CDE C1                  A  9586    	POP	BC
042CDF C1                  A  9587    	POP	BC
                           A  9588    ;  821		
                           A  9589    ;  822		game.snake[game.snake_length].x = g
                           A  9590    .LINE 822
                           A  9591    
042CE0 01 8C 5E 04         A  9592    	LD	BC,_game+15
042CE4 DD0FFD              A  9593    	LD	(IX+%FFFFFFFD),BC
042CE7 3A 8B 5E 04         A  9594    	LD	A,(_game+14)
042CEB B7ED62              A  9595    	UEXT	HL
042CEE 6F                  A  9596    	LD	L,A
042CEF 29                  A  9597    	ADD	HL,HL
042CF0 29                  A  9598    	ADD	HL,HL
042CF1 29                  A  9599    	ADD	HL,HL
042CF2 DD07FD              A  9600    	LD	BC,(IX+%FFFFFFFD)
042CF5 09                  A  9601    	ADD	HL,BC
042CF6 ED4B 7D 5E 04       A  9602    	LD	BC,(_game)
042CFB E5FDE1              A  9603    	LD	IY,HL
042CFE FD7100              A  9604    	LD	(IY+%0),C
042D01 FD7001              A  9605    	LD	(IY+%1),B
                           A  9606    ;  823		game.snake[game.snake_length].y = g
                           A  9607    .LINE 823
                           A  9608    
042D04 3A 8B 5E 04         A  9609    	LD	A,(_game+14)
042D08 B7ED62              A  9610    	UEXT	HL
042D0B 6F                  A  9611    	LD	L,A
042D0C 29                  A  9612    	ADD	HL,HL
042D0D 29                  A  9613    	ADD	HL,HL
042D0E 29                  A  9614    	ADD	HL,HL
042D0F DD07FD              A  9615    	LD	BC,(IX+%FFFFFFFD)
042D12 09                  A  9616    	ADD	HL,BC
042D13 ED4B 7F 5E 04       A  9617    	LD	BC,(_game+2)
042D18 E5FDE1              A  9618    	LD	IY,HL
042D1B FD7102              A  9619    	LD	(IY+%2),C
042D1E FD7003              A  9620    	LD	(IY+%3),B
                           A  9621    ;  824		vdp_spriteClearFrames(SPRITE_START 
                           A  9622    .LINE 824
                           A  9623    
042D21 3A 8B 5E 04         A  9624    	LD	A,(_game+14)
042D25 C614                A  9625    	ADD	A,%14
042D27 4F                  A  9626    	LD	C,A
042D28 0600                A  9627    	LD	B,%0
042D2A C5                  A  9628    	PUSH	BC
042D2B CD 7B 3E 04         A  9629    	CALL	_vdp_spriteClearFrames
042D2F C1                  A  9630    	POP	BC
                           A  9631    ;  825		vdp_spriteAddFrame(SPRITE_START + g
                           A  9632    .LINE 825
                           A  9633    
042D30 01040000            A  9634    	LD	BC,4
042D34 C5                  A  9635    	PUSH	BC
042D35 3A 8B 5E 04         A  9636    	LD	A,(_game+14)
042D39 C614                A  9637    	ADD	A,%14
042D3B 4F                  A  9638    	LD	C,A
042D3C 0600                A  9639    	LD	B,%0
042D3E C5                  A  9640    	PUSH	BC
042D3F CD D1 3E 04         A  9641    	CALL	_vdp_spriteAddFrame
042D43 C1                  A  9642    	POP	BC
042D44 C1                  A  9643    	POP	BC
                           A  9644    ;  826		vdp_spriteAddFrame(SPRITE_START + g
                           A  9645    .LINE 826
                           A  9646    
042D45 01050000            A  9647    	LD	BC,5
042D49 C5                  A  9648    	PUSH	BC
042D4A 3A 8B 5E 04         A  9649    	LD	A,(_game+14)
042D4E C614                A  9650    	ADD	A,%14
042D50 4F                  A  9651    	LD	C,A
042D51 0600                A  9652    	LD	B,%0
042D53 C5                  A  9653    	PUSH	BC
042D54 CD D1 3E 04         A  9654    	CALL	_vdp_spriteAddFrame
042D58 C1                  A  9655    	POP	BC
042D59 C1                  A  9656    	POP	BC
                           A  9657    ;  827		vdp_spriteAddFrame(SPRITE_START + g
                           A  9658    .LINE 827
                           A  9659    
042D5A 01060000            A  9660    	LD	BC,6
042D5E C5                  A  9661    	PUSH	BC
042D5F 3A 8B 5E 04         A  9662    	LD	A,(_game+14)
042D63 C614                A  9663    	ADD	A,%14
042D65 4F                  A  9664    	LD	C,A
042D66 0600                A  9665    	LD	B,%0
042D68 C5                  A  9666    	PUSH	BC
042D69 CD D1 3E 04         A  9667    	CALL	_vdp_spriteAddFrame
042D6D C1                  A  9668    	POP	BC
042D6E C1                  A  9669    	POP	BC
                           A  9670    ;  828		vdp_spriteAddFrame(SPRITE_START + g
                           A  9671    .LINE 828
                           A  9672    
042D6F 01070000            A  9673    	LD	BC,7
042D73 C5                  A  9674    	PUSH	BC
042D74 3A 8B 5E 04         A  9675    	LD	A,(_game+14)
042D78 C614                A  9676    	ADD	A,%14
042D7A 4F                  A  9677    	LD	C,A
042D7B 0600                A  9678    	LD	B,%0
042D7D C5                  A  9679    	PUSH	BC
042D7E CD D1 3E 04         A  9680    	CALL	_vdp_spriteAddFrame
042D82 C1                  A  9681    	POP	BC
042D83 C1                  A  9682    	POP	BC
                           A  9683    ;  829		vdp_spriteAddFrame(SPRITE_START + g
                           A  9684    .LINE 829
                           A  9685    
042D84 01080000            A  9686    	LD	BC,8
042D88 C5                  A  9687    	PUSH	BC
042D89 3A 8B 5E 04         A  9688    	LD	A,(_game+14)
042D8D C614                A  9689    	ADD	A,%14
042D8F 4F                  A  9690    	LD	C,A
042D90 0600                A  9691    	LD	B,%0
042D92 C5                  A  9692    	PUSH	BC
042D93 CD D1 3E 04         A  9693    	CALL	_vdp_spriteAddFrame
042D97 C1                  A  9694    	POP	BC
042D98 C1                  A  9695    	POP	BC
                           A  9696    ;  830		vdp_spriteAddFrame(SPRITE_START + g
                           A  9697    .LINE 830
                           A  9698    
042D99 01090000            A  9699    	LD	BC,9
042D9D C5                  A  9700    	PUSH	BC
042D9E 3A 8B 5E 04         A  9701    	LD	A,(_game+14)
042DA2 C614                A  9702    	ADD	A,%14
042DA4 4F                  A  9703    	LD	C,A
042DA5 0600                A  9704    	LD	B,%0
042DA7 C5                  A  9705    	PUSH	BC
042DA8 CD D1 3E 04         A  9706    	CALL	_vdp_spriteAddFrame
042DAC C1                  A  9707    	POP	BC
042DAD C1                  A  9708    	POP	BC
                           A  9709    ;  831		vdp_spriteAddFrame(SPRITE_START + g
                           A  9710    .LINE 831
                           A  9711    
042DAE 010A0000            A  9712    	LD	BC,10
042DB2 C5                  A  9713    	PUSH	BC
042DB3 3A 8B 5E 04         A  9714    	LD	A,(_game+14)
042DB7 C614                A  9715    	ADD	A,%14
042DB9 4F                  A  9716    	LD	C,A
042DBA 0600                A  9717    	LD	B,%0
042DBC C5                  A  9718    	PUSH	BC
042DBD CD D1 3E 04         A  9719    	CALL	_vdp_spriteAddFrame
042DC1 C1                  A  9720    	POP	BC
042DC2 C1                  A  9721    	POP	BC
                           A  9722    ;  832		vdp_spriteAddFrame(SPRITE_START + g
                           A  9723    .LINE 832
                           A  9724    
042DC3 010B0000            A  9725    	LD	BC,11
042DC7 C5                  A  9726    	PUSH	BC
042DC8 3A 8B 5E 04         A  9727    	LD	A,(_game+14)
042DCC C614                A  9728    	ADD	A,%14
042DCE 4F                  A  9729    	LD	C,A
042DCF 0600                A  9730    	LD	B,%0
042DD1 C5                  A  9731    	PUSH	BC
042DD2 CD D1 3E 04         A  9732    	CALL	_vdp_spriteAddFrame
042DD6 C1                  A  9733    	POP	BC
042DD7 C1                  A  9734    	POP	BC
                           A  9735    ;  833		vdp_spriteAddFrame(SPRITE_START + g
                           A  9736    .LINE 833
                           A  9737    
042DD8 010C0000            A  9738    	LD	BC,12
042DDC C5                  A  9739    	PUSH	BC
042DDD 3A 8B 5E 04         A  9740    	LD	A,(_game+14)
042DE1 C614                A  9741    	ADD	A,%14
042DE3 4F                  A  9742    	LD	C,A
042DE4 0600                A  9743    	LD	B,%0
042DE6 C5                  A  9744    	PUSH	BC
042DE7 CD D1 3E 04         A  9745    	CALL	_vdp_spriteAddFrame
042DEB C1                  A  9746    	POP	BC
042DEC C1                  A  9747    	POP	BC
                           A  9748    ;  834		vdp_spriteAddFrame(SPRITE_START + g
                           A  9749    .LINE 834
                           A  9750    
042DED 010D0000            A  9751    	LD	BC,13
042DF1 C5                  A  9752    	PUSH	BC
042DF2 3A 8B 5E 04         A  9753    	LD	A,(_game+14)
042DF6 C614                A  9754    	ADD	A,%14
042DF8 4F                  A  9755    	LD	C,A
042DF9 0600                A  9756    	LD	B,%0
042DFB C5                  A  9757    	PUSH	BC
042DFC CD D1 3E 04         A  9758    	CALL	_vdp_spriteAddFrame
042E00 C1                  A  9759    	POP	BC
042E01 C1                  A  9760    	POP	BC
                           A  9761    ;  835		vdp_spriteMoveTo(SPRITE_START + gam
                           A  9762    .LINE 835
                           A  9763    
042E02 3A 8B 5E 04         A  9764    	LD	A,(_game+14)
042E06 B7ED62              A  9765    	UEXT	HL
042E09 6F                  A  9766    	LD	L,A
042E0A 29                  A  9767    	ADD	HL,HL
042E0B 29                  A  9768    	ADD	HL,HL
042E0C 29                  A  9769    	ADD	HL,HL
042E0D DD07FD              A  9770    	LD	BC,(IX+%FFFFFFFD)
042E10 09                  A  9771    	ADD	HL,BC
042E11 E5FDE1              A  9772    	LD	IY,HL
042E14 FD0702              A  9773    	LD	BC,(IY+%2)
042E17 C5                  A  9774    	PUSH	BC
042E18 3A 8B 5E 04         A  9775    	LD	A,(_game+14)
042E1C B7ED62              A  9776    	UEXT	HL
042E1F 6F                  A  9777    	LD	L,A
042E20 29                  A  9778    	ADD	HL,HL
042E21 29                  A  9779    	ADD	HL,HL
042E22 29                  A  9780    	ADD	HL,HL
042E23 DD07FD              A  9781    	LD	BC,(IX+%FFFFFFFD)
042E26 09                  A  9782    	ADD	HL,BC
042E27 E5FDE1              A  9783    	LD	IY,HL
042E2A FD0700              A  9784    	LD	BC,(IY+%0)
042E2D C5                  A  9785    	PUSH	BC
042E2E 3A 8B 5E 04         A  9786    	LD	A,(_game+14)
042E32 C614                A  9787    	ADD	A,%14
042E34 4F                  A  9788    	LD	C,A
042E35 0600                A  9789    	LD	B,%0
042E37 C5                  A  9790    	PUSH	BC
042E38 CD B4 40 04         A  9791    	CALL	_vdp_spriteMoveTo
042E3C C1                  A  9792    	POP	BC
042E3D C1                  A  9793    	POP	BC
042E3E C1                  A  9794    	POP	BC
                           A  9795    ;  836		vdp_spriteShow(SPRITE_START + game.
                           A  9796    .LINE 836
                           A  9797    
042E3F 3A 8B 5E 04         A  9798    	LD	A,(_game+14)
042E43 C614                A  9799    	ADD	A,%14
042E45 4F                  A  9800    	LD	C,A
042E46 0600                A  9801    	LD	B,%0
042E48 C5                  A  9802    	PUSH	BC
042E49 CD 10 40 04         A  9803    	CALL	_vdp_spriteShow
042E4D C1                  A  9804    	POP	BC
                           A  9805    ;  837		game.snake[game.snake_length].heigh
                           A  9806    .LINE 837
                           A  9807    
042E4E 3A 8B 5E 04         A  9808    	LD	A,(_game+14)
042E52 B7ED62              A  9809    	UEXT	HL
042E55 6F                  A  9810    	LD	L,A
042E56 E5C1                A  9811    	LD	BC,HL
042E58 0B                  A  9812    	DEC	BC
042E59 C5E1                A  9813    	LD	HL,BC
042E5B 29                  A  9814    	ADD	HL,HL
042E5C 29                  A  9815    	ADD	HL,HL
042E5D 29                  A  9816    	ADD	HL,HL
042E5E DD07FD              A  9817    	LD	BC,(IX+%FFFFFFFD)
042E61 09                  A  9818    	ADD	HL,BC
042E62 E5FDE1              A  9819    	LD	IY,HL
042E65 3A 8B 5E 04         A  9820    	LD	A,(_game+14)
042E69 B7ED62              A  9821    	UEXT	HL
042E6C 6F                  A  9822    	LD	L,A
042E6D 29                  A  9823    	ADD	HL,HL
042E6E 29                  A  9824    	ADD	HL,HL
042E6F 29                  A  9825    	ADD	HL,HL
042E70 DD07FD              A  9826    	LD	BC,(IX+%FFFFFFFD)
042E73 09                  A  9827    	ADD	HL,BC
042E74 FD0706              A  9828    	LD	BC,(IY+%6)
042E77 E5FDE1              A  9829    	LD	IY,HL
042E7A FD7106              A  9830    	LD	(IY+%6),C
042E7D FD7007              A  9831    	LD	(IY+%7),B
                           A  9832    ;  838		game.snake[game.snake_length].width
                           A  9833    .LINE 838
                           A  9834    
042E80 3A 8B 5E 04         A  9835    	LD	A,(_game+14)
042E84 B7ED62              A  9836    	UEXT	HL
042E87 6F                  A  9837    	LD	L,A
042E88 E5C1                A  9838    	LD	BC,HL
042E8A 0B                  A  9839    	DEC	BC
042E8B C5E1                A  9840    	LD	HL,BC
042E8D 29                  A  9841    	ADD	HL,HL
042E8E 29                  A  9842    	ADD	HL,HL
042E8F 29                  A  9843    	ADD	HL,HL
042E90 DD07FD              A  9844    	LD	BC,(IX+%FFFFFFFD)
042E93 09                  A  9845    	ADD	HL,BC
042E94 E5FDE1              A  9846    	LD	IY,HL
042E97 3A 8B 5E 04         A  9847    	LD	A,(_game+14)
042E9B B7ED62              A  9848    	UEXT	HL
042E9E 6F                  A  9849    	LD	L,A
042E9F 29                  A  9850    	ADD	HL,HL
042EA0 29                  A  9851    	ADD	HL,HL
042EA1 29                  A  9852    	ADD	HL,HL
042EA2 DD07FD              A  9853    	LD	BC,(IX+%FFFFFFFD)
042EA5 09                  A  9854    	ADD	HL,BC
042EA6 FD0704              A  9855    	LD	BC,(IY+%4)
042EA9 E5FDE1              A  9856    	LD	IY,HL
042EAC FD7104              A  9857    	LD	(IY+%4),C
042EAF FD7005              A  9858    	LD	(IY+%5),B
                           A  9859    ;  839		//move_snake();
                           A  9860    ;  840		
                           A  9861    ;  841	}
042EB2                     A  9862    L_300:
                           A  9863    .LINE 841
                           A  9864    
042EB2 DDF9                A  9865    	LD	SP,IX
042EB4 DDE1                A  9866    	POP	IX
042EB6 C9                  A  9867    	RET	
                           A  9868    
                           A  9869    
                           A  9870    ;**************************** _grow_snake *****
                           A  9871    ;Name                         Addr/Register   S
                           A  9872    ;_vdp_spriteShow                     IMPORT  --
                           A  9873    ;_vdp_spriteMoveTo                   IMPORT  --
                           A  9874    ;_vdp_spriteAddFrame                 IMPORT  --
                           A  9875    ;_vdp_spriteClearFrames              IMPORT  --
                           A  9876    ;_game                               STATIC   1
                           A  9877    ;G_34                                  IX-3    
                           A  9878    
                           A  9879    
                           A  9880    ; Stack Frame Size: 9 (bytes)
                           A  9881    ;       Spill Code: -3 (instruction)
                           A  9882    
                           A  9883    
                           A  9884    .ENDFUNC "grow_snake",841,"_grow_snake"
                           A  9885    ;  842	
                           A  9886    ;  843	void setup_snake(uint8_t length, uint16
                           A  9887    ;  844					const char *head_n, con
                           A  9888    ;  845					const char *body_hor, c
                           A  9889    ;  846					const char *body_ne, co
                           A  9890    ;  847					const char *tail_n, con
                           A  9891    ;  848					const char *food, const
042EB7                     A  9892    _setup_snake:
                           A  9893    .DEFINE "_setup_snake"
                           A  9894    
                           A  9895    .VALUE _setup_snake
                           A  9896    
                           A  9897    .CLASS 2
                           A  9898    
                           A  9899    .TYPE 65
                           A  9900    
                           A  9901    .ENDEF
                           A  9902    
                           A  9903    .BEGFUNC "setup_snake",848,"_setup_snake"
                           A  9904    
                           A  9905    .LINE 848
                           A  9906    
                           A  9907    .DEFINE "length"
                           A  9908    
                           A  9909    .CLASS 65
                           A  9910    
                           A  9911    .VALUE 6
                           A  9912    
                           A  9913    .TYPE 12
                           A  9914    
                           A  9915    .ENDEF
                           A  9916    
                           A  9917    .DEFINE "start_x"
                           A  9918    
                           A  9919    .CLASS 65
                           A  9920    
                           A  9921    .VALUE 9
                           A  9922    
                           A  9923    .TYPE 13
                           A  9924    
                           A  9925    .ENDEF
                           A  9926    
                           A  9927    .DEFINE "start_y"
                           A  9928    
                           A  9929    .CLASS 65
                           A  9930    
                           A  9931    .VALUE 12
                           A  9932    
                           A  9933    .TYPE 13
                           A  9934    
                           A  9935    .ENDEF
                           A  9936    
                           A  9937    .DEFINE "head_n"
                           A  9938    
                           A  9939    .CLASS 65
                           A  9940    
                           A  9941    .VALUE 15
                           A  9942    
                           A  9943    .TYPE 194
                           A  9944    
                           A  9945    .ENDEF
                           A  9946    
                           A  9947    .DEFINE "head_e"
                           A  9948    
                           A  9949    .CLASS 65
                           A  9950    
                           A  9951    .VALUE 18
                           A  9952    
                           A  9953    .TYPE 194
                           A  9954    
                           A  9955    .ENDEF
                           A  9956    
                           A  9957    .DEFINE "head_s"
                           A  9958    
                           A  9959    .CLASS 65
                           A  9960    
                           A  9961    .VALUE 21
                           A  9962    
                           A  9963    .TYPE 194
                           A  9964    
                           A  9965    .ENDEF
                           A  9966    
                           A  9967    .DEFINE "head_w"
                           A  9968    
                           A  9969    .CLASS 65
                           A  9970    
                           A  9971    .VALUE 24
                           A  9972    
                           A  9973    .TYPE 194
                           A  9974    
                           A  9975    .ENDEF
                           A  9976    
                           A  9977    .DEFINE "body_hor"
                           A  9978    
                           A  9979    .CLASS 65
                           A  9980    
                           A  9981    .VALUE 27
                           A  9982    
                           A  9983    .TYPE 194
                           A  9984    
                           A  9985    .ENDEF
                           A  9986    
                           A  9987    .DEFINE "body_ver"
                           A  9988    
                           A  9989    .CLASS 65
                           A  9990    
                           A  9991    .VALUE 30
                           A  9992    
                           A  9993    .TYPE 194
                           A  9994    
                           A  9995    .ENDEF
                           A  9996    
                           A  9997    .DEFINE "body_ne"
                           A  9998    
                           A  9999    .CLASS 65
                           A 10000    
                           A 10001    .VALUE 33
                           A 10002    
                           A 10003    .TYPE 194
                           A 10004    
                           A 10005    .ENDEF
                           A 10006    
                           A 10007    .DEFINE "body_se"
                           A 10008    
                           A 10009    .CLASS 65
                           A 10010    
                           A 10011    .VALUE 36
                           A 10012    
                           A 10013    .TYPE 194
                           A 10014    
                           A 10015    .ENDEF
                           A 10016    
                           A 10017    .DEFINE "body_sw"
                           A 10018    
                           A 10019    .CLASS 65
                           A 10020    
                           A 10021    .VALUE 39
                           A 10022    
                           A 10023    .TYPE 194
                           A 10024    
                           A 10025    .ENDEF
                           A 10026    
                           A 10027    .DEFINE "body_nw"
                           A 10028    
                           A 10029    .CLASS 65
                           A 10030    
                           A 10031    .VALUE 42
                           A 10032    
                           A 10033    .TYPE 194
                           A 10034    
                           A 10035    .ENDEF
                           A 10036    
                           A 10037    .DEFINE "tail_n"
                           A 10038    
                           A 10039    .CLASS 65
                           A 10040    
                           A 10041    .VALUE 45
                           A 10042    
                           A 10043    .TYPE 194
                           A 10044    
                           A 10045    .ENDEF
                           A 10046    
                           A 10047    .DEFINE "tail_e"
                           A 10048    
                           A 10049    .CLASS 65
                           A 10050    
                           A 10051    .VALUE 48
                           A 10052    
                           A 10053    .TYPE 194
                           A 10054    
                           A 10055    .ENDEF
                           A 10056    
                           A 10057    .DEFINE "tail_s"
                           A 10058    
                           A 10059    .CLASS 65
                           A 10060    
                           A 10061    .VALUE 51
                           A 10062    
                           A 10063    .TYPE 194
                           A 10064    
                           A 10065    .ENDEF
                           A 10066    
                           A 10067    .DEFINE "tail_w"
                           A 10068    
                           A 10069    .CLASS 65
                           A 10070    
                           A 10071    .VALUE 54
                           A 10072    
                           A 10073    .TYPE 194
                           A 10074    
                           A 10075    .ENDEF
                           A 10076    
                           A 10077    .DEFINE "food"
                           A 10078    
                           A 10079    .CLASS 65
                           A 10080    
                           A 10081    .VALUE 57
                           A 10082    
                           A 10083    .TYPE 194
                           A 10084    
                           A 10085    .ENDEF
                           A 10086    
                           A 10087    .DEFINE "tile"
                           A 10088    
                           A 10089    .CLASS 65
                           A 10090    
                           A 10091    .VALUE 60
                           A 10092    
                           A 10093    .TYPE 194
                           A 10094    
                           A 10095    .ENDEF
                           A 10096    
                           A 10097    .DEFINE "segment"
                           A 10098    
                           A 10099    .CLASS 65
                           A 10100    
                           A 10101    .VALUE -1
                           A 10102    
                           A 10103    .TYPE 12
                           A 10104    
                           A 10105    .ENDEF
                           A 10106    
                           A 10107    .DEFINE "bmp"
                           A 10108    
                           A 10109    .CLASS 65
                           A 10110    
                           A 10111    .VALUE -6
                           A 10112    
                           A 10113    .TAG "NONAME8"
                           A 10114    
                           A 10115    .TYPE 8
                           A 10116    
                           A 10117    .ENDEF
                           A 10118    
042EB7 DDE5                A 10119    	PUSH	IX
042EB9 DD210000 00         A 10120    	LD	IX,0
042EBE DD39                A 10121    	ADD	IX,SP
042EC0 217AFFFF            A 10122    	LD	HL,-134
042EC4 39                  A 10123    	ADD	HL,SP
042EC5 F9                  A 10124    	LD	SP,HL
                           A 10125    ;  849		
                           A 10126    ;  850		uint8_t segment;
                           A 10127    ;  851		bmp_info bmp;
                           A 10128    ;  852		
                           A 10129    ;  853		printf("Loading images...");
                           A 10130    .LINE 853
                           A 10131    
042EC6 01 A1 4D 04         A 10132    	LD	BC,___print_uputch
042ECA ED43 42 56 04       A 10133    	LD	(___print_xputch),BC
042ECF 01 6E 5C 04         A 10134    	LD	BC,L__265
042ED3 C5                  A 10135    	PUSH	BC
042ED4 CD 06 4C 04         A 10136    	CALL	___print_sendstring
042ED8 C1                  A 10137    	POP	BC
                           A 10138    ;  854						
                           A 10139    ;  855		game.vel_x = 1;
                           A 10140    .LINE 855
                           A 10141    
042ED9 3E01                A 10142    	LD	A,%1
042EDB 32 3C 63 04         A 10143    	LD	(_game+1215),A
                           A 10144    ;  856		game.vel_y = 0;
                           A 10145    .LINE 856
                           A 10146    
042EDF AF                  A 10147    	XOR	A,A
042EE0 32 3D 63 04         A 10148    	LD	(_game+1216),A
                           A 10149    ;  857		game.snake_length = length;
                           A 10150    .LINE 857
                           A 10151    
042EE4 DD7E06              A 10152    	LD	A,(IX+%6)
042EE7 32 8B 5E 04         A 10153    	LD	(_game+14),A
                           A 10154    ;  858		
                           A 10155    ;  859	
                           A 10156    ;  860		//First load head (4 directions)
                           A 10157    ;  861		bmp = load_bmp_direct(head_n, SNAKE
                           A 10158    .LINE 861
                           A 10159    
042EEB 01000000            A 10160    	LD	BC,0
042EEF C5                  A 10161    	PUSH	BC
042EF0 DD070F              A 10162    	LD	BC,(IX+%F)
042EF3 C5                  A 10163    	PUSH	BC
042EF4 ED65E6              A 10164    	PEA	IX+%FFFFFFE6
042EF7 CD 4F 05 04         A 10165    	CALL	_load_bmp_direct
042EFB C1                  A 10166    	POP	BC
042EFC C1                  A 10167    	POP	BC
042EFD C1                  A 10168    	POP	BC
042EFE ED12FA              A 10169    	LEA	DE,IX+%FFFFFFFA
042F01 01050000            A 10170    	LD	BC,5
042F05 EDB0                A 10171    	LDIR	
                           A 10172    ;  862		game.snake[0].height = bmp.bmp_heig
                           A 10173    .LINE 862
                           A 10174    
042F07 01 8C 5E 04         A 10175    	LD	BC,_game+15
042F0B DD0FEB              A 10176    	LD	(IX+%FFFFFFEB),BC
042F0E DD31EB              A 10177    	LD	IY,(IX+%FFFFFFEB)
042F11 DD07FC              A 10178    	LD	BC,(IX+%FFFFFFFC)
042F14 FD7106              A 10179    	LD	(IY+%6),C
042F17 FD7007              A 10180    	LD	(IY+%7),B
                           A 10181    ;  863		game.snake[0].width = bmp.bmp_width
                           A 10182    .LINE 863
                           A 10183    
042F1A DD07FA              A 10184    	LD	BC,(IX+%FFFFFFFA)
042F1D FD7104              A 10185    	LD	(IY+%4),C
042F20 FD7005              A 10186    	LD	(IY+%5),B
                           A 10187    ;  864		
                           A 10188    ;  865		load_bmp_direct(head_e, SNAKE_HEAD_
                           A 10189    .LINE 865
                           A 10190    
042F23 01010000            A 10191    	LD	BC,1
042F27 C5                  A 10192    	PUSH	BC
042F28 DD0712              A 10193    	LD	BC,(IX+%12)
042F2B C5                  A 10194    	PUSH	BC
042F2C ED65E1              A 10195    	PEA	IX+%FFFFFFE1
042F2F CD 4F 05 04         A 10196    	CALL	_load_bmp_direct
042F33 C1                  A 10197    	POP	BC
042F34 C1                  A 10198    	POP	BC
042F35 C1                  A 10199    	POP	BC
                           A 10200    ;  866		load_bmp_direct(head_s, SNAKE_HEAD_
                           A 10201    .LINE 866
                           A 10202    
042F36 01020000            A 10203    	LD	BC,2
042F3A C5                  A 10204    	PUSH	BC
042F3B DD0715              A 10205    	LD	BC,(IX+%15)
042F3E C5                  A 10206    	PUSH	BC
042F3F ED65DC              A 10207    	PEA	IX+%FFFFFFDC
042F42 CD 4F 05 04         A 10208    	CALL	_load_bmp_direct
042F46 C1                  A 10209    	POP	BC
042F47 C1                  A 10210    	POP	BC
042F48 C1                  A 10211    	POP	BC
                           A 10212    ;  867		load_bmp_direct(head_w, SNAKE_HEAD_
                           A 10213    .LINE 867
                           A 10214    
042F49 01030000            A 10215    	LD	BC,3
042F4D C5                  A 10216    	PUSH	BC
042F4E DD0718              A 10217    	LD	BC,(IX+%18)
042F51 C5                  A 10218    	PUSH	BC
042F52 ED65D7              A 10219    	PEA	IX+%FFFFFFD7
042F55 CD 4F 05 04         A 10220    	CALL	_load_bmp_direct
042F59 C1                  A 10221    	POP	BC
042F5A C1                  A 10222    	POP	BC
042F5B C1                  A 10223    	POP	BC
                           A 10224    ;  868		
                           A 10225    ;  869		//Then load body (horizontal, verti
                           A 10226    ;  870		bmp = load_bmp_direct(body_hor, SNA
                           A 10227    .LINE 870
                           A 10228    
042F5C 01040000            A 10229    	LD	BC,4
042F60 C5                  A 10230    	PUSH	BC
042F61 DD071B              A 10231    	LD	BC,(IX+%1B)
042F64 C5                  A 10232    	PUSH	BC
042F65 ED65D2              A 10233    	PEA	IX+%FFFFFFD2
042F68 CD 4F 05 04         A 10234    	CALL	_load_bmp_direct
042F6C C1                  A 10235    	POP	BC
042F6D C1                  A 10236    	POP	BC
042F6E C1                  A 10237    	POP	BC
042F6F ED12FA              A 10238    	LEA	DE,IX+%FFFFFFFA
042F72 01050000            A 10239    	LD	BC,5
042F76 EDB0                A 10240    	LDIR	
                           A 10241    ;  871		game.seg_hor_width = bmp.bmp_width;
                           A 10242    .LINE 871
                           A 10243    
042F78 DD7EFA              A 10244    	LD	A,(IX+%FFFFFFFA)
042F7B 32 3F 63 04         A 10245    	LD	(_game+1218),A
                           A 10246    ;  872		game.seg_hor_height = bmp.bmp_heigh
                           A 10247    .LINE 872
                           A 10248    
042F7F DD7EFC              A 10249    	LD	A,(IX+%FFFFFFFC)
042F82 32 40 63 04         A 10250    	LD	(_game+1219),A
                           A 10251    ;  873		
                           A 10252    ;  874		bmp = load_bmp_direct(body_ver, SNA
                           A 10253    .LINE 874
                           A 10254    
042F86 01050000            A 10255    	LD	BC,5
042F8A C5                  A 10256    	PUSH	BC
042F8B DD071E              A 10257    	LD	BC,(IX+%1E)
042F8E C5                  A 10258    	PUSH	BC
042F8F ED65CD              A 10259    	PEA	IX+%FFFFFFCD
042F92 CD 4F 05 04         A 10260    	CALL	_load_bmp_direct
042F96 C1                  A 10261    	POP	BC
042F97 C1                  A 10262    	POP	BC
042F98 C1                  A 10263    	POP	BC
042F99 ED12FA              A 10264    	LEA	DE,IX+%FFFFFFFA
042F9C 01050000            A 10265    	LD	BC,5
042FA0 EDB0                A 10266    	LDIR	
                           A 10267    ;  875		game.seg_ver_width = bmp.bmp_width;
                           A 10268    .LINE 875
                           A 10269    
042FA2 DD7EFA              A 10270    	LD	A,(IX+%FFFFFFFA)
042FA5 32 41 63 04         A 10271    	LD	(_game+1220),A
                           A 10272    ;  876		game.seg_ver_height = bmp.bmp_heigh
                           A 10273    .LINE 876
                           A 10274    
042FA9 DD7EFC              A 10275    	LD	A,(IX+%FFFFFFFC)
042FAC 32 42 63 04         A 10276    	LD	(_game+1221),A
                           A 10277    ;  877		
                           A 10278    ;  878		bmp = load_bmp_direct(body_ne, SNAK
                           A 10279    .LINE 878
                           A 10280    
042FB0 01060000            A 10281    	LD	BC,6
042FB4 C5                  A 10282    	PUSH	BC
042FB5 DD0721              A 10283    	LD	BC,(IX+%21)
042FB8 C5                  A 10284    	PUSH	BC
042FB9 ED65C8              A 10285    	PEA	IX+%FFFFFFC8
042FBC CD 4F 05 04         A 10286    	CALL	_load_bmp_direct
042FC0 C1                  A 10287    	POP	BC
042FC1 C1                  A 10288    	POP	BC
042FC2 C1                  A 10289    	POP	BC
042FC3 ED12FA              A 10290    	LEA	DE,IX+%FFFFFFFA
042FC6 01050000            A 10291    	LD	BC,5
042FCA EDB0                A 10292    	LDIR	
                           A 10293    ;  879		game.seg_cor_width = bmp.bmp_width;
                           A 10294    .LINE 879
                           A 10295    
042FCC DD7EFA              A 10296    	LD	A,(IX+%FFFFFFFA)
042FCF 32 43 63 04         A 10297    	LD	(_game+1222),A
                           A 10298    ;  880		game.seg_cor_height = bmp.bmp_heigh
                           A 10299    .LINE 880
                           A 10300    
042FD3 DD7EFC              A 10301    	LD	A,(IX+%FFFFFFFC)
042FD6 32 44 63 04         A 10302    	LD	(_game+1223),A
                           A 10303    ;  881		
                           A 10304    ;  882		load_bmp_direct(body_se, SNAKE_BODY
                           A 10305    .LINE 882
                           A 10306    
042FDA 01070000            A 10307    	LD	BC,7
042FDE C5                  A 10308    	PUSH	BC
042FDF DD0724              A 10309    	LD	BC,(IX+%24)
042FE2 C5                  A 10310    	PUSH	BC
042FE3 ED65C3              A 10311    	PEA	IX+%FFFFFFC3
042FE6 CD 4F 05 04         A 10312    	CALL	_load_bmp_direct
042FEA C1                  A 10313    	POP	BC
042FEB C1                  A 10314    	POP	BC
042FEC C1                  A 10315    	POP	BC
                           A 10316    ;  883		load_bmp_direct(body_sw, SNAKE_BODY
                           A 10317    .LINE 883
                           A 10318    
042FED 01080000            A 10319    	LD	BC,8
042FF1 C5                  A 10320    	PUSH	BC
042FF2 DD0727              A 10321    	LD	BC,(IX+%27)
042FF5 C5                  A 10322    	PUSH	BC
042FF6 ED65BE              A 10323    	PEA	IX+%FFFFFFBE
042FF9 CD 4F 05 04         A 10324    	CALL	_load_bmp_direct
042FFD C1                  A 10325    	POP	BC
042FFE C1                  A 10326    	POP	BC
042FFF C1                  A 10327    	POP	BC
                           A 10328    ;  884		load_bmp_direct(body_nw, SNAKE_BODY
                           A 10329    .LINE 884
                           A 10330    
043000 01090000            A 10331    	LD	BC,9
043004 C5                  A 10332    	PUSH	BC
043005 DD072A              A 10333    	LD	BC,(IX+%2A)
043008 C5                  A 10334    	PUSH	BC
043009 ED65B9              A 10335    	PEA	IX+%FFFFFFB9
04300C CD 4F 05 04         A 10336    	CALL	_load_bmp_direct
043010 C1                  A 10337    	POP	BC
043011 C1                  A 10338    	POP	BC
043012 C1                  A 10339    	POP	BC
                           A 10340    ;  885		
                           A 10341    ;  886		//And finally the tail in four dire
                           A 10342    ;  887		load_bmp_direct(tail_n, SNAKE_TAIL_
                           A 10343    .LINE 887
                           A 10344    
043013 010A0000            A 10345    	LD	BC,10
043017 C5                  A 10346    	PUSH	BC
043018 DD072D              A 10347    	LD	BC,(IX+%2D)
04301B C5                  A 10348    	PUSH	BC
04301C ED65B4              A 10349    	PEA	IX+%FFFFFFB4
04301F CD 4F 05 04         A 10350    	CALL	_load_bmp_direct
043023 C1                  A 10351    	POP	BC
043024 C1                  A 10352    	POP	BC
043025 C1                  A 10353    	POP	BC
                           A 10354    ;  888		load_bmp_direct(tail_e, SNAKE_TAIL_
                           A 10355    .LINE 888
                           A 10356    
043026 010B0000            A 10357    	LD	BC,11
04302A C5                  A 10358    	PUSH	BC
04302B DD0730              A 10359    	LD	BC,(IX+%30)
04302E C5                  A 10360    	PUSH	BC
04302F ED65AF              A 10361    	PEA	IX+%FFFFFFAF
043032 CD 4F 05 04         A 10362    	CALL	_load_bmp_direct
043036 C1                  A 10363    	POP	BC
043037 C1                  A 10364    	POP	BC
043038 C1                  A 10365    	POP	BC
                           A 10366    ;  889		load_bmp_direct(tail_s, SNAKE_TAIL_
                           A 10367    .LINE 889
                           A 10368    
043039 010C0000            A 10369    	LD	BC,12
04303D C5                  A 10370    	PUSH	BC
04303E DD0733              A 10371    	LD	BC,(IX+%33)
043041 C5                  A 10372    	PUSH	BC
043042 ED65AA              A 10373    	PEA	IX+%FFFFFFAA
043045 CD 4F 05 04         A 10374    	CALL	_load_bmp_direct
043049 C1                  A 10375    	POP	BC
04304A C1                  A 10376    	POP	BC
04304B C1                  A 10377    	POP	BC
                           A 10378    ;  890		load_bmp_direct(tail_w, SNAKE_TAIL_
                           A 10379    .LINE 890
                           A 10380    
04304C 010D0000            A 10381    	LD	BC,13
043050 C5                  A 10382    	PUSH	BC
043051 DD0736              A 10383    	LD	BC,(IX+%36)
043054 C5                  A 10384    	PUSH	BC
043055 ED65A5              A 10385    	PEA	IX+%FFFFFFA5
043058 CD 4F 05 04         A 10386    	CALL	_load_bmp_direct
04305C C1                  A 10387    	POP	BC
04305D C1                  A 10388    	POP	BC
04305E C1                  A 10389    	POP	BC
                           A 10390    ;  891		
                           A 10391    ;  892		game.snake[0].x = start_x;
                           A 10392    .LINE 892
                           A 10393    
04305F 01 8C 5E 04         A 10394    	LD	BC,_game+15
043063 DD0FF7              A 10395    	LD	(IX+%FFFFFFF7),BC
043066 DD31F7              A 10396    	LD	IY,(IX+%FFFFFFF7)
043069 DD0709              A 10397    	LD	BC,(IX+%9)
04306C FD7100              A 10398    	LD	(IY+%0),C
04306F FD7001              A 10399    	LD	(IY+%1),B
                           A 10400    ;  893		game.snake[0].y = start_y;
                           A 10401    .LINE 893
                           A 10402    
043072 DD070C              A 10403    	LD	BC,(IX+%C)
043075 FD7102              A 10404    	LD	(IY+%2),C
043078 FD7003              A 10405    	LD	(IY+%3),B
                           A 10406    ;  894		vdp_spriteClearFrames(SPRITE_START 
                           A 10407    .LINE 894
                           A 10408    
04307B 01140000            A 10409    	LD	BC,20
04307F C5                  A 10410    	PUSH	BC
043080 CD 7B 3E 04         A 10411    	CALL	_vdp_spriteClearFrames
043084 C1                  A 10412    	POP	BC
                           A 10413    ;  895		vdp_spriteAddFrame(SPRITE_START + 0
                           A 10414    .LINE 895
                           A 10415    
043085 01000000            A 10416    	LD	BC,0
043089 C5                  A 10417    	PUSH	BC
04308A 01140000            A 10418    	LD	BC,20
04308E C5                  A 10419    	PUSH	BC
04308F CD D1 3E 04         A 10420    	CALL	_vdp_spriteAddFrame
043093 C1                  A 10421    	POP	BC
043094 C1                  A 10422    	POP	BC
                           A 10423    ;  896		vdp_spriteAddFrame(SPRITE_START + 0
                           A 10424    .LINE 896
                           A 10425    
043095 01010000            A 10426    	LD	BC,1
043099 C5                  A 10427    	PUSH	BC
04309A 01140000            A 10428    	LD	BC,20
04309E C5                  A 10429    	PUSH	BC
04309F CD D1 3E 04         A 10430    	CALL	_vdp_spriteAddFrame
0430A3 C1                  A 10431    	POP	BC
0430A4 C1                  A 10432    	POP	BC
                           A 10433    ;  897		vdp_spriteAddFrame(SPRITE_START + 0
                           A 10434    .LINE 897
                           A 10435    
0430A5 01020000            A 10436    	LD	BC,2
0430A9 C5                  A 10437    	PUSH	BC
0430AA 01140000            A 10438    	LD	BC,20
0430AE C5                  A 10439    	PUSH	BC
0430AF CD D1 3E 04         A 10440    	CALL	_vdp_spriteAddFrame
0430B3 C1                  A 10441    	POP	BC
0430B4 C1                  A 10442    	POP	BC
                           A 10443    ;  898		vdp_spriteAddFrame(SPRITE_START + 0
                           A 10444    .LINE 898
                           A 10445    
0430B5 01030000            A 10446    	LD	BC,3
0430B9 C5                  A 10447    	PUSH	BC
0430BA 01140000            A 10448    	LD	BC,20
0430BE C5                  A 10449    	PUSH	BC
0430BF CD D1 3E 04         A 10450    	CALL	_vdp_spriteAddFrame
0430C3 C1                  A 10451    	POP	BC
0430C4 C1                  A 10452    	POP	BC
                           A 10453    ;  899		vdp_spriteMoveTo(SPRITE_START + 0, 
                           A 10454    .LINE 899
                           A 10455    
0430C5 DD07F7              A 10456    	LD	BC,(IX+%FFFFFFF7)
0430C8 DD0FEE              A 10457    	LD	(IX+%FFFFFFEE),BC
0430CB DD07F7              A 10458    	LD	BC,(IX+%FFFFFFF7)
0430CE DD0FA2              A 10459    	LD	(IX+%FFFFFFA2),BC
0430D1 DD31A2              A 10460    	LD	IY,(IX+%FFFFFFA2)
0430D4 FD0702              A 10461    	LD	BC,(IY+%2)
0430D7 C5                  A 10462    	PUSH	BC
0430D8 FD0700              A 10463    	LD	BC,(IY+%0)
0430DB C5                  A 10464    	PUSH	BC
0430DC 01140000            A 10465    	LD	BC,20
0430E0 C5                  A 10466    	PUSH	BC
0430E1 CD B4 40 04         A 10467    	CALL	_vdp_spriteMoveTo
0430E5 C1                  A 10468    	POP	BC
0430E6 C1                  A 10469    	POP	BC
0430E7 C1                  A 10470    	POP	BC
                           A 10471    ;  900		vdp_spriteShow(SPRITE_START + 0);
                           A 10472    .LINE 900
                           A 10473    
0430E8 01140000            A 10474    	LD	BC,20
0430EC C5                  A 10475    	PUSH	BC
0430ED CD 10 40 04         A 10476    	CALL	_vdp_spriteShow
0430F1 C1                  A 10477    	POP	BC
                           A 10478    ;  901	
                           A 10479    ;  902		
                           A 10480    ;  903		for (segment = 1; segment <= length
                           A 10481    .LINE 903
                           A 10482    
0430F2 DD36FF01            A 10483    	LD	(IX+%FFFFFFFF),%1
0430F6 C3 F4 32 04         A 10484    	JR	L_304
0430FA                     A 10485    L_302:
                           A 10486    ;  904			game.snake[segment].height = ga
                           A 10487    .LINE 904
                           A 10488    
0430FA DD07EE              A 10489    	LD	BC,(IX+%FFFFFFEE)
0430FD DD0FF4              A 10490    	LD	(IX+%FFFFFFF4),BC
043100 DD7EFF              A 10491    	LD	A,(IX+%FFFFFFFF)
043103 B7ED62              A 10492    	UEXT	HL
043106 6F                  A 10493    	LD	L,A
043107 29                  A 10494    	ADD	HL,HL
043108 29                  A 10495    	ADD	HL,HL
043109 29                  A 10496    	ADD	HL,HL
04310A E5D1                A 10497    	LD	DE,HL
04310C D5C1                A 10498    	LD	BC,DE
04310E DD27F4              A 10499    	LD	HL,(IX+%FFFFFFF4)
043111 09                  A 10500    	ADD	HL,BC
043112 DD2F9F              A 10501    	LD	(IX+%FFFFFF9F),HL
043115 3A 40 63 04         A 10502    	LD	A,(_game+1219)
043119 DD319F              A 10503    	LD	IY,(IX+%FFFFFF9F)
04311C FD7706              A 10504    	LD	(IY+%6),A
04311F FD360700            A 10505    	LD	(IY+%7),%0
                           A 10506    ;  905			game.snake[segment].width = gam
                           A 10507    .LINE 905
                           A 10508    
043123 3A 3F 63 04         A 10509    	LD	A,(_game+1218)
043127 FD7704              A 10510    	LD	(IY+%4),A
04312A FD360500            A 10511    	LD	(IY+%5),%0
                           A 10512    ;  906			game.snake[segment].x = start_x
                           A 10513    .LINE 906
                           A 10514    
04312E 3A 3C 63 04         A 10515    	LD	A,(_game+1215)
043132 47                  A 10516    	LD	B,A
043133 17ED62              A 10517    	SEXT	HL
043136 68                  A 10518    	LD	L,B
043137 E5C1                A 10519    	LD	BC,HL
043139 4921FFFF            A 10520    	LD.LIS	HL,-1
04313D CD C7 55 04         A 10521    	CALL	__smulu
043141 DD2F89              A 10522    	LD	(IX+%FFFFFF89),HL
043144 DD4EFF              A 10523    	LD	C,(IX+%FFFFFFFF)
043147 0600                A 10524    	LD	B,%0
043149 C5E1                A 10525    	LD	HL,BC
04314B DD0789              A 10526    	LD	BC,(IX+%FFFFFF89)
04314E CD C7 55 04         A 10527    	CALL	__smulu
043152 DD2F86              A 10528    	LD	(IX+%FFFFFF86),HL
043155 3A 3F 63 04         A 10529    	LD	A,(_game+1218)
043159 4F                  A 10530    	LD	C,A
04315A 0600                A 10531    	LD	B,%0
04315C C5E1                A 10532    	LD	HL,BC
04315E DD0786              A 10533    	LD	BC,(IX+%FFFFFF86)
043161 CD C7 55 04         A 10534    	CALL	__smulu
043165 DD2F83              A 10535    	LD	(IX+%FFFFFF83),HL	; spill
043168 DD1F80              A 10536    	LD	(IX+%FFFFFF80),DE	; spill
04316B E5C1                A 10537    	LD	BC,HL	; unspill
04316D DD27F4              A 10538    	LD	HL,(IX+%FFFFFFF4)
043170 DD0F83              A 10539    	LD	(IX+%FFFFFF83),BC	; spill
043173 DD0780              A 10540    	LD	BC,(IX+%FFFFFF80)	; unspill
043176 09                  A 10541    	ADD	HL,BC
043177 E5FDE1              A 10542    	LD	IY,HL
04317A DD2783              A 10543    	LD	HL,(IX+%FFFFFF83)
04317D 017DFFFF            A 10544    	LD	BC,-131	; spill
043181 CD F1 4B 04         A 10545    	CALL	__istix
043185 DD2709              A 10546    	LD	HL,(IX+%9)	; unspill
043188 017AFFFF            A 10547    	LD	BC,-134	; spill
04318C CD F1 4B 04         A 10548    	CALL	__istix
043190 017DFFFF            A 10549    	LD	BC,-131	; unspill
043194 CD BB 55 04         A 10550    	CALL	__ildix
043198 E5C1                A 10551    	LD	BC,HL
04319A C5E1                A 10552    	LD	HL,BC
04319C 017AFFFF            A 10553    	LD	BC,-134	; unspill
0431A0 E5                  A 10554    	PUSH	HL
0431A1 CD BB 55 04         A 10555    	CALL	__ildix
0431A5 E5C1                A 10556    	LD	BC,HL
0431A7 E1                  A 10557    	POP	HL
0431A8 4009                A 10558    	ADD.SIS	HL,BC
0431AA E5C1                A 10559    	LD	BC,HL
0431AC FD7100              A 10560    	LD	(IY+%0),C
0431AF FD7001              A 10561    	LD	(IY+%1),B
                           A 10562    ;  907			game.snake[segment].y = start_y
                           A 10563    .LINE 907
                           A 10564    
0431B2 D5C1                A 10565    	LD	BC,DE
0431B4 DD27F4              A 10566    	LD	HL,(IX+%FFFFFFF4)
0431B7 09                  A 10567    	ADD	HL,BC
0431B8 DD070C              A 10568    	LD	BC,(IX+%C)
0431BB E5FDE1              A 10569    	LD	IY,HL
0431BE FD7102              A 10570    	LD	(IY+%2),C
0431C1 FD7003              A 10571    	LD	(IY+%3),B
                           A 10572    ;  908			
                           A 10573    ;  909			vdp_spriteClearFrames(SPRITE_ST
                           A 10574    .LINE 909
                           A 10575    
0431C4 DD7EFF              A 10576    	LD	A,(IX+%FFFFFFFF)
0431C7 C614                A 10577    	ADD	A,%14
0431C9 4F                  A 10578    	LD	C,A
0431CA 0600                A 10579    	LD	B,%0
0431CC C5                  A 10580    	PUSH	BC
0431CD CD 7B 3E 04         A 10581    	CALL	_vdp_spriteClearFrames
0431D1 C1                  A 10582    	POP	BC
                           A 10583    ;  910			
                           A 10584    ;  911			vdp_spriteAddFrame(SPRITE_START
                           A 10585    .LINE 911
                           A 10586    
0431D2 01040000            A 10587    	LD	BC,4
0431D6 C5                  A 10588    	PUSH	BC
0431D7 DD7EFF              A 10589    	LD	A,(IX+%FFFFFFFF)
0431DA C614                A 10590    	ADD	A,%14
0431DC 4F                  A 10591    	LD	C,A
0431DD 0600                A 10592    	LD	B,%0
0431DF C5                  A 10593    	PUSH	BC
0431E0 CD D1 3E 04         A 10594    	CALL	_vdp_spriteAddFrame
0431E4 C1                  A 10595    	POP	BC
0431E5 C1                  A 10596    	POP	BC
                           A 10597    ;  912			vdp_spriteAddFrame(SPRITE_START
                           A 10598    .LINE 912
                           A 10599    
0431E6 01050000            A 10600    	LD	BC,5
0431EA C5                  A 10601    	PUSH	BC
0431EB DD7EFF              A 10602    	LD	A,(IX+%FFFFFFFF)
0431EE C614                A 10603    	ADD	A,%14
0431F0 4F                  A 10604    	LD	C,A
0431F1 0600                A 10605    	LD	B,%0
0431F3 C5                  A 10606    	PUSH	BC
0431F4 CD D1 3E 04         A 10607    	CALL	_vdp_spriteAddFrame
0431F8 C1                  A 10608    	POP	BC
0431F9 C1                  A 10609    	POP	BC
                           A 10610    ;  913			vdp_spriteAddFrame(SPRITE_START
                           A 10611    .LINE 913
                           A 10612    
0431FA 01060000            A 10613    	LD	BC,6
0431FE C5                  A 10614    	PUSH	BC
0431FF DD7EFF              A 10615    	LD	A,(IX+%FFFFFFFF)
043202 C614                A 10616    	ADD	A,%14
043204 4F                  A 10617    	LD	C,A
043205 0600                A 10618    	LD	B,%0
043207 C5                  A 10619    	PUSH	BC
043208 CD D1 3E 04         A 10620    	CALL	_vdp_spriteAddFrame
04320C C1                  A 10621    	POP	BC
04320D C1                  A 10622    	POP	BC
                           A 10623    ;  914			vdp_spriteAddFrame(SPRITE_START
                           A 10624    .LINE 914
                           A 10625    
04320E 01070000            A 10626    	LD	BC,7
043212 C5                  A 10627    	PUSH	BC
043213 DD7EFF              A 10628    	LD	A,(IX+%FFFFFFFF)
043216 C614                A 10629    	ADD	A,%14
043218 4F                  A 10630    	LD	C,A
043219 0600                A 10631    	LD	B,%0
04321B C5                  A 10632    	PUSH	BC
04321C CD D1 3E 04         A 10633    	CALL	_vdp_spriteAddFrame
043220 C1                  A 10634    	POP	BC
043221 C1                  A 10635    	POP	BC
                           A 10636    ;  915			vdp_spriteAddFrame(SPRITE_START
                           A 10637    .LINE 915
                           A 10638    
043222 01080000            A 10639    	LD	BC,8
043226 C5                  A 10640    	PUSH	BC
043227 DD7EFF              A 10641    	LD	A,(IX+%FFFFFFFF)
04322A C614                A 10642    	ADD	A,%14
04322C 4F                  A 10643    	LD	C,A
04322D 0600                A 10644    	LD	B,%0
04322F C5                  A 10645    	PUSH	BC
043230 CD D1 3E 04         A 10646    	CALL	_vdp_spriteAddFrame
043234 C1                  A 10647    	POP	BC
043235 C1                  A 10648    	POP	BC
                           A 10649    ;  916			vdp_spriteAddFrame(SPRITE_START
                           A 10650    .LINE 916
                           A 10651    
043236 01090000            A 10652    	LD	BC,9
04323A C5                  A 10653    	PUSH	BC
04323B DD7EFF              A 10654    	LD	A,(IX+%FFFFFFFF)
04323E C614                A 10655    	ADD	A,%14
043240 4F                  A 10656    	LD	C,A
043241 0600                A 10657    	LD	B,%0
043243 C5                  A 10658    	PUSH	BC
043244 CD D1 3E 04         A 10659    	CALL	_vdp_spriteAddFrame
043248 C1                  A 10660    	POP	BC
043249 C1                  A 10661    	POP	BC
                           A 10662    ;  917			vdp_spriteAddFrame(SPRITE_START
                           A 10663    .LINE 917
                           A 10664    
04324A 010A0000            A 10665    	LD	BC,10
04324E C5                  A 10666    	PUSH	BC
04324F DD7EFF              A 10667    	LD	A,(IX+%FFFFFFFF)
043252 C614                A 10668    	ADD	A,%14
043254 4F                  A 10669    	LD	C,A
043255 0600                A 10670    	LD	B,%0
043257 C5                  A 10671    	PUSH	BC
043258 CD D1 3E 04         A 10672    	CALL	_vdp_spriteAddFrame
04325C C1                  A 10673    	POP	BC
04325D C1                  A 10674    	POP	BC
                           A 10675    ;  918			vdp_spriteAddFrame(SPRITE_START
                           A 10676    .LINE 918
                           A 10677    
04325E 010B0000            A 10678    	LD	BC,11
043262 C5                  A 10679    	PUSH	BC
043263 DD7EFF              A 10680    	LD	A,(IX+%FFFFFFFF)
043266 C614                A 10681    	ADD	A,%14
043268 4F                  A 10682    	LD	C,A
043269 0600                A 10683    	LD	B,%0
04326B C5                  A 10684    	PUSH	BC
04326C CD D1 3E 04         A 10685    	CALL	_vdp_spriteAddFrame
043270 C1                  A 10686    	POP	BC
043271 C1                  A 10687    	POP	BC
                           A 10688    ;  919			vdp_spriteAddFrame(SPRITE_START
                           A 10689    .LINE 919
                           A 10690    
043272 010C0000            A 10691    	LD	BC,12
043276 C5                  A 10692    	PUSH	BC
043277 DD7EFF              A 10693    	LD	A,(IX+%FFFFFFFF)
04327A C614                A 10694    	ADD	A,%14
04327C 4F                  A 10695    	LD	C,A
04327D 0600                A 10696    	LD	B,%0
04327F C5                  A 10697    	PUSH	BC
043280 CD D1 3E 04         A 10698    	CALL	_vdp_spriteAddFrame
043284 C1                  A 10699    	POP	BC
043285 C1                  A 10700    	POP	BC
                           A 10701    ;  920			vdp_spriteAddFrame(SPRITE_START
                           A 10702    .LINE 920
                           A 10703    
043286 010D0000            A 10704    	LD	BC,13
04328A C5                  A 10705    	PUSH	BC
04328B DD7EFF              A 10706    	LD	A,(IX+%FFFFFFFF)
04328E C614                A 10707    	ADD	A,%14
043290 4F                  A 10708    	LD	C,A
043291 0600                A 10709    	LD	B,%0
043293 C5                  A 10710    	PUSH	BC
043294 CD D1 3E 04         A 10711    	CALL	_vdp_spriteAddFrame
043298 C1                  A 10712    	POP	BC
043299 C1                  A 10713    	POP	BC
                           A 10714    ;  921			
                           A 10715    ;  922			vdp_spriteSetFrame(SPRITE_START
                           A 10716    .LINE 922
                           A 10717    
04329A 01040000            A 10718    	LD	BC,4
04329E C5                  A 10719    	PUSH	BC
04329F DD7EFF              A 10720    	LD	A,(IX+%FFFFFFFF)
0432A2 C614                A 10721    	ADD	A,%14
0432A4 4F                  A 10722    	LD	C,A
0432A5 0600                A 10723    	LD	B,%0
0432A7 C5                  A 10724    	PUSH	BC
0432A8 CD C0 3F 04         A 10725    	CALL	_vdp_spriteSetFrame
0432AC C1                  A 10726    	POP	BC
0432AD C1                  A 10727    	POP	BC
                           A 10728    ;  923			
                           A 10729    ;  924			vdp_spriteMoveTo(SPRITE_START +
                           A 10730    .LINE 924
                           A 10731    
0432AE DD07F4              A 10732    	LD	BC,(IX+%FFFFFFF4)
0432B1 DD0FEE              A 10733    	LD	(IX+%FFFFFFEE),BC
0432B4 DD7EFF              A 10734    	LD	A,(IX+%FFFFFFFF)
0432B7 B7ED62              A 10735    	UEXT	HL
0432BA 6F                  A 10736    	LD	L,A
0432BB 29                  A 10737    	ADD	HL,HL
0432BC 29                  A 10738    	ADD	HL,HL
0432BD 29                  A 10739    	ADD	HL,HL
0432BE DD07F4              A 10740    	LD	BC,(IX+%FFFFFFF4)
0432C1 09                  A 10741    	ADD	HL,BC
0432C2 DD2F99              A 10742    	LD	(IX+%FFFFFF99),HL
0432C5 DD2F9C              A 10743    	LD	(IX+%FFFFFF9C),HL
0432C8 DD319C              A 10744    	LD	IY,(IX+%FFFFFF9C)
0432CB FD0702              A 10745    	LD	BC,(IY+%2)
0432CE C5                  A 10746    	PUSH	BC
0432CF FD0700              A 10747    	LD	BC,(IY+%0)
0432D2 C5                  A 10748    	PUSH	BC
0432D3 DD7EFF              A 10749    	LD	A,(IX+%FFFFFFFF)
0432D6 C614                A 10750    	ADD	A,%14
0432D8 4F                  A 10751    	LD	C,A
0432D9 0600                A 10752    	LD	B,%0
0432DB C5                  A 10753    	PUSH	BC
0432DC CD B4 40 04         A 10754    	CALL	_vdp_spriteMoveTo
0432E0 C1                  A 10755    	POP	BC
0432E1 C1                  A 10756    	POP	BC
0432E2 C1                  A 10757    	POP	BC
                           A 10758    ;  925			vdp_spriteShow(SPRITE_START + s
                           A 10759    .LINE 925
                           A 10760    
0432E3 DD7EFF              A 10761    	LD	A,(IX+%FFFFFFFF)
0432E6 C614                A 10762    	ADD	A,%14
0432E8 4F                  A 10763    	LD	C,A
0432E9 0600                A 10764    	LD	B,%0
0432EB C5                  A 10765    	PUSH	BC
0432EC CD 10 40 04         A 10766    	CALL	_vdp_spriteShow
0432F0 C1                  A 10767    	POP	BC
0432F1 DD34FF              A 10768    	INC	(IX+%FFFFFFFF)
                           A 10769    ;  926	
                           A 10770    ;  927		}
0432F4                     A 10771    L_304:
                           A 10772    .LINE 927
                           A 10773    
0432F4 DD7E06              A 10774    	LD	A,(IX+%6)
0432F7 DDBEFF              A 10775    	CP	A,(IX+%FFFFFFFF)
0432FA D2 FA 30 04         A 10776    	JR	NC,L_302
                           A 10777    ;  928		
                           A 10778    ;  929		bmp = load_bmp_direct(food, SNAKE_F
                           A 10779    .LINE 929
                           A 10780    
0432FE 010E0000            A 10781    	LD	BC,14
043302 C5                  A 10782    	PUSH	BC
043303 DD0739              A 10783    	LD	BC,(IX+%39)
043306 C5                  A 10784    	PUSH	BC
043307 ED6591              A 10785    	PEA	IX+%FFFFFF91
04330A CD 4F 05 04         A 10786    	CALL	_load_bmp_direct
04330E C1                  A 10787    	POP	BC
04330F C1                  A 10788    	POP	BC
043310 C1                  A 10789    	POP	BC
043311 ED12FA              A 10790    	LEA	DE,IX+%FFFFFFFA
043314 01050000            A 10791    	LD	BC,5
043318 EDB0                A 10792    	LDIR	
                           A 10793    ;  930		game.current_food.width = bmp.bmp_w
                           A 10794    .LINE 930
                           A 10795    
04331A 01 81 5E 04         A 10796    	LD	BC,_game+4
04331E DD0FF1              A 10797    	LD	(IX+%FFFFFFF1),BC
043321 DD0F96              A 10798    	LD	(IX+%FFFFFF96),BC
043324 DD07FA              A 10799    	LD	BC,(IX+%FFFFFFFA)
043327 DD31F1              A 10800    	LD	IY,(IX+%FFFFFFF1)
04332A FD7104              A 10801    	LD	(IY+%4),C
04332D FD7005              A 10802    	LD	(IY+%5),B
                           A 10803    ;  931		game.current_food.height = bmp.bmp_
                           A 10804    .LINE 931
                           A 10805    
043330 DD07FC              A 10806    	LD	BC,(IX+%FFFFFFFC)
043333 DD3196              A 10807    	LD	IY,(IX+%FFFFFF96)
043336 FD7106              A 10808    	LD	(IY+%6),C
043339 FD7007              A 10809    	LD	(IY+%7),B
                           A 10810    ;  932		game.current_food.x = prand(32, gam
                           A 10811    .LINE 932
                           A 10812    
04333C ED4B 7D 5E 04       A 10813    	LD	BC,(_game)
043341 CD 9B 4D 04         A 10814    	CALL	__stoiu
043345 E5FDE1              A 10815    	LD	IY,HL
043348 ED03E0              A 10816    	LEA	BC,IY+%FFFFFFE0
04334B C5                  A 10817    	PUSH	BC
04334C 01200000            A 10818    	LD	BC,32
043350 C5                  A 10819    	PUSH	BC
043351 CD 89 1F 04         A 10820    	CALL	_prand
043355 C1                  A 10821    	POP	BC
043356 C1                  A 10822    	POP	BC
043357 DD3196              A 10823    	LD	IY,(IX+%FFFFFF96)
04335A E5C1                A 10824    	LD	BC,HL
04335C FD7100              A 10825    	LD	(IY+%0),C
04335F FD7001              A 10826    	LD	(IY+%1),B
                           A 10827    ;  933		game.current_food.y = prand(32, gam
                           A 10828    .LINE 933
                           A 10829    
043362 ED4B 7F 5E 04       A 10830    	LD	BC,(_game+2)
043367 CD 9B 4D 04         A 10831    	CALL	__stoiu
04336B E5FDE1              A 10832    	LD	IY,HL
04336E ED03E0              A 10833    	LEA	BC,IY+%FFFFFFE0
043371 C5                  A 10834    	PUSH	BC
043372 01200000            A 10835    	LD	BC,32
043376 C5                  A 10836    	PUSH	BC
043377 CD 89 1F 04         A 10837    	CALL	_prand
04337B C1                  A 10838    	POP	BC
04337C C1                  A 10839    	POP	BC
04337D DD3196              A 10840    	LD	IY,(IX+%FFFFFF96)
043380 E5C1                A 10841    	LD	BC,HL
043382 FD7102              A 10842    	LD	(IY+%2),C
043385 FD7003              A 10843    	LD	(IY+%3),B
                           A 10844    ;  934		vdp_spriteAddFrame(SPRITE_FOOD, SNA
                           A 10845    .LINE 934
                           A 10846    
043388 010E0000            A 10847    	LD	BC,14
04338C C5                  A 10848    	PUSH	BC
04338D 01040000            A 10849    	LD	BC,4
043391 C5                  A 10850    	PUSH	BC
043392 CD D1 3E 04         A 10851    	CALL	_vdp_spriteAddFrame
043396 C1                  A 10852    	POP	BC
043397 C1                  A 10853    	POP	BC
                           A 10854    ;  935		vdp_spriteMoveTo(SPRITE_FOOD, game.
                           A 10855    .LINE 935
                           A 10856    
043398 DD31F1              A 10857    	LD	IY,(IX+%FFFFFFF1)
04339B FD0702              A 10858    	LD	BC,(IY+%2)
04339E C5                  A 10859    	PUSH	BC
04339F FD0700              A 10860    	LD	BC,(IY+%0)
0433A2 C5                  A 10861    	PUSH	BC
0433A3 01040000            A 10862    	LD	BC,4
0433A7 C5                  A 10863    	PUSH	BC
0433A8 CD B4 40 04         A 10864    	CALL	_vdp_spriteMoveTo
0433AC C1                  A 10865    	POP	BC
0433AD C1                  A 10866    	POP	BC
0433AE C1                  A 10867    	POP	BC
                           A 10868    ;  936		vdp_spriteShowSelected();
                           A 10869    .LINE 936
                           A 10870    
0433AF CD E4 3F 04         A 10871    	CALL	_vdp_spriteShowSelected
                           A 10872    ;  937		//vdp_bitmapDraw(SNAKE_FOOD, game.c
                           A 10873    ;  938		
                           A 10874    ;  939		bmp = load_bmp_direct(tile, BACKGRO
                           A 10875    .LINE 939
                           A 10876    
0433B3 010F0000            A 10877    	LD	BC,15
0433B7 C5                  A 10878    	PUSH	BC
0433B8 DD073C              A 10879    	LD	BC,(IX+%3C)
0433BB C5                  A 10880    	PUSH	BC
0433BC ED658C              A 10881    	PEA	IX+%FFFFFF8C
0433BF CD 4F 05 04         A 10882    	CALL	_load_bmp_direct
0433C3 C1                  A 10883    	POP	BC
0433C4 C1                  A 10884    	POP	BC
0433C5 C1                  A 10885    	POP	BC
0433C6 ED12FA              A 10886    	LEA	DE,IX+%FFFFFFFA
0433C9 01050000            A 10887    	LD	BC,5
0433CD EDB0                A 10888    	LDIR	
                           A 10889    ;  940		game.bg_tile_width = bmp.bmp_width;
                           A 10890    .LINE 940
                           A 10891    
0433CF DD7EFA              A 10892    	LD	A,(IX+%FFFFFFFA)
0433D2 32 45 63 04         A 10893    	LD	(_game+1224),A
                           A 10894    ;  941		game.bg_tile_height = bmp.bmp_heigh
                           A 10895    .LINE 941
                           A 10896    
0433D6 DD7EFC              A 10897    	LD	A,(IX+%FFFFFFFC)
0433D9 32 46 63 04         A 10898    	LD	(_game+1225),A
                           A 10899    ;  942		
                           A 10900    ;  943	}
                           A 10901    .LINE 943
                           A 10902    
0433DD DDF9                A 10903    	LD	SP,IX
0433DF DDE1                A 10904    	POP	IX
0433E1 C9                  A 10905    	RET	
                           A 10906    
                           A 10907    
                           A 10908    ;**************************** _setup_snake ****
                           A 10909    ;Name                         Addr/Register   S
                           A 10910    ;_vdp_spriteShowSelected             IMPORT  --
                           A 10911    ;_vdp_spriteSetFrame                 IMPORT  --
                           A 10912    ;_vdp_spriteShow                     IMPORT  --
                           A 10913    ;_vdp_spriteMoveTo                   IMPORT  --
                           A 10914    ;_vdp_spriteAddFrame                 IMPORT  --
                           A 10915    ;_vdp_spriteClearFrames              IMPORT  --
                           A 10916    ;_game                               STATIC   1
                           A 10917    ;___print_sendstring                 IMPORT  --
                           A 10918    ;___print_xputch                     IMPORT    
                           A 10919    ;___print_uputch                     IMPORT  --
                           A 10920    ;G_37                                 IX-18    
                           A 10921    ;G_39                                 IX-15    
                           A 10922    ;G_38                                 IX-12    
                           A 10923    ;G_36                                  IX-9    
                           A 10924    ;bmp                                   IX-6    
                           A 10925    ;segment                               IX-1    
                           A 10926    ;tile                                 IX+60    
                           A 10927    ;food                                 IX+57    
                           A 10928    ;tail_w                               IX+54    
                           A 10929    ;tail_s                               IX+51    
                           A 10930    ;tail_e                               IX+48    
                           A 10931    ;tail_n                               IX+45    
                           A 10932    ;body_nw                              IX+42    
                           A 10933    ;body_sw                              IX+39    
                           A 10934    ;body_se                              IX+36    
                           A 10935    ;body_ne                              IX+33    
                           A 10936    ;body_ver                             IX+30    
                           A 10937    ;body_hor                             IX+27    
                           A 10938    ;head_w                               IX+24    
                           A 10939    ;head_s                               IX+21    
                           A 10940    ;head_e                               IX+18    
                           A 10941    ;head_n                               IX+15    
                           A 10942    ;start_y                              IX+12    
                           A 10943    ;start_x                               IX+9    
                           A 10944    ;length                                IX+6    
                           A 10945    
                           A 10946    
                           A 10947    ; Stack Frame Size: 197 (bytes)
                           A 10948    ;       Spill Code: -4 (instruction)
                           A 10949    
                           A 10950    
                           A 10951    .ENDFUNC "setup_snake",943,"_setup_snake"
                           A 10952    	SEGMENT STRSECT
045C6E                     A 10953    L__265:
045C6E 4C6F6164 696E6720   A 10954    	DB	"Loading images..."
045C76 696D6167 65732E2E 
045C7E 2E 
045C7F 00                  A 10955    	DB	0
                           A 10956    	SEGMENT CODE
                           A 10957    ;  944	
                           A 10958    ;  945	void draw_background() {
0433E2                     A 10959    _draw_background:
                           A 10960    .DEFINE "_draw_background"
                           A 10961    
                           A 10962    .VALUE _draw_background
                           A 10963    
                           A 10964    .CLASS 2
                           A 10965    
                           A 10966    .TYPE 65
                           A 10967    
                           A 10968    .ENDEF
                           A 10969    
                           A 10970    .BEGFUNC "draw_background",945,"_draw_backgroun
                           A 10971    
                           A 10972    .LINE 945
                           A 10973    
                           A 10974    .DEFINE "x"
                           A 10975    
                           A 10976    .CLASS 65
                           A 10977    
                           A 10978    .VALUE -1
                           A 10979    
                           A 10980    .TYPE 12
                           A 10981    
                           A 10982    .ENDEF
                           A 10983    
                           A 10984    .DEFINE "y"
                           A 10985    
                           A 10986    .CLASS 65
                           A 10987    
                           A 10988    .VALUE -2
                           A 10989    
                           A 10990    .TYPE 12
                           A 10991    
                           A 10992    .ENDEF
                           A 10993    
0433E2 DDE5                A 10994    	PUSH	IX
0433E4 DD210000 00         A 10995    	LD	IX,0
0433E9 DD39                A 10996    	ADD	IX,SP
0433EB 3B                  A 10997    	DEC	SP
0433EC 3B                  A 10998    	DEC	SP
                           A 10999    ;  946	
                           A 11000    ;  947		uint8_t x, y;
                           A 11001    ;  948		
                           A 11002    ;  949		//vdp_bitmapSelect(BACKGROUND_TILE)
                           A 11003    ;  950		
                           A 11004    ;  951		for (x = 0; x < (game.screen_width 
                           A 11005    .LINE 951
                           A 11006    
0433ED DD36FF00            A 11007    	LD	(IX+%FFFFFFFF),%0
0433F1 18 6E               A 11008    	JR	L_314
0433F3                     A 11009    L_312:
                           A 11010    ;  952			
                           A 11011    ;  953			for (y = 0; y < (game.screen_he
                           A 11012    .LINE 953
                           A 11013    
0433F3 DD36FE00            A 11014    	LD	(IX+%FFFFFFFE),%0
0433F7 18 39               A 11015    	JR	L_311
0433F9                     A 11016    L_309:
                           A 11017    ;  954			
                           A 11018    ;  955				vdp_bitmapDraw(BACKGROUND_T
                           A 11019    .LINE 955
                           A 11020    
0433F9 3A 46 63 04         A 11021    	LD	A,(_game+1225)
0433FD 4F                  A 11022    	LD	C,A
0433FE 0600                A 11023    	LD	B,%0
043400 C5D1                A 11024    	LD	DE,BC
043402 DD4EFE              A 11025    	LD	C,(IX+%FFFFFFFE)
043405 C5E1                A 11026    	LD	HL,BC
043407 D5C1                A 11027    	LD	BC,DE
043409 CD C7 55 04         A 11028    	CALL	__smulu
04340D E5                  A 11029    	PUSH	HL
04340E 3A 45 63 04         A 11030    	LD	A,(_game+1224)
043412 4F                  A 11031    	LD	C,A
043413 0600                A 11032    	LD	B,%0
043415 C5D1                A 11033    	LD	DE,BC
043417 DD4EFF              A 11034    	LD	C,(IX+%FFFFFFFF)
04341A C5E1                A 11035    	LD	HL,BC
04341C D5C1                A 11036    	LD	BC,DE
04341E CD C7 55 04         A 11037    	CALL	__smulu
043422 E5                  A 11038    	PUSH	HL
043423 010F0000            A 11039    	LD	BC,15
043427 C5                  A 11040    	PUSH	BC
043428 CD 6E 3D 04         A 11041    	CALL	_vdp_bitmapDraw
04342C C1                  A 11042    	POP	BC
04342D C1                  A 11043    	POP	BC
04342E C1                  A 11044    	POP	BC
04342F DD34FE              A 11045    	INC	(IX+%FFFFFFFE)
                           A 11046    ;  956				
                           A 11047    ;  957			}
043432                     A 11048    L_311:
                           A 11049    .LINE 957
                           A 11050    
043432 ED4B 7F 5E 04       A 11051    	LD	BC,(_game+2)
043437 CD 9B 4D 04         A 11052    	CALL	__stoiu
04343B E5D1                A 11053    	LD	DE,HL
04343D 3A 46 63 04         A 11054    	LD	A,(_game+1225)
043441 B7ED62              A 11055    	UEXT	HL
043444 6F                  A 11056    	LD	L,A
043445 E5C1                A 11057    	LD	BC,HL
043447 D5E1                A 11058    	LD	HL,DE
043449 CD 2B 50 04         A 11059    	CALL	__idivs
04344D E5C1                A 11060    	LD	BC,HL
04344F 03                  A 11061    	INC	BC
043450 DD7EFE              A 11062    	LD	A,(IX+%FFFFFFFE)
043453 B7ED62              A 11063    	UEXT	HL
043456 6F                  A 11064    	LD	L,A
043457 B7                  A 11065    	OR	A,A
043458 ED42                A 11066    	SBC	HL,BC
04345A FA F9 33 04         A 11067    	JP	M,L_309
04345E DD34FF              A 11068    	INC	(IX+%FFFFFFFF)
                           A 11069    ;  958			
                           A 11070    ;  959		}
043461                     A 11071    L_314:
                           A 11072    .LINE 959
                           A 11073    
043461 ED4B 7D 5E 04       A 11074    	LD	BC,(_game)
043466 CD 9B 4D 04         A 11075    	CALL	__stoiu
04346A E5D1                A 11076    	LD	DE,HL
04346C 3A 45 63 04         A 11077    	LD	A,(_game+1224)
043470 B7ED62              A 11078    	UEXT	HL
043473 6F                  A 11079    	LD	L,A
043474 E5C1                A 11080    	LD	BC,HL
043476 D5E1                A 11081    	LD	HL,DE
043478 CD 2B 50 04         A 11082    	CALL	__idivs
04347C E5C1                A 11083    	LD	BC,HL
04347E 03                  A 11084    	INC	BC
04347F DD7EFF              A 11085    	LD	A,(IX+%FFFFFFFF)
043482 B7ED62              A 11086    	UEXT	HL
043485 6F                  A 11087    	LD	L,A
043486 B7                  A 11088    	OR	A,A
043487 ED42                A 11089    	SBC	HL,BC
043489 FA 93 34 04         A 11090    	JP	M,L__270
04348D EA F3 33 04         A 11091    	JP	PE,L_312
043491 18 04               A 11092    	JR	L__271
043493                     A 11093    L__270:
043493 E2 F3 33 04         A 11094    	JP	PO,L_312
043497                     A 11095    L__271:
                           A 11096    ;  960		
                           A 11097    ;  961	}
                           A 11098    .LINE 961
                           A 11099    
043497 DDF9                A 11100    	LD	SP,IX
043499 DDE1                A 11101    	POP	IX
04349B C9                  A 11102    	RET	
                           A 11103    
                           A 11104    
                           A 11105    ;**************************** _draw_background 
                           A 11106    ;Name                         Addr/Register   S
                           A 11107    ;_game                               STATIC   1
                           A 11108    ;_vdp_bitmapDraw                     IMPORT  --
                           A 11109    ;y                                     IX-2    
                           A 11110    ;x                                     IX-1    
                           A 11111    
                           A 11112    
                           A 11113    ; Stack Frame Size: 8 (bytes)
                           A 11114    ;       Spill Code: -4 (instruction)
                           A 11115    
                           A 11116    
                           A 11117    .ENDFUNC "draw_background",961,"_draw_backgroun
                           A 11118    ;  962	
                           A 11119    ;  963	int main(int argc, char * argv[]) {
04349C                     A 11120    _main:
                           A 11121    .DEFINE "_main"
                           A 11122    
                           A 11123    .VALUE _main
                           A 11124    
                           A 11125    .CLASS 2
                           A 11126    
                           A 11127    .TYPE 68
                           A 11128    
                           A 11129    .ENDEF
                           A 11130    
                           A 11131    .BEGFUNC "main",963,"_main"
                           A 11132    
                           A 11133    .LINE 963
                           A 11134    
                           A 11135    .DEFINE "argc"
                           A 11136    
                           A 11137    .CLASS 65
                           A 11138    
                           A 11139    .VALUE 6
                           A 11140    
                           A 11141    .TYPE 4
                           A 11142    
                           A 11143    .ENDEF
                           A 11144    
                           A 11145    .DEFINE "argv"
                           A 11146    
                           A 11147    .CLASS 65
                           A 11148    
                           A 11149    .VALUE 9
                           A 11150    
                           A 11151    .TYPE 290
                           A 11152    
                           A 11153    .ENDEF
                           A 11154    
                           A 11155    .DEFINE "key"
                           A 11156    
                           A 11157    .CLASS 65
                           A 11158    
                           A 11159    .VALUE -1
                           A 11160    
                           A 11161    .TYPE 12
                           A 11162    
                           A 11163    .ENDEF
                           A 11164    
                           A 11165    .DEFINE "next_move"
                           A 11166    
                           A 11167    .CLASS 65
                           A 11168    
                           A 11169    .VALUE -4
                           A 11170    
                           A 11171    .TYPE 14
                           A 11172    
                           A 11173    .ENDEF
                           A 11174    
                           A 11175    .DEFINE "keycount"
                           A 11176    
                           A 11177    .CLASS 65
                           A 11178    
                           A 11179    .VALUE -5
                           A 11180    
                           A 11181    .TYPE 12
                           A 11182    
                           A 11183    .ENDEF
                           A 11184    
                           A 11185    .DEFINE "millis_old"
                           A 11186    
                           A 11187    .CLASS 65
                           A 11188    
                           A 11189    .VALUE -8
                           A 11190    
                           A 11191    .TYPE 14
                           A 11192    
                           A 11193    .ENDEF
                           A 11194    
                           A 11195    .DEFINE "text"
                           A 11196    
                           A 11197    .CLASS 65
                           A 11198    
                           A 11199    .VALUE -136
                           A 11200    
                           A 11201    .DIM 128
                           A 11202    
                           A 11203    .TYPE 98
                           A 11204    
                           A 11205    .ENDEF
                           A 11206    
04349C DDE5                A 11207    	PUSH	IX
04349E DD210000 00         A 11208    	LD	IX,0
0434A3 DD39                A 11209    	ADD	IX,SP
0434A5 2178FFFF            A 11210    	LD	HL,-136
0434A9 39                  A 11211    	ADD	HL,SP
0434AA F9                  A 11212    	LD	SP,HL
                           A 11213    ;  964	
                           A 11214    ;  965	    int i = 0, j = 0;
                           A 11215    ;  966	    UINT24 t = 0;
                           A 11216    ;  967	    uint8_t key = 0, pressed = 0, keyco
                           A 11217    .LINE 967
                           A 11218    
0434AB DD36FF00            A 11219    	LD	(IX+%FFFFFFFF),%0
                           A 11220    ;  968	    FIL * fo;
                           A 11221    ;  969		uint8_t exit_num = 0;
                           A 11222    ;  970		uint24_t millis_old;
                           A 11223    ;  971		uint24_t millis_delta = 0;
                           A 11224    ;  972		uint24_t next_frame = 0;
                           A 11225    ;  973		uint24_t next_move = 0;
                           A 11226    .LINE 973
                           A 11227    
0434AF 01000000            A 11228    	LD	BC,0
0434B3 DD0FFC              A 11229    	LD	(IX+%FFFFFFFC),BC
                           A 11230    ;  974		char text[128];
                           A 11231    ;  975		bmp_info bmp;
                           A 11232    ;  976		
                           A 11233    ;  977		timer1_begin(4608, 4); //1ms timer;
                           A 11234    .LINE 977
                           A 11235    
0434B6 01040000            A 11236    	LD	BC,4
0434BA C5                  A 11237    	PUSH	BC
0434BB 01001200            A 11238    	LD	BC,4608
0434BF C5                  A 11239    	PUSH	BC
0434C0 CD 64 48 04         A 11240    	CALL	_timer1_begin
0434C4 C1                  A 11241    	POP	BC
0434C5 C1                  A 11242    	POP	BC
                           A 11243    ;  978		
                           A 11244    ;  979	    vdp_clearGraphics();
                           A 11245    .LINE 979
                           A 11246    
0434C6 CD 39 3A 04         A 11247    	CALL	_vdp_clearGraphics
                           A 11248    ;  980		vdp_cls();
                           A 11249    .LINE 980
                           A 11250    
0434CA CD 6D 39 04         A 11251    	CALL	_vdp_cls
                           A 11252    ;  981		
                           A 11253    ;  982		vdp_mode(2);
                           A 11254    .LINE 982
                           A 11255    
0434CE 01020000            A 11256    	LD	BC,2
0434D2 C5                  A 11257    	PUSH	BC
0434D3 CD C3 38 04         A 11258    	CALL	_vdp_mode
0434D7 C1                  A 11259    	POP	BC
                           A 11260    ;  983		game.screen_width = 320;
                           A 11261    .LINE 983
                           A 11262    
0434D8 3E40                A 11263    	LD	A,%40
0434DA 32 7D 5E 04         A 11264    	LD	(_game),A
0434DE 3E01                A 11265    	LD	A,%1
0434E0 32 7E 5E 04         A 11266    	LD	(_game+1),A
                           A 11267    ;  984		game.screen_height = 200;
                           A 11268    .LINE 984
                           A 11269    
0434E4 3EC8                A 11270    	LD	A,%C8
0434E6 32 7F 5E 04         A 11271    	LD	(_game+2),A
0434EA AF                  A 11272    	XOR	A,A
0434EB 32 80 5E 04         A 11273    	LD	(_game+3),A
                           A 11274    ;  985		
                           A 11275    ;  986		vdp_cursorDisable();
                           A 11276    .LINE 986
                           A 11277    
0434EF CD E4 42 04         A 11278    	CALL	_vdp_cursorDisable
                           A 11279    ;  987		load_font_frame();
                           A 11280    .LINE 987
                           A 11281    
0434F3 CD BA 0D 04         A 11282    	CALL	_load_font_frame
                           A 11283    ;  988	    setup_text_sprites();
                           A 11284    .LINE 988
                           A 11285    
0434F7 CD F9 19 04         A 11286    	CALL	_setup_text_sprites
                           A 11287    ;  989		
                           A 11288    ;  990		setup_snake(3, 10, 10, "snake_asset
                           A 11289    ;  991		"snake_assets/body_horizontal.bmp",
                           A 11290    ;  992		"snake_assets/body_bottomleft.bmp",
                           A 11291    ;  993		"snake_assets/tail_up.bmp","snake_a
                           A 11292    ;  994		"snake_assets/apple.bmp", "snake_as
                           A 11293    .LINE 994
                           A 11294    
0434FB 01 80 5C 04         A 11295    	LD	BC,L__273
0434FF C5                  A 11296    	PUSH	BC
043500 01 96 5C 04         A 11297    	LD	BC,L__274
043504 C5                  A 11298    	PUSH	BC
043505 01 AD 5C 04         A 11299    	LD	BC,L__275
043509 C5                  A 11300    	PUSH	BC
04350A 01 C8 5C 04         A 11301    	LD	BC,L__276
04350E C5                  A 11302    	PUSH	BC
04350F 01 E3 5C 04         A 11303    	LD	BC,L__277
043513 C5                  A 11304    	PUSH	BC
043514 01 FF 5C 04         A 11305    	LD	BC,L__278
043518 C5                  A 11306    	PUSH	BC
043519 01 18 5D 04         A 11307    	LD	BC,L__279
04351D C5                  A 11308    	PUSH	BC
04351E 01 3A 5D 04         A 11309    	LD	BC,L__280
043522 C5                  A 11310    	PUSH	BC
043523 01 59 5D 04         A 11311    	LD	BC,L__281
043527 C5                  A 11312    	PUSH	BC
043528 01 77 5D 04         A 11313    	LD	BC,L__282
04352C C5                  A 11314    	PUSH	BC
04352D 01 98 5D 04         A 11315    	LD	BC,L__283
043531 C5                  A 11316    	PUSH	BC
043532 01 B7 5D 04         A 11317    	LD	BC,L__284
043536 C5                  A 11318    	PUSH	BC
043537 01 D8 5D 04         A 11319    	LD	BC,L__285
04353B C5                  A 11320    	PUSH	BC
04353C 01 F3 5D 04         A 11321    	LD	BC,L__286
043540 C5                  A 11322    	PUSH	BC
043541 01 0E 5E 04         A 11323    	LD	BC,L__287
043545 C5                  A 11324    	PUSH	BC
043546 01 2A 5E 04         A 11325    	LD	BC,L__288
04354A C5                  A 11326    	PUSH	BC
04354B 010A0000            A 11327    	LD	BC,10
04354F C5                  A 11328    	PUSH	BC
043550 C5                  A 11329    	PUSH	BC
043551 01030000            A 11330    	LD	BC,3
043555 C5                  A 11331    	PUSH	BC
043556 CD B7 2E 04         A 11332    	CALL	_setup_snake
04355A FD213900 00         A 11333    	LD	IY,57
04355F FD39                A 11334    	ADD	IY,SP
043561 FDF9                A 11335    	LD	SP,IY
                           A 11336    ;  995		
                           A 11337    ;  996		vdp_cls();
                           A 11338    .LINE 996
                           A 11339    
043563 CD 6D 39 04         A 11340    	CALL	_vdp_cls
                           A 11341    ;  997		
                           A 11342    ;  998		//draw_bottom_frame();
                           A 11343    ;  999		draw_background();
                           A 11344    .LINE 999
                           A 11345    
043567 CD E2 33 04         A 11346    	CALL	_draw_background
                           A 11347    ; 1000		//draw_top_frame();
                           A 11348    ; 1001	    vdp_spriteMoveTo(SPRITE_SCORE0, 16,
                           A 11349    .LINE 1001
                           A 11350    
04356B FD2A 7F 5E 04       A 11351    	LD	IY,(_game+2)
043570 ED03F5              A 11352    	LEA	BC,IY+%FFFFFFF5
043573 C5                  A 11353    	PUSH	BC
043574 01100000            A 11354    	LD	BC,16
043578 C5                  A 11355    	PUSH	BC
043579 01000000            A 11356    	LD	BC,0
04357D C5                  A 11357    	PUSH	BC
04357E CD B4 40 04         A 11358    	CALL	_vdp_spriteMoveTo
043582 C1                  A 11359    	POP	BC
043583 C1                  A 11360    	POP	BC
043584 C1                  A 11361    	POP	BC
                           A 11362    ; 1002	    vdp_spriteShowSelected();
                           A 11363    .LINE 1002
                           A 11364    
043585 CD E4 3F 04         A 11365    	CALL	_vdp_spriteShowSelected
                           A 11366    ; 1003	    vdp_spriteMoveTo(SPRITE_SCORE1, 24,
                           A 11367    .LINE 1003
                           A 11368    
043589 FD2A 7F 5E 04       A 11369    	LD	IY,(_game+2)
04358E ED03F5              A 11370    	LEA	BC,IY+%FFFFFFF5
043591 C5                  A 11371    	PUSH	BC
043592 01180000            A 11372    	LD	BC,24
043596 C5                  A 11373    	PUSH	BC
043597 01010000            A 11374    	LD	BC,1
04359B C5                  A 11375    	PUSH	BC
04359C CD B4 40 04         A 11376    	CALL	_vdp_spriteMoveTo
0435A0 C1                  A 11377    	POP	BC
0435A1 C1                  A 11378    	POP	BC
0435A2 C1                  A 11379    	POP	BC
                           A 11380    ; 1004	    vdp_spriteShowSelected();
                           A 11381    .LINE 1004
                           A 11382    
0435A3 CD E4 3F 04         A 11383    	CALL	_vdp_spriteShowSelected
                           A 11384    ; 1005		vdp_spriteMoveTo(SPRITE_SCORE2, 32,
                           A 11385    .LINE 1005
                           A 11386    
0435A7 FD2A 7F 5E 04       A 11387    	LD	IY,(_game+2)
0435AC ED03F5              A 11388    	LEA	BC,IY+%FFFFFFF5
0435AF C5                  A 11389    	PUSH	BC
0435B0 01200000            A 11390    	LD	BC,32
0435B4 C5                  A 11391    	PUSH	BC
0435B5 01020000            A 11392    	LD	BC,2
0435B9 C5                  A 11393    	PUSH	BC
0435BA CD B4 40 04         A 11394    	CALL	_vdp_spriteMoveTo
0435BE C1                  A 11395    	POP	BC
0435BF C1                  A 11396    	POP	BC
0435C0 C1                  A 11397    	POP	BC
                           A 11398    ; 1006	    vdp_spriteShowSelected();
                           A 11399    .LINE 1006
                           A 11400    
0435C1 CD E4 3F 04         A 11401    	CALL	_vdp_spriteShowSelected
                           A 11402    ; 1007	    vdp_spriteSetFrame(SPRITE_SCORE0, g
                           A 11403    .LINE 1007
                           A 11404    
0435C5 3A 89 5E 04         A 11405    	LD	A,(_game+12)
0435C9 B7ED62              A 11406    	UEXT	HL
0435CC 6F                  A 11407    	LD	L,A
0435CD 01640000            A 11408    	LD	BC,100
0435D1 CD 2B 50 04         A 11409    	CALL	__idivs
0435D5 4D                  A 11410    	LD	C,L
0435D6 0600                A 11411    	LD	B,%0
0435D8 C5                  A 11412    	PUSH	BC
0435D9 01000000            A 11413    	LD	BC,0
0435DD C5                  A 11414    	PUSH	BC
0435DE CD C0 3F 04         A 11415    	CALL	_vdp_spriteSetFrame
0435E2 C1                  A 11416    	POP	BC
0435E3 C1                  A 11417    	POP	BC
                           A 11418    ; 1008	    vdp_spriteSetFrame(SPRITE_SCORE1, (
                           A 11419    .LINE 1008
                           A 11420    
0435E4 3A 89 5E 04         A 11421    	LD	A,(_game+12)
0435E8 B7ED62              A 11422    	UEXT	HL
0435EB 6F                  A 11423    	LD	L,A
0435EC 01640000            A 11424    	LD	BC,100
0435F0 CD B9 4B 04         A 11425    	CALL	__irems
0435F4 010A0000            A 11426    	LD	BC,10
0435F8 CD 2B 50 04         A 11427    	CALL	__idivs
0435FC 4D                  A 11428    	LD	C,L
0435FD 0600                A 11429    	LD	B,%0
0435FF C5                  A 11430    	PUSH	BC
043600 01010000            A 11431    	LD	BC,1
043604 C5                  A 11432    	PUSH	BC
043605 CD C0 3F 04         A 11433    	CALL	_vdp_spriteSetFrame
043609 C1                  A 11434    	POP	BC
04360A C1                  A 11435    	POP	BC
                           A 11436    ; 1009		vdp_spriteSetFrame(SPRITE_SCORE2, g
                           A 11437    .LINE 1009
                           A 11438    
04360B 3A 89 5E 04         A 11439    	LD	A,(_game+12)
04360F B7ED62              A 11440    	UEXT	HL
043612 6F                  A 11441    	LD	L,A
043613 010A0000            A 11442    	LD	BC,10
043617 CD B9 4B 04         A 11443    	CALL	__irems
04361B 4D                  A 11444    	LD	C,L
04361C 0600                A 11445    	LD	B,%0
04361E C5                  A 11446    	PUSH	BC
04361F 01020000            A 11447    	LD	BC,2
043623 C5                  A 11448    	PUSH	BC
043624 CD C0 3F 04         A 11449    	CALL	_vdp_spriteSetFrame
043628 C1                  A 11450    	POP	BC
043629 C1                  A 11451    	POP	BC
                           A 11452    ; 1010	
                           A 11453    ; 1011	    keycount = getsysvar_vkeycount(); /
                           A 11454    .LINE 1011
                           A 11455    
04362A CD AC 44 04         A 11456    	CALL	_getsysvar_vkeycount
04362E DD77FB              A 11457    	LD	(IX+%FFFFFFFB),A
                           A 11458    ; 1012		millis_old = timer1;
                           A 11459    .LINE 1012
                           A 11460    
043631 ED4B 3F 56 04       A 11461    	LD	BC,(_timer1)
043636 DD0FF8              A 11462    	LD	(IX+%FFFFFFF8),BC
                           A 11463    ; 1013		
                           A 11464    ; 1014		
                           A 11465    ; 1015		game.game_over = false;
                           A 11466    .LINE 1015
                           A 11467    
043639 AF                  A 11468    	XOR	A,A
04363A 32 3E 63 04         A 11469    	LD	(_game+1217),A
                           A 11470    ; 1016		game.score = 0;
                           A 11471    .LINE 1016
                           A 11472    
04363E AF                  A 11473    	XOR	A,A
04363F 32 89 5E 04         A 11474    	LD	(_game+12),A
                           A 11475    ; 1017		game.tick = 200;
                           A 11476    .LINE 1017
                           A 11477    
043643 3EC8                A 11478    	LD	A,%C8
043645 32 47 63 04         A 11479    	LD	(_game+1226),A
                           A 11480    ; 1018	    
                           A 11481    ; 1019		while (true) {
043649                     A 11482    L_338:
                           A 11483    .LINE 1019
                           A 11484    
                           A 11485    ; 1020			
                           A 11486    ; 1021			//printf("%u\r",timer1);
                           A 11487    ; 1022			
                           A 11488    ; 1023			if (game.game_over == true) bre
                           A 11489    .LINE 1023
                           A 11490    
043649 3A 3E 63 04         A 11491    	LD	A,(_game+1217)
04364D FE01                A 11492    	CP	A,%1
04364F CA 73 37 04         A 11493    	JR	Z,L_339
                           A 11494    ; 1024			
                           A 11495    ; 1025			if (timer1 > next_move) {
                           A 11496    .LINE 1025
                           A 11497    
043653 ED4B 3F 56 04       A 11498    	LD	BC,(_timer1)
043658 DD27FC              A 11499    	LD	HL,(IX+%FFFFFFFC)
04365B B7                  A 11500    	OR	A,A
04365C ED42                A 11501    	SBC	HL,BC
04365E 30 15               A 11502    	JR	NC,L_336
                           A 11503    ; 1026				move_snake();
                           A 11504    .LINE 1026
                           A 11505    
043660 CD C8 1F 04         A 11506    	CALL	_move_snake
                           A 11507    ; 1027				next_move = timer1 + game.t
                           A 11508    .LINE 1027
                           A 11509    
043664 3A 47 63 04         A 11510    	LD	A,(_game+1226)
043668 B7ED62              A 11511    	UEXT	HL
04366B 6F                  A 11512    	LD	L,A
04366C ED4B 3F 56 04       A 11513    	LD	BC,(_timer1)
043671 09                  A 11514    	ADD	HL,BC
043672 DD2FFC              A 11515    	LD	(IX+%FFFFFFFC),HL
                           A 11516    ; 1028			}
043675                     A 11517    L_336:
                           A 11518    .LINE 1028
                           A 11519    
                           A 11520    ; 1029			
                           A 11521    ; 1030			
                           A 11522    ; 1031			if (getsysvar_vkeycount() != ke
                           A 11523    .LINE 1031
                           A 11524    
043675 CD AC 44 04         A 11525    	CALL	_getsysvar_vkeycount
043679 47                  A 11526    	LD	B,A
04367A DD7EFB              A 11527    	LD	A,(IX+%FFFFFFFB)
04367D B8                  A 11528    	CP	A,B
04367E 28 C9               A 11529    	JR	Z,L_338
                           A 11530    ; 1032	
                           A 11531    ; 1033				key = getsysvar_keyascii();
                           A 11532    .LINE 1033
                           A 11533    
043680 CD DE 43 04         A 11534    	CALL	_getsysvar_keyascii
043684 DD77FF              A 11535    	LD	(IX+%FFFFFFFF),A
                           A 11536    ; 1034				//pressed = getsysvar_vkeyd
                           A 11537    ; 1035				//printf("Key %u\r\n", key)
                           A 11538    ; 1036				
                           A 11539    ; 1037				if (key == 'w' || key == 11
                           A 11540    .LINE 1037
                           A 11541    
043687 FE77                A 11542    	CP	A,%77
043689 28 07               A 11543    	JR	Z,L_332
04368B DD7EFF              A 11544    	LD	A,(IX+%FFFFFFFF)
04368E FE0B                A 11545    	CP	A,%B
043690 20 2E               A 11546    	JR	NZ,L_333
043692                     A 11547    L_332:
                           A 11548    ; 1038					if (game.vel_y != 1) { 
                           A 11549    .LINE 1038
                           A 11550    
043692 3A 3D 63 04         A 11551    	LD	A,(_game+1216)
043696 FE01                A 11552    	CP	A,%1
043698 CA 68 37 04         A 11553    	JR	Z,L_334
                           A 11554    ; 1039						game.vel_y = -1;
                           A 11555    .LINE 1039
                           A 11556    
04369C 3EFF                A 11557    	LD	A,%FF
04369E 32 3D 63 04         A 11558    	LD	(_game+1216),A
                           A 11559    ; 1040						game.vel_x = 0;
                           A 11560    .LINE 1040
                           A 11561    
0436A2 AF                  A 11562    	XOR	A,A
0436A3 32 3C 63 04         A 11563    	LD	(_game+1215),A
                           A 11564    ; 1041						move_snake();
                           A 11565    .LINE 1041
                           A 11566    
0436A7 CD C8 1F 04         A 11567    	CALL	_move_snake
                           A 11568    ; 1042						next_move = timer1 
                           A 11569    .LINE 1042
                           A 11570    
0436AB 3A 47 63 04         A 11571    	LD	A,(_game+1226)
0436AF B7ED62              A 11572    	UEXT	HL
0436B2 6F                  A 11573    	LD	L,A
0436B3 ED4B 3F 56 04       A 11574    	LD	BC,(_timer1)
0436B8 09                  A 11575    	ADD	HL,BC
0436B9 DD2FFC              A 11576    	LD	(IX+%FFFFFFFC),HL
                           A 11577    ; 1043					}
                           A 11578    ; 1044				}
                           A 11579    ; 1045				else if	(key == 's' || key 
                           A 11580    .LINE 1045
                           A 11581    
0436BC C3 68 37 04         A 11582    	JR	L_334
0436C0                     A 11583    L_333:
0436C0 DD7EFF              A 11584    	LD	A,(IX+%FFFFFFFF)
0436C3 FE73                A 11585    	CP	A,%73
0436C5 28 07               A 11586    	JR	Z,L_330
0436C7 DD7EFF              A 11587    	LD	A,(IX+%FFFFFFFF)
0436CA FE0A                A 11588    	CP	A,%A
0436CC 20 2C               A 11589    	JR	NZ,L_331
0436CE                     A 11590    L_330:
                           A 11591    ; 1046					if (game.vel_y != -1) {
                           A 11592    .LINE 1046
                           A 11593    
0436CE 3A 3D 63 04         A 11594    	LD	A,(_game+1216)
0436D2 FEFF                A 11595    	CP	A,%FFFFFFFF
0436D4 CA 68 37 04         A 11596    	JR	Z,L_334
                           A 11597    ; 1047						game.vel_y = 1;
                           A 11598    .LINE 1047
                           A 11599    
0436D8 3E01                A 11600    	LD	A,%1
0436DA 32 3D 63 04         A 11601    	LD	(_game+1216),A
                           A 11602    ; 1048						game.vel_x = 0;
                           A 11603    .LINE 1048
                           A 11604    
0436DE AF                  A 11605    	XOR	A,A
0436DF 32 3C 63 04         A 11606    	LD	(_game+1215),A
                           A 11607    ; 1049						move_snake();
                           A 11608    .LINE 1049
                           A 11609    
0436E3 CD C8 1F 04         A 11610    	CALL	_move_snake
                           A 11611    ; 1050						next_move = timer1 
                           A 11612    .LINE 1050
                           A 11613    
0436E7 3A 47 63 04         A 11614    	LD	A,(_game+1226)
0436EB B7ED62              A 11615    	UEXT	HL
0436EE 6F                  A 11616    	LD	L,A
0436EF ED4B 3F 56 04       A 11617    	LD	BC,(_timer1)
0436F4 09                  A 11618    	ADD	HL,BC
0436F5 DD2FFC              A 11619    	LD	(IX+%FFFFFFFC),HL
                           A 11620    ; 1051					}
                           A 11621    ; 1052				}
                           A 11622    ; 1053				else if	(key == 'a' || key 
                           A 11623    .LINE 1053
                           A 11624    
0436F8 18 6E               A 11625    	JR	L_334
0436FA                     A 11626    L_331:
0436FA DD7EFF              A 11627    	LD	A,(IX+%FFFFFFFF)
0436FD FE61                A 11628    	CP	A,%61
0436FF 28 07               A 11629    	JR	Z,L_328
043701 DD7EFF              A 11630    	LD	A,(IX+%FFFFFFFF)
043704 FE08                A 11631    	CP	A,%8
043706 20 2A               A 11632    	JR	NZ,L_329
043708                     A 11633    L_328:
                           A 11634    ; 1054					if (game.vel_x != 1) { 
                           A 11635    .LINE 1054
                           A 11636    
043708 3A 3C 63 04         A 11637    	LD	A,(_game+1215)
04370C FE01                A 11638    	CP	A,%1
04370E 28 58               A 11639    	JR	Z,L_334
                           A 11640    ; 1055						game.vel_x = -1;
                           A 11641    .LINE 1055
                           A 11642    
043710 3EFF                A 11643    	LD	A,%FF
043712 32 3C 63 04         A 11644    	LD	(_game+1215),A
                           A 11645    ; 1056						game.vel_y = 0;
                           A 11646    .LINE 1056
                           A 11647    
043716 AF                  A 11648    	XOR	A,A
043717 32 3D 63 04         A 11649    	LD	(_game+1216),A
                           A 11650    ; 1057						move_snake();
                           A 11651    .LINE 1057
                           A 11652    
04371B CD C8 1F 04         A 11653    	CALL	_move_snake
                           A 11654    ; 1058						next_move = timer1 
                           A 11655    .LINE 1058
                           A 11656    
04371F 3A 47 63 04         A 11657    	LD	A,(_game+1226)
043723 B7ED62              A 11658    	UEXT	HL
043726 6F                  A 11659    	LD	L,A
043727 ED4B 3F 56 04       A 11660    	LD	BC,(_timer1)
04372C 09                  A 11661    	ADD	HL,BC
04372D DD2FFC              A 11662    	LD	(IX+%FFFFFFFC),HL
                           A 11663    ; 1059					}
                           A 11664    ; 1060				}
                           A 11665    ; 1061				else if	(key == 'd' || key 
                           A 11666    .LINE 1061
                           A 11667    
043730 18 36               A 11668    	JR	L_334
043732                     A 11669    L_329:
043732 DD7EFF              A 11670    	LD	A,(IX+%FFFFFFFF)
043735 FE64                A 11671    	CP	A,%64
043737 28 07               A 11672    	JR	Z,L_327
043739 DD7EFF              A 11673    	LD	A,(IX+%FFFFFFFF)
04373C FE15                A 11674    	CP	A,%15
04373E 20 28               A 11675    	JR	NZ,L_334
043740                     A 11676    L_327:
                           A 11677    ; 1062					if (game.vel_x != -1) {
                           A 11678    .LINE 1062
                           A 11679    
043740 3A 3C 63 04         A 11680    	LD	A,(_game+1215)
043744 FEFF                A 11681    	CP	A,%FFFFFFFF
043746 28 20               A 11682    	JR	Z,L_334
                           A 11683    ; 1063						game.vel_x = 1;
                           A 11684    .LINE 1063
                           A 11685    
043748 3E01                A 11686    	LD	A,%1
04374A 32 3C 63 04         A 11687    	LD	(_game+1215),A
                           A 11688    ; 1064						game.vel_y = 0;
                           A 11689    .LINE 1064
                           A 11690    
04374E AF                  A 11691    	XOR	A,A
04374F 32 3D 63 04         A 11692    	LD	(_game+1216),A
                           A 11693    ; 1065						move_snake();
                           A 11694    .LINE 1065
                           A 11695    
043753 CD C8 1F 04         A 11696    	CALL	_move_snake
                           A 11697    ; 1066						next_move = timer1 
                           A 11698    .LINE 1066
                           A 11699    
043757 3A 47 63 04         A 11700    	LD	A,(_game+1226)
04375B B7ED62              A 11701    	UEXT	HL
04375E 6F                  A 11702    	LD	L,A
04375F ED4B 3F 56 04       A 11703    	LD	BC,(_timer1)
043764 09                  A 11704    	ADD	HL,BC
043765 DD2FFC              A 11705    	LD	(IX+%FFFFFFFC),HL
                           A 11706    ; 1067					}
                           A 11707    ; 1068				}
043768                     A 11708    L_334:
                           A 11709    .LINE 1068
                           A 11710    
                           A 11711    ; 1069				
                           A 11712    ; 1070				keycount = getsysvar_vkeyco
                           A 11713    .LINE 1070
                           A 11714    
043768 CD AC 44 04         A 11715    	CALL	_getsysvar_vkeycount
04376C DD77FB              A 11716    	LD	(IX+%FFFFFFFB),A
                           A 11717    ; 1071				
                           A 11718    ; 1072			}
                           A 11719    ; 1073			
                           A 11720    ; 1074		}
                           A 11721    .LINE 1074
                           A 11722    
04376F C3 49 36 04         A 11723    	JR	L_338
043773                     A 11724    L_339:
                           A 11725    ; 1075		
                           A 11726    ; 1076		vdp_cls();
                           A 11727    .LINE 1076
                           A 11728    
043773 CD 6D 39 04         A 11729    	CALL	_vdp_cls
                           A 11730    ; 1077		if (game.score != 100) sprintf(text
                           A 11731    .LINE 1077
                           A 11732    
043777 3A 89 5E 04         A 11733    	LD	A,(_game+12)
04377B FE64                A 11734    	CP	A,%64
04377D 28 56               A 11735    	JR	Z,L_342
04377F DDE5E1              A 11736    	LD	HL,IX
043782 0178FFFF            A 11737    	LD	BC,-136
043786 09                  A 11738    	ADD	HL,BC
043787 22 77 63 04         A 11739    	LD	(___print_out),HL
04378B 01 2E 4E 04         A 11740    	LD	BC,___print_sputch
04378F ED43 42 56 04       A 11741    	LD	(___print_xputch),BC
043794 01 43 5E 04         A 11742    	LD	BC,L__305
043798 C5                  A 11743    	PUSH	BC
043799 CD 06 4C 04         A 11744    	CALL	___print_sendstring
04379D C1                  A 11745    	POP	BC
04379E 3E75                A 11746    	LD	A,%75
0437A0 32 66 63 04         A 11747    	LD	(___print_fmt+4),A
0437A4 3A 89 5E 04         A 11748    	LD	A,(_game+12)
0437A8 B7ED62              A 11749    	UEXT	HL
0437AB 6F                  A 11750    	LD	L,A
0437AC E5C1                A 11751    	LD	BC,HL
0437AE CD 64 50 04         A 11752    	CALL	__itol
0437B2 C5D1                A 11753    	LD	DE,BC
0437B4 4F                  A 11754    	LD	C,A
0437B5 0600                A 11755    	LD	B,%0
0437B7 C5                  A 11756    	PUSH	BC
0437B8 D5                  A 11757    	PUSH	DE
0437B9 CD 59 4E 04         A 11758    	CALL	__u_uitoa
0437BD C1                  A 11759    	POP	BC
0437BE C1                  A 11760    	POP	BC
0437BF 01 5A 5E 04         A 11761    	LD	BC,L__306
0437C3 C5                  A 11762    	PUSH	BC
0437C4 CD 06 4C 04         A 11763    	CALL	___print_sendstring
0437C8 C1                  A 11764    	POP	BC
0437C9 01000000            A 11765    	LD	BC,0
0437CD C5                  A 11766    	PUSH	BC
0437CE CD 2E 4E 04         A 11767    	CALL	___print_sputch
0437D2 C1                  A 11768    	POP	BC
                           A 11769    ; 1078		else if (game.score == 100) sprintf
                           A 11770    .LINE 1078
                           A 11771    
0437D3 18 31               A 11772    	JR	L_343
0437D5                     A 11773    L_342:
0437D5 3A 89 5E 04         A 11774    	LD	A,(_game+12)
0437D9 FE64                A 11775    	CP	A,%64
0437DB 20 29               A 11776    	JR	NZ,L_343
0437DD DDE5E1              A 11777    	LD	HL,IX
0437E0 0178FFFF            A 11778    	LD	BC,-136
0437E4 09                  A 11779    	ADD	HL,BC
0437E5 22 77 63 04         A 11780    	LD	(___print_out),HL
0437E9 01 2E 4E 04         A 11781    	LD	BC,___print_sputch
0437ED ED43 42 56 04       A 11782    	LD	(___print_xputch),BC
0437F2 01 63 5E 04         A 11783    	LD	BC,L__308
0437F6 C5                  A 11784    	PUSH	BC
0437F7 CD 06 4C 04         A 11785    	CALL	___print_sendstring
0437FB C1                  A 11786    	POP	BC
0437FC 01000000            A 11787    	LD	BC,0
043800 C5                  A 11788    	PUSH	BC
043801 CD 2E 4E 04         A 11789    	CALL	___print_sputch
043805 C1                  A 11790    	POP	BC
043806                     A 11791    L_343:
                           A 11792    ; 1079		raw_text_multi_centre(text, 100);
                           A 11793    .LINE 1079
                           A 11794    
043806 01640000            A 11795    	LD	BC,100
04380A C5                  A 11796    	PUSH	BC
04380B DDE5E1              A 11797    	LD	HL,IX
04380E 0178FFFF            A 11798    	LD	BC,-136
043812 09                  A 11799    	ADD	HL,BC
043813 E5C1                A 11800    	LD	BC,HL
043815 C5                  A 11801    	PUSH	BC
043816 CD E3 14 04         A 11802    	CALL	_raw_text_multi_centre
04381A C1                  A 11803    	POP	BC
04381B C1                  A 11804    	POP	BC
                           A 11805    ; 1080	
                           A 11806    ; 1081	    return 0;
                           A 11807    .LINE 1081
                           A 11808    
04381C B7                  A 11809    	OR	A,A
04381D ED62                A 11810    	SBC	HL,HL
                           A 11811    .LINE 1082
                           A 11812    
04381F DDF9                A 11813    	LD	SP,IX
043821 DDE1                A 11814    	POP	IX
043823 C9                  A 11815    	RET	
                           A 11816    
                           A 11817    
                           A 11818    ;**************************** _main ***********
                           A 11819    ;Name                         Addr/Register   S
                           A 11820    ;__u_uitoa                           IMPORT  --
                           A 11821    ;___print_fmt                        IMPORT    
                           A 11822    ;___print_sendstring                 IMPORT  --
                           A 11823    ;___print_xputch                     IMPORT    
                           A 11824    ;___print_sputch                     IMPORT  --
                           A 11825    ;___print_out                        IMPORT    
                           A 11826    ;_getsysvar_keyascii                 IMPORT  --
                           A 11827    ;_move_snake                         IMPORT  --
                           A 11828    ;_timer1                             IMPORT    
                           A 11829    ;_getsysvar_vkeycount                IMPORT  --
                           A 11830    ;_vdp_spriteSetFrame                 IMPORT  --
                           A 11831    ;_vdp_spriteShowSelected             IMPORT  --
                           A 11832    ;_vdp_spriteMoveTo                   IMPORT  --
                           A 11833    ;_setup_snake                        IMPORT  --
                           A 11834    ;_vdp_cursorDisable                  IMPORT  --
                           A 11835    ;_game                               STATIC   1
                           A 11836    ;_vdp_mode                           IMPORT  --
                           A 11837    ;_vdp_cls                            IMPORT  --
                           A 11838    ;_vdp_clearGraphics                  IMPORT  --
                           A 11839    ;_timer1_begin                       IMPORT  --
                           A 11840    ;text                                IX-136    
                           A 11841    ;millis_old                            IX-8    
                           A 11842    ;keycount                              IX-5    
                           A 11843    ;next_move                             IX-4    
                           A 11844    ;key                                   IX-1    
                           A 11845    ;argv                                  IX+9    
                           A 11846    ;argc                                  IX+6    
                           A 11847    
                           A 11848    
                           A 11849    ; Stack Frame Size: 148 (bytes)
                           A 11850    ;       Spill Code: -4 (instruction)
                           A 11851    
                           A 11852    
                           A 11853    .ENDFUNC "main",1082,"_main"
                           A 11854    	SEGMENT STRSECT
045C80                     A 11855    L__273:
045C80 736E616B 655F6173   A 11856    	DB	"snake_assets/tile.bmp"
045C88 73657473 2F74696C 
045C90 652E626D 70 
045C95 00                  A 11857    	DB	0
045C96                     A 11858    L__274:
045C96 736E616B 655F6173   A 11859    	DB	"snake_assets/apple.bmp"
045C9E 73657473 2F617070 
045CA6 6C652E62 6D70 
045CAC 00                  A 11860    	DB	0
045CAD                     A 11861    L__275:
045CAD 736E616B 655F6173   A 11862    	DB	"snake_assets/tail_left.bmp"
045CB5 73657473 2F746169 
045CBD 6C5F6C65 66742E62 
045CC5 6D70 
045CC7 00                  A 11863    	DB	0
045CC8                     A 11864    L__276:
045CC8 736E616B 655F6173   A 11865    	DB	"snake_assets/tail_down.bmp"
045CD0 73657473 2F746169 
045CD8 6C5F646F 776E2E62 
045CE0 6D70 
045CE2 00                  A 11866    	DB	0
045CE3                     A 11867    L__277:
045CE3 736E616B 655F6173   A 11868    	DB	"snake_assets/tail_right.bmp"
045CEB 73657473 2F746169 
045CF3 6C5F7269 6768742E 
045CFB 626D70 
045CFE 00                  A 11869    	DB	0
045CFF                     A 11870    L__278:
045CFF 736E616B 655F6173   A 11871    	DB	"snake_assets/tail_up.bmp"
045D07 73657473 2F746169 
045D0F 6C5F7570 2E626D70 
045D17 00                  A 11872    	DB	0
045D18                     A 11873    L__279:
045D18 736E616B 655F6173   A 11874    	DB	"snake_assets/body_bottomright.bmp"
045D20 73657473 2F626F64 
045D28 795F626F 74746F6D 
045D30 72696768 742E626D 
045D38 70 
045D39 00                  A 11875    	DB	0
045D3A                     A 11876    L__280:
045D3A 736E616B 655F6173   A 11877    	DB	"snake_assets/body_topright.bmp"
045D42 73657473 2F626F64 
045D4A 795F746F 70726967 
045D52 68742E62 6D70 
045D58 00                  A 11878    	DB	0
045D59                     A 11879    L__281:
045D59 736E616B 655F6173   A 11880    	DB	"snake_assets/body_topleft.bmp"
045D61 73657473 2F626F64 
045D69 795F746F 706C6566 
045D71 742E626D 70 
045D76 00                  A 11881    	DB	0
045D77                     A 11882    L__282:
045D77 736E616B 655F6173   A 11883    	DB	"snake_assets/body_bottomleft.bmp"
045D7F 73657473 2F626F64 
045D87 795F626F 74746F6D 
045D8F 6C656674 2E626D70 
045D97 00                  A 11884    	DB	0
045D98                     A 11885    L__283:
045D98 736E616B 655F6173   A 11886    	DB	"snake_assets/body_vertical.bmp"
045DA0 73657473 2F626F64 
045DA8 795F7665 72746963 
045DB0 616C2E62 6D70 
045DB6 00                  A 11887    	DB	0
045DB7                     A 11888    L__284:
045DB7 736E616B 655F6173   A 11889    	DB	"snake_assets/body_horizontal.bmp"
045DBF 73657473 2F626F64 
045DC7 795F686F 72697A6F 
045DCF 6E74616C 2E626D70 
045DD7 00                  A 11890    	DB	0
045DD8                     A 11891    L__285:
045DD8 736E616B 655F6173   A 11892    	DB	"snake_assets/head_left.bmp"
045DE0 73657473 2F686561 
045DE8 645F6C65 66742E62 
045DF0 6D70 
045DF2 00                  A 11893    	DB	0
045DF3                     A 11894    L__286:
045DF3 736E616B 655F6173   A 11895    	DB	"snake_assets/head_down.bmp"
045DFB 73657473 2F686561 
045E03 645F646F 776E2E62 
045E0B 6D70 
045E0D 00                  A 11896    	DB	0
045E0E                     A 11897    L__287:
045E0E 736E616B 655F6173   A 11898    	DB	"snake_assets/head_right.bmp"
045E16 73657473 2F686561 
045E1E 645F7269 6768742E 
045E26 626D70 
045E29 00                  A 11899    	DB	0
045E2A                     A 11900    L__288:
045E2A 736E616B 655F6173   A 11901    	DB	"snake_assets/head_up.bmp"
045E32 73657473 2F686561 
045E3A 645F7570 2E626D70 
045E42 00                  A 11902    	DB	0
045E43                     A 11903    L__305:
045E43 47616D65 206F7665   A 11904    	DB	"Game over!"
045E4B 7221 
045E4D 0A                  A 11905    	DB	10
045E4E 596F7520 73636F72   A 11906    	DB	"You scored "
045E56 656420 
045E59 00                  A 11907    	DB	0
045E5A                     A 11908    L__306:
045E5A 20706F69 6E74732E   A 11909    	DB	" points."
045E62 00                  A 11910    	DB	0
045E63                     A 11911    L__308:
045E63 436F6E67 72617475   A 11912    	DB	"Congratulations, you won!"
045E6B 6C617469 6F6E732C 
045E73 20796F75 20776F6E 
045E7B 21 
045E7C 00                  A 11913    	DB	0
                           A 11914    	XREF _write16bit:ROM
                           A 11915    	XREF _vdp_spriteRefresh:ROM
                           A 11916    	XREF _vdp_spriteActivateTotal:ROM
                           A 11917    	XREF _vdp_spriteMoveTo:ROM
                           A 11918    	XREF _vdp_spriteHideSelected:ROM
                           A 11919    	XREF _vdp_spriteShow:ROM
                           A 11920    	XREF _vdp_spriteShowSelected:ROM
                           A 11921    	XREF _vdp_spriteSetFrame:ROM
                           A 11922    	XREF _vdp_spriteSetFrameSelected:ROM
                           A 11923    	XREF _vdp_spriteAddFrame:ROM
                           A 11924    	XREF _vdp_spriteAddFrameSelected:ROM
                           A 11925    	XREF _vdp_spriteClearFrames:ROM
                           A 11926    	XREF _vdp_bitmapDraw:ROM
                           A 11927    	XREF _vdp_bitmapSelect:ROM
                           A 11928    	XREF _vdp_clearGraphics:ROM
                           A 11929    	XREF _vdp_cursorDisable:ROM
                           A 11930    	XREF _vdp_cls:ROM
                           A 11931    	XREF _vdp_mode:ROM
                           A 11932    	XREF _mos_getfil:ROM
                           A 11933    	XREF _mos_flseek:ROM
                           A 11934    	XREF _mos_fread:ROM
                           A 11935    	XREF _mos_fgetc:ROM
                           A 11936    	XREF _mos_fclose:ROM
                           A 11937    	XREF _mos_fopen:ROM
                           A 11938    	XREF _getsysvar_vkeycount:ROM
                           A 11939    	XREF _getsysvar_keyascii:ROM
                           A 11940    	XREF _mos_puts:ROM
                           A 11941    	XREF _waitvblank:ROM
                           A 11942    	XREF _putch:ROM
                           A 11943    	XREF _timer1_begin:ROM
                           A 11944    	XREF _timer1:ROM
                           A 11945    	XREF _strlen:ROM
                           A 11946    	XREF _memcpy:ROM
                           A 11947    	XREF _toupper:ROM
                           A 11948    	XREF _isdigit:ROM
                           A 11949    	XREF _malloc:ROM
                           A 11950    	XREF _free:ROM
                           A 11951    	XREF __u_uitoa:ROM
                           A 11952    	XREF ___print_sendstring:ROM
                           A 11953    	XREF ___print_xputch:ROM
                           A 11954    	XREF ___print_sputch:ROM
                           A 11955    	XREF ___print_uputch:ROM
                           A 11956    	XREF ___print_out:ROM
                           A 11957    	XREF ___print_fmt:ROM
                           A 11958    	XREF __lcmps:ROM
                           A 11959    	XREF __lcmpu:ROM
                           A 11960    	XREF __ladd:ROM
                           A 11961    	XREF __lsub:ROM
                           A 11962    	XREF __idivs:ROM
                           A 11963    	XREF __ldivs:ROM
                           A 11964    	XREF __imuls:ROM
                           A 11965    	XREF __lmuls:ROM
                           A 11966    	XREF __imulu:ROM
                           A 11967    	XREF __sor:ROM
                           A 11968    	XREF __ior:ROM
                           A 11969    	XREF __sand:ROM
                           A 11970    	XREF __smulu:ROM
                           A 11971    	XREF __land:ROM
                           A 11972    	XREF __bshl:ROM
                           A 11973    	XREF __sshl:ROM
                           A 11974    	XREF __lshl:ROM
                           A 11975    	XREF __irems:ROM
                           A 11976    	XREF __iremu:ROM
                           A 11977    	XREF __lrems:ROM
                           A 11978    	XREF __ixor:ROM
                           A 11979    	XREF __ishl:ROM
                           A 11980    	XREF __stoiu:ROM
                           A 11981    	XREF __itol:ROM
                           A 11982    	XREF __ildix:ROM
                           A 11983    	XREF __istix:ROM
                           A 11984    	XREF __imul_b:ROM
                           A 11985    	XREF __ladd_b:ROM
                           A 11986    	XREF __ishl_b:ROM
                           A 11987    	XREF __ishru_b:ROM
                           A 11988    	XDEF _main
                           A 11989    	XDEF _draw_background
                           A 11990    	XDEF _setup_snake
                           A 11991    	XDEF _grow_snake
                           A 11992    	XDEF _move_snake
                           A 11993    	XDEF _prand
                           A 11994    	XDEF _xorshift24
                           A 11995    	XDEF _check_collision
                           A 11996    	XDEF _change_score
                           A 11997    	XDEF _show_score
                           A 11998    	XDEF _draw_top_frame
                           A 11999    	XDEF _draw_bottom_frame
                           A 12000    	XDEF _setup_text_sprites
                           A 12001    	XDEF _safe_strcpy
                           A 12002    	XDEF _alt_atoi
                           A 12003    	XDEF _raw_text_centre
                           A 12004    	XDEF _raw_text_multi_centre
                           A 12005    	XDEF _raw_text
                           A 12006    	XDEF _longest_stretch
                           A 12007    	XDEF _count
                           A 12008    	XDEF _load_font_frame
                           A 12009    	XDEF _load_bmp_direct
                           A 12010    	XDEF _twiddle_buffer
                           A 12011    	XDEF _play_sound
                           A 12012    	XDEF _setKthBit_24
                           A 12013    	XDEF _setKthBit_16
                           A 12014    	XDEF _setKthBit
                           A 12015    	XDEF _isKthBitSet_24
                           A 12016    	XDEF _isKthBitSet_16
                           A 12017    	XDEF _isKthBitSet
                           A 12018    	XDEF _dump_sprites
                           A 12019    	XDEF _refresh_screen
                           A 12020    	XDEF _clear_screen
                           A 12021    	XDEF _max
                           A 12022    	XDEF _min
                           A 12023    	XDEF _delay_secs
                           A 12024    	XDEF _game
                           A 12025    	END


Errors: 0
Warnings: 0
Lines Assembled: 12026
